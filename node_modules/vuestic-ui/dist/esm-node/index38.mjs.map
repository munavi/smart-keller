{"version":3,"file":"index38.mjs","sources":["../../src/components/va-progress-bar/VaProgressBar.vue","../../src/components/va-progress-bar/VaProgressBar.vue?vue&type=template&id=ab4dd37e&lang.js","../../src/components/va-progress-bar/index.ts"],"sourcesContent":["<template>\n  <div class=\"va-progress-bar\" :class=\"rootClass\" :style=\"rootStyle\">\n    <div v-if=\"!isLarge\" class=\"va-progress-bar__info\">\n      <slot />\n    </div>\n    <div class=\"va-progress-bar__wrapper\">\n      <div class=\"va-progress-bar__buffer\" :style=\"bufferStyle\" />\n\n      <template v-if=\"indeterminate\">\n        <div\n          :style=\"intermediateStyle\"\n          class=\"va-progress-bar__progress--indeterminate-start\"\n        />\n        <div\n          :style=\"intermediateStyle\"\n          class=\"va-progress-bar__progress--indeterminate-end\"\n        />\n      </template>\n      <div v-else class=\"va-progress-bar__progress\" :style=\"progressStyle\">\n        <slot v-if=\"isLarge\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport clamp from 'lodash/clamp.js'\nimport { computed, defineComponent, PropType } from 'vue'\nimport { useColors } from '../../services/color-config/color-config'\n\ntype VaProgressSize = 'medium' | 'large' | 'small';\n\nexport default defineComponent({\n  name: 'VaProgressBar',\n\n  props: {\n    modelValue: { type: Number, default: 0 },\n    indeterminate: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    size: {\n      type: [Number, String] as PropType<number | VaProgressSize>,\n      default: 'medium',\n    },\n    buffer: { type: Number, default: 100 },\n    rounded: { type: Boolean, default: true },\n    reverse: { type: Boolean, default: false },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n\n    const isLarge = computed(() => props.size === 'large')\n    const isTextSize = computed(() => typeof props.size === 'string' && ['small', 'medium', 'large'].includes(props.size))\n\n    const getCSSHeight = () => {\n      if (typeof props.size === 'number') { return `${props.size}px` }\n      if (isTextSize.value) { return }\n\n      return props.size\n    }\n\n    return {\n      isLarge,\n\n      rootClass: computed(() => ({\n        'va-progress-bar': true,\n        'va-progress-bar--square': !props.rounded,\n        [`va-progress-bar--${props.size}`]: isTextSize.value,\n      })),\n\n      rootStyle: computed(() => ({\n        height: getCSSHeight(),\n      })),\n\n      bufferStyle: computed(() => ({\n        width: `${props.indeterminate ? 100 : clamp(props.buffer, 0, 100)}%`,\n        backgroundColor: getColor(props.color),\n        [props.reverse ? 'right' : 'left']: 0,\n      })),\n\n      progressStyle: computed(() => ({\n        width: `${clamp(props.modelValue, 0, 100)}%`,\n        backgroundColor: getColor(props.color),\n        marginLeft: props.reverse ? 'auto' : undefined,\n      })),\n\n      intermediateStyle: computed(() => ({\n        backgroundColor: getColor(props.color),\n        animationDirection: props.reverse ? 'reverse' : 'normal',\n      })),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-progress-bar {\n  width: var(--va-progress-bar-width);\n  position: var(--va-progress-bar-position);\n  overflow: var(--va-progress-bar-overflow);\n  font-family: var(--va-font-family);\n  height: var(--va-progress-bar-height);\n\n  &--small {\n    height: var(--va-progress-bar-sm-height);\n  }\n\n  &--large {\n    height: var(--va-progress-bar-lg-height);\n  }\n\n  &__info {\n    font-weight: var(--va-progress-bar-info-font-weight);\n    text-align: var(--va-progress-bar-info-text-align);\n    text-transform: var(--va-progress-bar-info-text-transform);\n\n    &:not(:empty) {\n      margin-bottom: 0.3125rem;\n    }\n  }\n\n  &__wrapper {\n    position: var(--va-progress-bar--wrapper-position);\n    overflow: var(--va-progress-bar--wrapper-overflow);\n    border-radius: var(--va-progress-bar--wrapper-border-radius);\n    height: inherit;\n\n    &__square {\n      border-radius: var(--va-progress-bar-square-border-radius);\n    }\n  }\n\n  &__buffer {\n    position: var(--va-progress-bar-buffer-position);\n    top: var(--va-progress-bar-buffer-top);\n    height: inherit;\n    border-radius: inherit;\n    opacity: var(--va-progress-bar-buffer-opacity);\n    transition: var(--va-progress-bar-buffer-transition);\n  }\n\n  &__progress {\n    height: inherit;\n    border-radius: inherit;\n    transition: var(--va-progress-bar-transition);\n    text-align: var(--va-progress-bar-text-align);\n    color: var(--va-progress-bar-color);\n    letter-spacing: var(--va-progress-bar-letter-spacing);\n    line-height: var(--va-progress-bar-line-height);\n    font-size: var(--va-progress-bar-font-size);\n    font-weight: var(--va-progress-bar-font-weight);\n\n    &--indeterminate-start {\n      animation: va-progress-bar-indeterminate-start 2s ease-in infinite;\n      position: absolute;\n      height: inherit;\n    }\n\n    &--indeterminate-end {\n      animation: va-progress-bar-indeterminate-end 2s ease-out 1s infinite;\n      position: absolute;\n      height: inherit;\n    }\n  }\n}\n\n@keyframes va-progress-bar-indeterminate-start {\n  0% {\n    width: 10%;\n    left: -10%;\n  }\n\n  50% {\n    width: 100%;\n    left: 100%;\n  }\n\n  100% {\n    width: 100%;\n    left: 100%;\n  }\n}\n\n@keyframes va-progress-bar-indeterminate-end {\n  0% {\n    width: 100%;\n    left: -100%;\n  }\n\n  50% {\n    width: 10%;\n    left: 100%;\n  }\n\n  100% {\n    width: 10%;\n    left: 100%;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-progress-bar\" :class=\"rootClass\" :style=\"rootStyle\">\n    <div v-if=\"!isLarge\" class=\"va-progress-bar__info\">\n      <slot />\n    </div>\n    <div class=\"va-progress-bar__wrapper\">\n      <div class=\"va-progress-bar__buffer\" :style=\"bufferStyle\" />\n\n      <template v-if=\"indeterminate\">\n        <div\n          :style=\"intermediateStyle\"\n          class=\"va-progress-bar__progress--indeterminate-start\"\n        />\n        <div\n          :style=\"intermediateStyle\"\n          class=\"va-progress-bar__progress--indeterminate-end\"\n        />\n      </template>\n      <div v-else class=\"va-progress-bar__progress\" :style=\"progressStyle\">\n        <slot v-if=\"isLarge\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport clamp from 'lodash/clamp.js'\nimport { computed, defineComponent, PropType } from 'vue'\nimport { useColors } from '../../services/color-config/color-config'\n\ntype VaProgressSize = 'medium' | 'large' | 'small';\n\nexport default defineComponent({\n  name: 'VaProgressBar',\n\n  props: {\n    modelValue: { type: Number, default: 0 },\n    indeterminate: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    size: {\n      type: [Number, String] as PropType<number | VaProgressSize>,\n      default: 'medium',\n    },\n    buffer: { type: Number, default: 100 },\n    rounded: { type: Boolean, default: true },\n    reverse: { type: Boolean, default: false },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n\n    const isLarge = computed(() => props.size === 'large')\n    const isTextSize = computed(() => typeof props.size === 'string' && ['small', 'medium', 'large'].includes(props.size))\n\n    const getCSSHeight = () => {\n      if (typeof props.size === 'number') { return `${props.size}px` }\n      if (isTextSize.value) { return }\n\n      return props.size\n    }\n\n    return {\n      isLarge,\n\n      rootClass: computed(() => ({\n        'va-progress-bar': true,\n        'va-progress-bar--square': !props.rounded,\n        [`va-progress-bar--${props.size}`]: isTextSize.value,\n      })),\n\n      rootStyle: computed(() => ({\n        height: getCSSHeight(),\n      })),\n\n      bufferStyle: computed(() => ({\n        width: `${props.indeterminate ? 100 : clamp(props.buffer, 0, 100)}%`,\n        backgroundColor: getColor(props.color),\n        [props.reverse ? 'right' : 'left']: 0,\n      })),\n\n      progressStyle: computed(() => ({\n        width: `${clamp(props.modelValue, 0, 100)}%`,\n        backgroundColor: getColor(props.color),\n        marginLeft: props.reverse ? 'auto' : undefined,\n      })),\n\n      intermediateStyle: computed(() => ({\n        backgroundColor: getColor(props.color),\n        animationDirection: props.reverse ? 'reverse' : 'normal',\n      })),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-progress-bar {\n  width: var(--va-progress-bar-width);\n  position: var(--va-progress-bar-position);\n  overflow: var(--va-progress-bar-overflow);\n  font-family: var(--va-font-family);\n  height: var(--va-progress-bar-height);\n\n  &--small {\n    height: var(--va-progress-bar-sm-height);\n  }\n\n  &--large {\n    height: var(--va-progress-bar-lg-height);\n  }\n\n  &__info {\n    font-weight: var(--va-progress-bar-info-font-weight);\n    text-align: var(--va-progress-bar-info-text-align);\n    text-transform: var(--va-progress-bar-info-text-transform);\n\n    &:not(:empty) {\n      margin-bottom: 0.3125rem;\n    }\n  }\n\n  &__wrapper {\n    position: var(--va-progress-bar--wrapper-position);\n    overflow: var(--va-progress-bar--wrapper-overflow);\n    border-radius: var(--va-progress-bar--wrapper-border-radius);\n    height: inherit;\n\n    &__square {\n      border-radius: var(--va-progress-bar-square-border-radius);\n    }\n  }\n\n  &__buffer {\n    position: var(--va-progress-bar-buffer-position);\n    top: var(--va-progress-bar-buffer-top);\n    height: inherit;\n    border-radius: inherit;\n    opacity: var(--va-progress-bar-buffer-opacity);\n    transition: var(--va-progress-bar-buffer-transition);\n  }\n\n  &__progress {\n    height: inherit;\n    border-radius: inherit;\n    transition: var(--va-progress-bar-transition);\n    text-align: var(--va-progress-bar-text-align);\n    color: var(--va-progress-bar-color);\n    letter-spacing: var(--va-progress-bar-letter-spacing);\n    line-height: var(--va-progress-bar-line-height);\n    font-size: var(--va-progress-bar-font-size);\n    font-weight: var(--va-progress-bar-font-weight);\n\n    &--indeterminate-start {\n      animation: va-progress-bar-indeterminate-start 2s ease-in infinite;\n      position: absolute;\n      height: inherit;\n    }\n\n    &--indeterminate-end {\n      animation: va-progress-bar-indeterminate-end 2s ease-out 1s infinite;\n      position: absolute;\n      height: inherit;\n    }\n  }\n}\n\n@keyframes va-progress-bar-indeterminate-start {\n  0% {\n    width: 10%;\n    left: -10%;\n  }\n\n  50% {\n    width: 100%;\n    left: 100%;\n  }\n\n  100% {\n    width: 100%;\n    left: 100%;\n  }\n}\n\n@keyframes va-progress-bar-indeterminate-end {\n  0% {\n    width: 100%;\n    left: -100%;\n  }\n\n  50% {\n    width: 10%;\n    left: 100%;\n  }\n\n  100% {\n    width: 10%;\n    left: 100%;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaProgressBarComponent from './VaProgressBar.vue'\n\nexport const VaProgressBar = withConfigTransport(VaProgressBarComponent)\n"],"names":["defineComponent","name","props","modelValue","type","Number","default","indeterminate","Boolean","color","String","size","buffer","rounded","reverse","setup","getColor","useColors","isLarge","computed","isTextSize","includes","rootClass","value","rootStyle","height","bufferStyle","width","clamp","backgroundColor","progressStyle","marginLeft","undefined","intermediateStyle","animationDirection","class","_createElementBlock","_ctx","style","_hoisted_1","_renderSlot","_createElementVNode","_hoisted_2","VaProgressBar","withConfigTransport","VaProgressBarComponent"],"mappings":"0bAgCA,MAAeA,EAAgB,CAC7BC,KAAM,gBAENC,MAAO,CACLC,WAAY,CAAEC,KAAMC,OAAQC,QAAS,GACrCC,cAAe,CAAEH,KAAMI,QAASF,SAAS,GACzCG,MAAO,CAAEL,KAAMM,OAAQJ,QAAS,WAChCK,KAAM,CACJP,KAAM,CAACC,OAAQK,QACfJ,QAAS,UAEXM,OAAQ,CAAER,KAAMC,OAAQC,QAAS,KACjCO,QAAS,CAAET,KAAMI,QAASF,SAAS,GACnCQ,QAAS,CAAEV,KAAMI,QAASF,SAAS,IAGrCS,MAAOb,GACL,MAAMc,SAAEA,GAAaC,IAEfC,EAAUC,GAAS,IAAqB,UAAfjB,EAAMS,OAC/BS,EAAaD,GAAS,IAA4B,iBAAfjB,EAAMS,MAAqB,CAAC,QAAS,SAAU,SAASU,SAASnB,EAAMS,QAShH,MAAO,CACLO,QAAAA,EAEAI,UAAWH,GAAS,MAClB,mBAAmB,EACnB,2BAA4BjB,EAAMW,QAClC,CAAC,oBAAoBX,EAAMS,QAASS,EAAWG,UAGjDC,UAAWL,GAAS,MAClBM,OAhBwB,iBAAfvB,EAAMS,KAA4B,GAAGT,EAAMS,SAClDS,EAAWG,WAAf,EAEOrB,EAAMS,SAgBbe,YAAaP,GAAS,MACpBQ,MAAO,GAAGzB,EAAMK,cAAgB,IAAMqB,EAAM1B,EAAMU,OAAQ,EAAG,QAC7DiB,gBAAiBb,EAASd,EAAMO,OAChC,CAACP,EAAMY,QAAU,QAAU,QAAS,MAGtCgB,cAAeX,GAAS,MACtBQ,MAAO,GAAGC,EAAM1B,EAAMC,WAAY,EAAG,QACrC0B,gBAAiBb,EAASd,EAAMO,OAChCsB,WAAY7B,EAAMY,QAAU,YAASkB,MAGvCC,kBAAmBd,GAAS,MAC1BU,gBAAiBb,EAASd,EAAMO,OAChCyB,mBAAoBhC,EAAMY,QAAU,UAAY,gCCtF/BqB,MAAM,4BAGtBA,MAAM,6EAJbC,SAAKD,SAAM,kBAA0BE,cAAYC,QAAOD,eAC1CA,4BAAZD,QAAAG,GACEC,yBAEFC,QAAAC,GACED,SAAKN,MAAM,0BAA2BG,QAAOD,wBAE7BA,EAAa,mBAA7BD,aACEK,SACGH,QAAOD,qBACRF,MAAM,0DAERM,SACGH,QAAOD,qBACRF,MAAM,mEAGVC,eAAYD,MAAM,4BAA6BG,QAAOD,mBACxCA,EAAO,QAAnBG,yHChBKG,EAAgBC,EAAoBC"}