{"version":3,"file":"index5.mjs","sources":["../../src/composables/useScroll.ts","../../src/components/va-app-bar/VaAppBar.vue","../../src/components/va-app-bar/VaAppBar.vue?vue&type=template&id=07072507&lang.js","../../src/components/va-app-bar/index.ts"],"sourcesContent":["import { onMounted, onBeforeUnmount, ref } from 'vue'\n\n/** @deprecated */\nfunction getTargetElement (target: Element | string | null) {\n  if (!target) {\n    throw new Error('Cant find target')\n  }\n\n  return typeof target === 'string' ? document.querySelector(target) : target\n}\n\nexport function setupScroll (target: Element | string, onScrollCallback: (e: Event) => void) {\n  const scrollRoot = ref(null)\n  let targetElement: Element | null\n\n  onMounted(() => {\n    targetElement = getTargetElement(target || scrollRoot.value)\n    targetElement?.addEventListener('scroll', onScrollCallback)\n  })\n\n  onBeforeUnmount(() => {\n    targetElement?.removeEventListener('scroll', onScrollCallback)\n  })\n\n  return scrollRoot\n}\n","<template>\n  <header :class=\"computedClass\" :style=\"computedStyle\" ref=\"scrollRoot\">\n    <slot />\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref } from 'vue'\n\nimport { setupScroll } from '../../composables/useScroll'\nimport { getGradientBackground, getBoxShadowColor } from '../../services/color-config/color-functions'\nimport { useColors } from '../../services/color-config/color-config'\n\nexport default defineComponent({\n  name: 'VaAppBar',\n  props: {\n    gradient: { type: Boolean as PropType<boolean>, default: false },\n    bottom: { type: Boolean as PropType<boolean>, default: false },\n    target: { type: [Object, String] as PropType<string | Element>, default: '' },\n    hideOnScroll: { type: Boolean as PropType<boolean>, default: false },\n    shadowOnScroll: { type: Boolean as PropType<boolean>, default: false },\n    shadowColor: { type: String as PropType<string>, default: '' },\n    color: { type: String as PropType<string>, default: undefined },\n  },\n  setup (props) {\n    const prevScrollPosition = ref(0)\n    const doShowShadow = ref(false)\n    const isHidden = ref(false)\n\n    const scrollRoot = setupScroll(props.target, (e) => {\n      const target = e.target as Element\n\n      if (prevScrollPosition.value < target.scrollTop) {\n        // Scroll down\n        isHidden.value = !!props.hideOnScroll\n        doShowShadow.value = !!props.shadowOnScroll\n      } else {\n        // Scroll up\n        isHidden.value = false\n        doShowShadow.value = false\n      }\n\n      prevScrollPosition.value = target.scrollTop\n    })\n\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color, 'primary'))\n\n    const shadowColorComputed = computed(() => getColor(props.shadowColor, colorComputed.value))\n\n    const computedShadow = computed(() => {\n      const shadow = getBoxShadowColor(props.shadowColor ? shadowColorComputed.value : colorComputed.value)\n      return doShowShadow.value ? `0px 0px 12px 2px ${shadow}` : ''\n    })\n\n    const transformComputed = computed(() => {\n      if (!isHidden.value) { return '' }\n      return props.bottom ? 'translateY(100%)' : 'translateY(-100%)'\n    })\n\n    const computedStyle = computed(() => ({\n      background: props.gradient ? getGradientBackground(colorComputed.value) : colorComputed.value,\n      'box-shadow': computedShadow.value,\n      transform: transformComputed.value,\n    }))\n\n    const computedClass = computed(() => ({\n      'va-app-bar': true,\n      'va-app-bar--bottom': props.bottom,\n    }))\n\n    return {\n      scrollRoot,\n      computedStyle,\n      computedClass,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-app-bar {\n  display: flex;\n  align-items: center;\n  position: var(--va-app-bar-position);\n  transition: all 0.5s ease;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: var(--va-app-bar-height);\n  min-height: var(--va-app-bar-height);\n  min-width: 100%;\n  font-family: var(--va-font-family);\n\n  &--bottom {\n    top: 100%;\n    transform: translateY(-100%);\n  }\n}\n</style>\n","<template>\n  <header :class=\"computedClass\" :style=\"computedStyle\" ref=\"scrollRoot\">\n    <slot />\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref } from 'vue'\n\nimport { setupScroll } from '../../composables/useScroll'\nimport { getGradientBackground, getBoxShadowColor } from '../../services/color-config/color-functions'\nimport { useColors } from '../../services/color-config/color-config'\n\nexport default defineComponent({\n  name: 'VaAppBar',\n  props: {\n    gradient: { type: Boolean as PropType<boolean>, default: false },\n    bottom: { type: Boolean as PropType<boolean>, default: false },\n    target: { type: [Object, String] as PropType<string | Element>, default: '' },\n    hideOnScroll: { type: Boolean as PropType<boolean>, default: false },\n    shadowOnScroll: { type: Boolean as PropType<boolean>, default: false },\n    shadowColor: { type: String as PropType<string>, default: '' },\n    color: { type: String as PropType<string>, default: undefined },\n  },\n  setup (props) {\n    const prevScrollPosition = ref(0)\n    const doShowShadow = ref(false)\n    const isHidden = ref(false)\n\n    const scrollRoot = setupScroll(props.target, (e) => {\n      const target = e.target as Element\n\n      if (prevScrollPosition.value < target.scrollTop) {\n        // Scroll down\n        isHidden.value = !!props.hideOnScroll\n        doShowShadow.value = !!props.shadowOnScroll\n      } else {\n        // Scroll up\n        isHidden.value = false\n        doShowShadow.value = false\n      }\n\n      prevScrollPosition.value = target.scrollTop\n    })\n\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color, 'primary'))\n\n    const shadowColorComputed = computed(() => getColor(props.shadowColor, colorComputed.value))\n\n    const computedShadow = computed(() => {\n      const shadow = getBoxShadowColor(props.shadowColor ? shadowColorComputed.value : colorComputed.value)\n      return doShowShadow.value ? `0px 0px 12px 2px ${shadow}` : ''\n    })\n\n    const transformComputed = computed(() => {\n      if (!isHidden.value) { return '' }\n      return props.bottom ? 'translateY(100%)' : 'translateY(-100%)'\n    })\n\n    const computedStyle = computed(() => ({\n      background: props.gradient ? getGradientBackground(colorComputed.value) : colorComputed.value,\n      'box-shadow': computedShadow.value,\n      transform: transformComputed.value,\n    }))\n\n    const computedClass = computed(() => ({\n      'va-app-bar': true,\n      'va-app-bar--bottom': props.bottom,\n    }))\n\n    return {\n      scrollRoot,\n      computedStyle,\n      computedClass,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-app-bar {\n  display: flex;\n  align-items: center;\n  position: var(--va-app-bar-position);\n  transition: all 0.5s ease;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: var(--va-app-bar-height);\n  min-height: var(--va-app-bar-height);\n  min-width: 100%;\n  font-family: var(--va-font-family);\n\n  &--bottom {\n    top: 100%;\n    transform: translateY(-100%);\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaAppBar from './VaAppBar.vue'\n\nexport default withConfigTransport(VaAppBar)\n"],"names":["setupScroll","target","onScrollCallback","scrollRoot","ref","targetElement","onMounted","getTargetElement","Error","document","querySelector","value","addEventListener","onBeforeUnmount","removeEventListener","defineComponent","name","props","gradient","type","Boolean","default","bottom","Object","String","hideOnScroll","shadowOnScroll","shadowColor","color","undefined","setup","prevScrollPosition","doShowShadow","isHidden","e","scrollTop","getColor","useColors","colorComputed","computed","shadowColorComputed","computedShadow","shadow","getBoxShadowColor","transformComputed","computedStyle","background","getGradientBackground","transform","computedClass","_createElementBlock","class","_ctx","style","_renderSlot","withConfigTransport","VaAppBar"],"mappings":"uXAWgBA,YAAaC,EAA0BC,GACrD,MAAMC,EAAaC,EAAI,MACvB,IAAIC,EAWJ,OATAC,GAAU,KACRD,EAbJ,SAASE,iBAAkBN,GACzB,IAAKA,EACH,MAAM,IAAIO,MAAM,oBAGlB,MAAyB,iBAAXP,EAAsBQ,SAASC,cAAcT,GAAUA,EAQnDM,CAAiBN,GAAUE,EAAWQ,OACtDN,MAAAA,GAAAA,EAAeO,iBAAiB,SAAUV,MAG5CW,GAAgB,KACdR,MAAAA,GAAAA,EAAeS,oBAAoB,SAAUZ,MAGxCC,ECXT,MAAeY,EAAgB,CAC7BC,KAAM,WACNC,MAAO,CACLC,SAAU,CAAEC,KAAMC,QAA8BC,SAAS,GACzDC,OAAQ,CAAEH,KAAMC,QAA8BC,SAAS,GACvDpB,OAAQ,CAAEkB,KAAM,CAACI,OAAQC,QAAuCH,QAAS,IACzEI,aAAc,CAAEN,KAAMC,QAA8BC,SAAS,GAC7DK,eAAgB,CAAEP,KAAMC,QAA8BC,SAAS,GAC/DM,YAAa,CAAER,KAAMK,OAA4BH,QAAS,IAC1DO,MAAO,CAAET,KAAMK,OAA4BH,aAASQ,IAEtDC,MAAOb,GACL,MAAMc,EAAqB3B,EAAI,GACzB4B,EAAe5B,GAAI,GACnB6B,EAAW7B,GAAI,GAEfD,EAAaH,YAAYiB,EAAMhB,QAASiC,IAC5C,MAAMjC,EAASiC,EAAEjC,OAEb8B,EAAmBpB,MAAQV,EAAOkC,WAEpCF,EAAStB,QAAUM,EAAMQ,aACzBO,EAAarB,QAAUM,EAAMS,iBAG7BO,EAAStB,OAAQ,EACjBqB,EAAarB,OAAQ,GAGvBoB,EAAmBpB,MAAQV,EAAOkC,cAG9BC,SAAEA,GAAaC,IAEfC,EAAgBC,GAAS,IAAMH,EAASnB,EAAMW,MAAO,aAErDY,EAAsBD,GAAS,IAAMH,EAASnB,EAAMU,YAAaW,EAAc3B,SAE/E8B,EAAiBF,GAAS,KAC9B,MAAMG,EAASC,EAAkB1B,EAAMU,YAAca,EAAoB7B,MAAQ2B,EAAc3B,OAC/F,OAAOqB,EAAarB,MAAQ,oBAAoB+B,IAAW,MAGvDE,EAAoBL,GAAS,IAC5BN,EAAStB,MACPM,EAAMK,OAAS,mBAAqB,oBADb,KAehC,MAAO,CACLnB,WAAAA,EACA0C,cAboBN,GAAS,MAC7BO,WAAY7B,EAAMC,SAAW6B,EAAsBT,EAAc3B,OAAS2B,EAAc3B,MACxF,aAAc8B,EAAe9B,MAC7BqC,UAAWJ,EAAkBjC,UAW7BsC,cARoBV,GAAS,MAC7B,cAAc,EACd,qBAAsBtB,EAAMK,gECpEhC4B,YAASC,QAAOC,iBAAgBC,QAAOD,iBAAehD,IAAI,eACxDkD,6ECCJ,MAAeC,EAAoBC"}