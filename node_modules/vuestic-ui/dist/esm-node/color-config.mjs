import{u as o}from"./global-config.mjs";import{ColorTranslator as s}from"colortranslator";const colorToRgba=(o,e)=>new s(o).setA(e).RGBA,getTextColor=(o,e="dark",t="white")=>{const{R:r,G:l,B:a}=new s(o);return Math.sqrt(r*r*.241+l*l*.691+a*a*.068)>130?e:t},getBoxShadowColor=o=>new s(o).setA(.4).RGBA,getHoverColor=o=>new s(o).setA(.2).RGBA,getFocusColor=o=>new s(o).setA(.3).RGBA,shiftHSLAColor=(o,e)=>{const t=new s(o);return e.h&&t.setH(t.H+e.h),e.s&&t.setS(t.S+e.s),e.l&&t.setL(t.L+e.l),e.a&&t.setA(t.A+e.a),t.HSLA},setHSLAColor=(o,e)=>{const t=new s(o);return void 0!==e.h&&t.setH(e.h),void 0!==e.s&&t.setS(e.s),void 0!==e.l&&t.setL(e.l),void 0!==e.a&&t.setA(e.a),t.HSLA},getGradientBackground=o=>`linear-gradient(to right, ${(o=>{const e=s.toHSLA(o,!1);if(e.s<10)return shiftHSLAColor(e,{h:2,s:5,l:10});if(e.s<30)return shiftHSLAColor(e,{s:-14,l:11});if(e.h>=0&&e.h<44||e.h>=285)return shiftHSLAColor(e,{h:11,s:27,l:8});if(e.h>=44&&e.h<85)return shiftHSLAColor(e,{h:3,l:9});if(e.h>=85&&e.h<165)return shiftHSLAColor(e,{h:16,l:14});if(e.h>=165&&e.h<285)return shiftHSLAColor(e,{h:-15,s:3,l:2});throw new Error("This method should handle all colors. But it didn't for some reason.")})(o)}, ${s.toHSLA(o)})`,useColors=()=>{const{setGlobalConfig:s,getGlobalConfig:e}=o(),getColors=()=>e().colors||{},t=getColors().primary,getColor=(o,s=t,e)=>{const r=getColors();return o||(o=s),r[o]?e?`var(--va-${o})`:r[o]:/^#([\da-f]{3}){1,2}$|^#([\da-f]{4}){1,2}$|(rgb|hsl)a?\((\s*-?\d+%?\s*,){2}(\s*-?\d+%?\s*,?\s*\)?)(,\s*(0?\.\d+)?|1)?\)/.test(o.toLocaleLowerCase())||e&&(o=>/var\(--.+\)/.test(o))(o)?o:("production"!==process.env.NODE_ENV&&console.warn(`'${o}' is not a proper color! Use HEX or default color themes\n      names (https://vuestic.dev/en/styles/colors#default-color-themes)`),s)};return{setColors:o=>{s((s=>({...s,colors:{...s.colors,...o}})))},getColors:getColors,getColor:getColor,getBoxShadowColor:getBoxShadowColor,getHoverColor:getHoverColor,getFocusColor:getFocusColor,getGradientBackground:getGradientBackground,getTextColor:getTextColor,shiftHSLAColor:shiftHSLAColor,setHSLAColor:setHSLAColor,colorsToCSSVariable:(o,s="va")=>Object.keys(o).filter((s=>void 0!==o[s])).reduce(((e,r)=>(e[`--${s}-${r}`]=getColor(o[r],t,!0),e)),{})}},setColors=o=>{useColors().setColors(o)},getColors=()=>useColors().getColors(),getColor=(o,s,e)=>useColors().getColor(o,s,e);export{getColors as a,getBoxShadowColor as b,getGradientBackground as c,shiftHSLAColor as d,getTextColor as e,getFocusColor as f,getColor as g,getHoverColor as h,colorToRgba as i,setColors as s,useColors as u};
//# sourceMappingURL=color-config.mjs.map
