{"version":3,"file":"index10.mjs","sources":["../../src/components/va-button-dropdown/VaButtonDropdown.vue","../../src/components/va-button-dropdown/VaButtonDropdown.vue?vue&type=template&id=1172abf3&lang.js","../../src/components/va-button-dropdown/index.ts"],"sourcesContent":["<template>\n  <div :class=\"computedClass\">\n    <va-dropdown\n      v-if=\"!$props.split\"\n      :disabled=\"$props.disabled\"\n      :placement=\"$props.placement\"\n      :offset=\"$props.offset\"\n      :keep-anchor-width=\"$props.keepAnchorWidth\"\n      :close-on-content-click=\"$props.closeOnContentClick\"\n      :stateful=\"$props.stateful\"\n      v-model=\"valueComputed\"\n    >\n      <template #anchor>\n        <va-button\n          :disabled=\"$props.disabled\"\n          :round=\"!$props.label && !$slots.label\"\n          v-bind=\"{ ...computedButtonIcons, ...computedViewStyles }\"\n          v-on=\"listeners\"\n        >\n          <slot name=\"label\">\n            {{ label }}\n          </slot>\n        </va-button>\n      </template>\n\n      <va-dropdown-content>\n        <slot />\n      </va-dropdown-content>\n    </va-dropdown>\n\n    <va-button-group\n      v-else\n      :class=\"{ 'va-button-group__left-icon': $props.leftIcon }\"\n      v-bind=\"{ ...computedViewStyles }\"\n    >\n      <va-button\n        v-if=\"!$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"{ ...computedMainButtonProps }\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n\n      <va-dropdown\n        :disabled=\"$props.disabled || $props.disableDropdown\"\n        :placement=\"$props.placement\"\n        :offset=\"$props.offset\"\n        :stateful=\"$props.stateful\"\n        v-model=\"valueComputed\"\n      >\n        <template #anchor>\n          <va-button\n            :disabled=\"$props.disabled || $props.disableDropdown\"\n            :icon=\"computedIcon\"\n            v-on=\"listeners\"\n          />\n        </template>\n        <va-dropdown-content>\n          <slot />\n        </va-dropdown-content>\n      </va-dropdown>\n\n      <va-button\n        v-if=\"$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"{ ...computedMainButtonProps }\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n    </va-button-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { useStatefulProps, useStateful } from '../../composables/useStateful'\nimport { useEmitProxy } from '../../composables/useEmitProxy'\nimport { Placement, placementsPositions } from '../../composables/usePopover'\n\nimport VaDropdown, { VaDropdownContent } from '../va-dropdown'\nimport VaButton from '../va-button'\nimport VaButtonGroup from '../va-button-group'\n\nconst { createEmits, createVOnListeners: createListeners } = useEmitProxy(\n  ['click'],\n)\n\nconst { createEmits: createMainButtonEmits, createVOnListeners: createMainButtonListeners } = useEmitProxy(\n  [{ listen: 'click', emit: 'main-button-click' }],\n)\n\nconst componentName = 'VaButtonDropdown'\n\nexport default defineComponent({\n  name: componentName,\n\n  components: {\n    VaButtonGroup,\n    VaButton,\n    VaDropdown,\n    VaDropdownContent,\n  },\n\n  emits: ['update:modelValue', ...createEmits(), ...createMainButtonEmits()],\n\n  props: {\n    ...useStatefulProps,\n\n    modelValue: { type: Boolean, default: false },\n    stateful: { type: Boolean, default: true },\n\n    color: { type: String, default: 'primary' },\n    textColor: { type: String, default: undefined },\n    size: {\n      type: String,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n    outline: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    rounded: { type: Boolean, default: true },\n    gradient: { type: Boolean, default: undefined },\n\n    icon: { type: String, default: 'expand_more' },\n    openedIcon: { type: String, default: 'expand_less' },\n    hideIcon: { type: Boolean, default: false },\n    leftIcon: { type: Boolean, default: false },\n\n    disableButton: { type: Boolean, default: false },\n    disableDropdown: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom',\n      validator: (placement: string) => placementsPositions.includes(placement),\n    },\n    offset: { type: [Number, Array] as PropType<number | [number, number]>, default: () => ([0, 1]) },\n    keepAnchorWidth: { type: Boolean, default: false },\n    closeOnContentClick: { type: Boolean, default: true },\n\n    split: { type: Boolean },\n    splitTo: { type: String, default: '' },\n    splitHref: { type: String, default: '' },\n\n    loading: { type: Boolean, default: false },\n    label: { type: String },\n  },\n\n  setup (props, { emit, slots }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    const computedIcon = computed<string>(() => {\n      return valueComputed.value ? props.openedIcon : props.icon\n    })\n\n    const computedClass = computed(() => ({\n      'va-button-dropdown': true,\n      'va-button-dropdown--split': props.split,\n      'va-button-dropdown--normal': props.size === 'normal',\n      'va-button-dropdown--large': props.size === 'large',\n      'va-button-dropdown--small': props.size === 'small',\n    }))\n\n    const computedButtonIcons = computed(() => {\n      const propName = (props.label || slots.label) && !props.leftIcon ? 'icon-right' : 'icon'\n      return props.hideIcon ? {} : { [propName]: computedIcon.value }\n    })\n\n    const computedViewStyles = computed(\n      () => pick(props, ['outline', 'gradient', 'rounded', 'flat', 'size', 'color']),\n    )\n\n    const computedMainButtonProps = computed(() => ({\n      to: props.splitTo,\n      href: props.splitHref,\n      loading: props.loading,\n    }))\n\n    return {\n      valueComputed,\n      computedIcon,\n      computedClass,\n      listeners: createListeners(emit),\n      mainButtonListeners: createMainButtonListeners(emit),\n      computedButtonIcons,\n      computedViewStyles,\n      computedMainButtonProps,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-button-dropdown {\n  display: inline-block;\n  font-family: var(--va-font-family);\n\n  .va-button {\n    margin: var(--va-button-dropdown-button-margin);\n  }\n\n  &--split {\n    .va-dropdown {\n      .va-dropdown__anchor {\n        margin: var(--va-button-dropdown-button-margin);\n      }\n    }\n\n    .va-button-group__left-icon {\n      .va-dropdown {\n        .va-button {\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n      }\n\n      > .va-button {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        border-left: none;\n      }\n    }\n\n    :not(.va-button-group__left-icon) {\n      .va-dropdown {\n        .va-button {\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div :class=\"computedClass\">\n    <va-dropdown\n      v-if=\"!$props.split\"\n      :disabled=\"$props.disabled\"\n      :placement=\"$props.placement\"\n      :offset=\"$props.offset\"\n      :keep-anchor-width=\"$props.keepAnchorWidth\"\n      :close-on-content-click=\"$props.closeOnContentClick\"\n      :stateful=\"$props.stateful\"\n      v-model=\"valueComputed\"\n    >\n      <template #anchor>\n        <va-button\n          :disabled=\"$props.disabled\"\n          :round=\"!$props.label && !$slots.label\"\n          v-bind=\"{ ...computedButtonIcons, ...computedViewStyles }\"\n          v-on=\"listeners\"\n        >\n          <slot name=\"label\">\n            {{ label }}\n          </slot>\n        </va-button>\n      </template>\n\n      <va-dropdown-content>\n        <slot />\n      </va-dropdown-content>\n    </va-dropdown>\n\n    <va-button-group\n      v-else\n      :class=\"{ 'va-button-group__left-icon': $props.leftIcon }\"\n      v-bind=\"{ ...computedViewStyles }\"\n    >\n      <va-button\n        v-if=\"!$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"{ ...computedMainButtonProps }\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n\n      <va-dropdown\n        :disabled=\"$props.disabled || $props.disableDropdown\"\n        :placement=\"$props.placement\"\n        :offset=\"$props.offset\"\n        :stateful=\"$props.stateful\"\n        v-model=\"valueComputed\"\n      >\n        <template #anchor>\n          <va-button\n            :disabled=\"$props.disabled || $props.disableDropdown\"\n            :icon=\"computedIcon\"\n            v-on=\"listeners\"\n          />\n        </template>\n        <va-dropdown-content>\n          <slot />\n        </va-dropdown-content>\n      </va-dropdown>\n\n      <va-button\n        v-if=\"$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"{ ...computedMainButtonProps }\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n    </va-button-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { useStatefulProps, useStateful } from '../../composables/useStateful'\nimport { useEmitProxy } from '../../composables/useEmitProxy'\nimport { Placement, placementsPositions } from '../../composables/usePopover'\n\nimport VaDropdown, { VaDropdownContent } from '../va-dropdown'\nimport VaButton from '../va-button'\nimport VaButtonGroup from '../va-button-group'\n\nconst { createEmits, createVOnListeners: createListeners } = useEmitProxy(\n  ['click'],\n)\n\nconst { createEmits: createMainButtonEmits, createVOnListeners: createMainButtonListeners } = useEmitProxy(\n  [{ listen: 'click', emit: 'main-button-click' }],\n)\n\nconst componentName = 'VaButtonDropdown'\n\nexport default defineComponent({\n  name: componentName,\n\n  components: {\n    VaButtonGroup,\n    VaButton,\n    VaDropdown,\n    VaDropdownContent,\n  },\n\n  emits: ['update:modelValue', ...createEmits(), ...createMainButtonEmits()],\n\n  props: {\n    ...useStatefulProps,\n\n    modelValue: { type: Boolean, default: false },\n    stateful: { type: Boolean, default: true },\n\n    color: { type: String, default: 'primary' },\n    textColor: { type: String, default: undefined },\n    size: {\n      type: String,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n    outline: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    rounded: { type: Boolean, default: true },\n    gradient: { type: Boolean, default: undefined },\n\n    icon: { type: String, default: 'expand_more' },\n    openedIcon: { type: String, default: 'expand_less' },\n    hideIcon: { type: Boolean, default: false },\n    leftIcon: { type: Boolean, default: false },\n\n    disableButton: { type: Boolean, default: false },\n    disableDropdown: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom',\n      validator: (placement: string) => placementsPositions.includes(placement),\n    },\n    offset: { type: [Number, Array] as PropType<number | [number, number]>, default: () => ([0, 1]) },\n    keepAnchorWidth: { type: Boolean, default: false },\n    closeOnContentClick: { type: Boolean, default: true },\n\n    split: { type: Boolean },\n    splitTo: { type: String, default: '' },\n    splitHref: { type: String, default: '' },\n\n    loading: { type: Boolean, default: false },\n    label: { type: String },\n  },\n\n  setup (props, { emit, slots }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    const computedIcon = computed<string>(() => {\n      return valueComputed.value ? props.openedIcon : props.icon\n    })\n\n    const computedClass = computed(() => ({\n      'va-button-dropdown': true,\n      'va-button-dropdown--split': props.split,\n      'va-button-dropdown--normal': props.size === 'normal',\n      'va-button-dropdown--large': props.size === 'large',\n      'va-button-dropdown--small': props.size === 'small',\n    }))\n\n    const computedButtonIcons = computed(() => {\n      const propName = (props.label || slots.label) && !props.leftIcon ? 'icon-right' : 'icon'\n      return props.hideIcon ? {} : { [propName]: computedIcon.value }\n    })\n\n    const computedViewStyles = computed(\n      () => pick(props, ['outline', 'gradient', 'rounded', 'flat', 'size', 'color']),\n    )\n\n    const computedMainButtonProps = computed(() => ({\n      to: props.splitTo,\n      href: props.splitHref,\n      loading: props.loading,\n    }))\n\n    return {\n      valueComputed,\n      computedIcon,\n      computedClass,\n      listeners: createListeners(emit),\n      mainButtonListeners: createMainButtonListeners(emit),\n      computedButtonIcons,\n      computedViewStyles,\n      computedMainButtonProps,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-button-dropdown {\n  display: inline-block;\n  font-family: var(--va-font-family);\n\n  .va-button {\n    margin: var(--va-button-dropdown-button-margin);\n  }\n\n  &--split {\n    .va-dropdown {\n      .va-dropdown__anchor {\n        margin: var(--va-button-dropdown-button-margin);\n      }\n    }\n\n    .va-button-group__left-icon {\n      .va-dropdown {\n        .va-button {\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n      }\n\n      > .va-button {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        border-left: none;\n      }\n    }\n\n    :not(.va-button-group__left-icon) {\n      .va-dropdown {\n        .va-button {\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaButtonDropdown from './VaButtonDropdown.vue'\n\nexport default withConfigTransport(VaButtonDropdown)\n"],"names":["createEmits","createVOnListeners","createListeners","useEmitProxy","createMainButtonEmits","createMainButtonListeners","listen","emit","defineComponent","name","components","VaButtonGroup","VaButton","VaDropdown","VaDropdownContent","emits","props","useStatefulProps","modelValue","type","Boolean","default","stateful","color","String","textColor","undefined","size","validator","value","includes","outline","flat","rounded","gradient","icon","openedIcon","hideIcon","leftIcon","disableButton","disableDropdown","disabled","placement","placementsPositions","offset","Number","Array","keepAnchorWidth","closeOnContentClick","split","splitTo","splitHref","loading","label","setup","slots","valueComputed","useStateful","computedIcon","computed","computedClass","computedButtonIcons","propName","computedViewStyles","pick","computedMainButtonProps","to","href","listeners","mainButtonListeners","_createElementBlock","class","_ctx","_createBlock","_mergeProps","_toHandlers","_renderSlot","_createVNode","anchor","round","withConfigTransport","VaButtonDropdown"],"mappings":"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"}