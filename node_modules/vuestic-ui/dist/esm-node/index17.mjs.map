{"version":3,"file":"index17.mjs","sources":["../../src/components/va-collapse/VaCollapse.vue","../../src/components/va-collapse/VaCollapse.vue?vue&type=template&id=10b321b0&lang.js","../../src/components/va-collapse/index.ts"],"sourcesContent":["<template>\n  <div class=\"va-collapse\" :class=\"computedClasses\">\n    <div\n      class=\"va-collapse__header\"\n      v-on=\"keyboardFocusListeners\"\n      @click=\"toggle()\"\n      @focus=\"$emit('focus')\"\n      @keydown.enter=\"toggle()\"\n      @keydown.space=\"toggle()\"\n      :tabindex=\"disabled ? -1 : 0\"\n    >\n      <slot\n        name=\"header\"\n        v-bind=\"{\n          value: computedModelValue,\n          hasKeyboardFocus: hasKeyboardFocus\n        }\"\n      >\n        <div\n          class=\"va-collapse__header__content\"\n          :style=\"headerStyle\"\n        >\n          <va-icon\n            v-if=\"icon\"\n            class=\"va-collapse__header__icon\"\n            :name=\"icon\"\n            :color=\"textColorComputed\"\n          />\n          <div class=\"va-collapse__header__text\">\n            {{ header }}\n          </div>\n          <va-icon\n            class=\"va-collapse__header__icon\"\n            :name=\"computedModelValue ? 'expand_less' : 'expand_more'\"\n            :color=\"textColorComputed\"\n          />\n        </div>\n      </slot>\n    </div>\n    <div class=\"va-collapse__body\" ref=\"body\" :style=\"contentStyle\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport VaIcon from '../va-icon'\nimport { useColors } from '../../composables/useColor'\nimport { computed, defineComponent, shallowRef } from 'vue'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\nimport { useAccordionItem } from '../va-accordion/hooks/useAccordion'\nimport { useSyncProp } from '../../composables/useSyncProp'\nimport { useTextColor } from '../../composables/useTextColor'\n\nexport default defineComponent({\n  name: 'VaCollapse',\n  components: {\n    VaIcon,\n  },\n  props: {\n    modelValue: { type: Boolean, default: undefined },\n    disabled: { type: Boolean, default: false },\n    header: { type: String, default: '' },\n    icon: { type: String, default: '' },\n    solid: { type: Boolean, default: false },\n    color: { type: String, default: 'background' },\n    textColor: { type: String, default: '' },\n    colorAll: { type: Boolean, default: false },\n  },\n  emits: ['focus', 'update:modelValue'],\n\n  setup (props, { emit, slots }) {\n    const body = shallowRef<HTMLElement | null>(null)\n    const [computedModelValue] = useSyncProp('modelValue', props, emit, false)\n\n    const { getColor, getHoverColor } = useColors()\n    const { accordionProps, toggle } = useAccordionItem(computedModelValue)\n\n    const { textColorComputed } = useTextColor(props.color)\n\n    const getTextNodeHeight = (textNode: Node) => {\n      const range = document.createRange()\n      range.selectNodeContents(textNode)\n      const rect = range.getBoundingClientRect()\n\n      return rect.bottom - rect.top\n    }\n\n    const getNodeHeight = (node: Node) => {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeName\n      if (node.nodeName === '#text') { return getTextNodeHeight(node) }\n      if (node.nodeName === '#comment') { return 0 }\n\n      return (node as Element).clientHeight\n    }\n\n    const height = computed(() => {\n      if (!computedModelValue.value || !body.value) { return 0 }\n\n      const nodes = Array.from(body.value.childNodes) as HTMLElement[]\n      return nodes.reduce((result: number, node: HTMLElement) => result + getNodeHeight(node), 0)\n    })\n\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const getTransition = () => {\n      const duration = height.value / 1000 * 0.2\n      return `${duration > 0.2 ? duration : 0.2}s`\n    }\n\n    const getBackground = () => {\n      return props.color && props.colorAll\n        ? getHoverColor(getColor(props.color))\n        : ''\n    }\n\n    return {\n      body,\n      height,\n\n      toggle,\n      computedModelValue,\n\n      hasKeyboardFocus,\n      keyboardFocusListeners,\n\n      textColorComputed,\n\n      computedClasses: computed(() => ({\n        'va-collapse--disabled': props.disabled,\n        'va-collapse--solid': props.solid,\n        'va-collapse--active': props.solid && computedModelValue.value,\n        'va-collapse--popout': accordionProps.value.popout && computedModelValue.value,\n        'va-collapse--inset': accordionProps.value.inset && computedModelValue.value,\n      })),\n\n      headerStyle: computed(() => ({\n        paddingLeft: props.icon && 0,\n        color: textColorComputed.value,\n        backgroundColor: props.color ? getColor(props.color) : '',\n        boxShadow: hasKeyboardFocus.value ? '0 0 0.5rem 0 rgba(0, 0, 0, 0.3)' : '',\n      })),\n\n      contentStyle: computed(() => {\n        const hasContent = computedModelValue.value && !!slots.default?.()[0]\n\n        return {\n          visibility: hasContent ? 'visible' as const : 'hidden' as const,\n          height: `${height.value}px`,\n          transitionDuration: getTransition(),\n          background: hasContent ? getBackground() : '',\n        }\n      }),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-collapse {\n  transition: var(--va-collapse-transition, var(--va-swing-transition));\n  font-family: var(--va-font-family);\n\n  &__body {\n    transition: var(--va-collapse-body-transition);\n    overflow: var(--va-collapse-body-overflow);\n    margin-top: var(--va-collapse-body-margin-top);\n  }\n\n  &__header {\n    &__content {\n      display: var(--va-collapse-header-content-display);\n      justify-content: var(--va-collapse-header-content-justify-content);\n      cursor: var(--va-collapse-header-content-cursor);\n      background-color: var(--va-collapse-header-content-background-color);\n      box-shadow: var(--va-collapse-header-content-box-shadow, var(--va-block-box-shadow));\n      border-radius: var(--va-collapse-header-content-border-radius, var(--va-block-border-radius));\n      align-items: var(--va-collapse-header-content-align-items);\n      padding-top: var(--va-collapse-header-content-padding-top);\n      padding-bottom: var(--va-collapse-header-content-padding-bottom);\n      padding-left: var(--va-collapse-header-content-padding-left);\n    }\n\n    &__text {\n      width: var(--va-collapse-header-content-text-width);\n    }\n\n    &__icon {\n      @include flex-center();\n\n      min-width: var(--va-collapse-header-content-icon-min-width);\n      margin-left: var(--va-collapse-header-content-icon-margin-left);\n      margin-right: var(--va-collapse-header-content-icon-margin-right);\n      color: var(--va-collapse-header-content-icon-color);\n    }\n  }\n\n  &--solid {\n    box-shadow: var(--va-collapse-solid-box-shadow);\n    border-radius: var(--va-collapse-solid-border-radius);\n\n    .va-collapse {\n      &__header {\n        &__content {\n          border-radius: var(--va-collapse-solid-header-content-border-radius, var(--va-block-border-radius));\n          transition: var(--va-collapse-solid-header-content-transition);\n          box-shadow: var(--va-collapse-solid-header-content-box-shadow, var(--va-block-box-shadow));\n          background-color: var(--va-collapse-solid-header-content-background-color);\n        }\n      }\n\n      &__body {\n        border-radius: var(--va-collapse-solid-body-border-radius);\n        margin-top: var(--va-collapse-solid-body-margin-top);\n      }\n    }\n  }\n\n  &--popout {\n    margin: var(--va-collapse-popout-margin);\n  }\n\n  &--inset {\n    margin: var(--va-collapse-inset-margin);\n  }\n\n  &--disabled {\n    @include va-disabled();\n\n    pointer-events: none;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-collapse\" :class=\"computedClasses\">\n    <div\n      class=\"va-collapse__header\"\n      v-on=\"keyboardFocusListeners\"\n      @click=\"toggle()\"\n      @focus=\"$emit('focus')\"\n      @keydown.enter=\"toggle()\"\n      @keydown.space=\"toggle()\"\n      :tabindex=\"disabled ? -1 : 0\"\n    >\n      <slot\n        name=\"header\"\n        v-bind=\"{\n          value: computedModelValue,\n          hasKeyboardFocus: hasKeyboardFocus\n        }\"\n      >\n        <div\n          class=\"va-collapse__header__content\"\n          :style=\"headerStyle\"\n        >\n          <va-icon\n            v-if=\"icon\"\n            class=\"va-collapse__header__icon\"\n            :name=\"icon\"\n            :color=\"textColorComputed\"\n          />\n          <div class=\"va-collapse__header__text\">\n            {{ header }}\n          </div>\n          <va-icon\n            class=\"va-collapse__header__icon\"\n            :name=\"computedModelValue ? 'expand_less' : 'expand_more'\"\n            :color=\"textColorComputed\"\n          />\n        </div>\n      </slot>\n    </div>\n    <div class=\"va-collapse__body\" ref=\"body\" :style=\"contentStyle\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport VaIcon from '../va-icon'\nimport { useColors } from '../../composables/useColor'\nimport { computed, defineComponent, shallowRef } from 'vue'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\nimport { useAccordionItem } from '../va-accordion/hooks/useAccordion'\nimport { useSyncProp } from '../../composables/useSyncProp'\nimport { useTextColor } from '../../composables/useTextColor'\n\nexport default defineComponent({\n  name: 'VaCollapse',\n  components: {\n    VaIcon,\n  },\n  props: {\n    modelValue: { type: Boolean, default: undefined },\n    disabled: { type: Boolean, default: false },\n    header: { type: String, default: '' },\n    icon: { type: String, default: '' },\n    solid: { type: Boolean, default: false },\n    color: { type: String, default: 'background' },\n    textColor: { type: String, default: '' },\n    colorAll: { type: Boolean, default: false },\n  },\n  emits: ['focus', 'update:modelValue'],\n\n  setup (props, { emit, slots }) {\n    const body = shallowRef<HTMLElement | null>(null)\n    const [computedModelValue] = useSyncProp('modelValue', props, emit, false)\n\n    const { getColor, getHoverColor } = useColors()\n    const { accordionProps, toggle } = useAccordionItem(computedModelValue)\n\n    const { textColorComputed } = useTextColor(props.color)\n\n    const getTextNodeHeight = (textNode: Node) => {\n      const range = document.createRange()\n      range.selectNodeContents(textNode)\n      const rect = range.getBoundingClientRect()\n\n      return rect.bottom - rect.top\n    }\n\n    const getNodeHeight = (node: Node) => {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeName\n      if (node.nodeName === '#text') { return getTextNodeHeight(node) }\n      if (node.nodeName === '#comment') { return 0 }\n\n      return (node as Element).clientHeight\n    }\n\n    const height = computed(() => {\n      if (!computedModelValue.value || !body.value) { return 0 }\n\n      const nodes = Array.from(body.value.childNodes) as HTMLElement[]\n      return nodes.reduce((result: number, node: HTMLElement) => result + getNodeHeight(node), 0)\n    })\n\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const getTransition = () => {\n      const duration = height.value / 1000 * 0.2\n      return `${duration > 0.2 ? duration : 0.2}s`\n    }\n\n    const getBackground = () => {\n      return props.color && props.colorAll\n        ? getHoverColor(getColor(props.color))\n        : ''\n    }\n\n    return {\n      body,\n      height,\n\n      toggle,\n      computedModelValue,\n\n      hasKeyboardFocus,\n      keyboardFocusListeners,\n\n      textColorComputed,\n\n      computedClasses: computed(() => ({\n        'va-collapse--disabled': props.disabled,\n        'va-collapse--solid': props.solid,\n        'va-collapse--active': props.solid && computedModelValue.value,\n        'va-collapse--popout': accordionProps.value.popout && computedModelValue.value,\n        'va-collapse--inset': accordionProps.value.inset && computedModelValue.value,\n      })),\n\n      headerStyle: computed(() => ({\n        paddingLeft: props.icon && 0,\n        color: textColorComputed.value,\n        backgroundColor: props.color ? getColor(props.color) : '',\n        boxShadow: hasKeyboardFocus.value ? '0 0 0.5rem 0 rgba(0, 0, 0, 0.3)' : '',\n      })),\n\n      contentStyle: computed(() => {\n        const hasContent = computedModelValue.value && !!slots.default?.()[0]\n\n        return {\n          visibility: hasContent ? 'visible' as const : 'hidden' as const,\n          height: `${height.value}px`,\n          transitionDuration: getTransition(),\n          background: hasContent ? getBackground() : '',\n        }\n      }),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-collapse {\n  transition: var(--va-collapse-transition, var(--va-swing-transition));\n  font-family: var(--va-font-family);\n\n  &__body {\n    transition: var(--va-collapse-body-transition);\n    overflow: var(--va-collapse-body-overflow);\n    margin-top: var(--va-collapse-body-margin-top);\n  }\n\n  &__header {\n    &__content {\n      display: var(--va-collapse-header-content-display);\n      justify-content: var(--va-collapse-header-content-justify-content);\n      cursor: var(--va-collapse-header-content-cursor);\n      background-color: var(--va-collapse-header-content-background-color);\n      box-shadow: var(--va-collapse-header-content-box-shadow, var(--va-block-box-shadow));\n      border-radius: var(--va-collapse-header-content-border-radius, var(--va-block-border-radius));\n      align-items: var(--va-collapse-header-content-align-items);\n      padding-top: var(--va-collapse-header-content-padding-top);\n      padding-bottom: var(--va-collapse-header-content-padding-bottom);\n      padding-left: var(--va-collapse-header-content-padding-left);\n    }\n\n    &__text {\n      width: var(--va-collapse-header-content-text-width);\n    }\n\n    &__icon {\n      @include flex-center();\n\n      min-width: var(--va-collapse-header-content-icon-min-width);\n      margin-left: var(--va-collapse-header-content-icon-margin-left);\n      margin-right: var(--va-collapse-header-content-icon-margin-right);\n      color: var(--va-collapse-header-content-icon-color);\n    }\n  }\n\n  &--solid {\n    box-shadow: var(--va-collapse-solid-box-shadow);\n    border-radius: var(--va-collapse-solid-border-radius);\n\n    .va-collapse {\n      &__header {\n        &__content {\n          border-radius: var(--va-collapse-solid-header-content-border-radius, var(--va-block-border-radius));\n          transition: var(--va-collapse-solid-header-content-transition);\n          box-shadow: var(--va-collapse-solid-header-content-box-shadow, var(--va-block-box-shadow));\n          background-color: var(--va-collapse-solid-header-content-background-color);\n        }\n      }\n\n      &__body {\n        border-radius: var(--va-collapse-solid-body-border-radius);\n        margin-top: var(--va-collapse-solid-body-margin-top);\n      }\n    }\n  }\n\n  &--popout {\n    margin: var(--va-collapse-popout-margin);\n  }\n\n  &--inset {\n    margin: var(--va-collapse-inset-margin);\n  }\n\n  &--disabled {\n    @include va-disabled();\n\n    pointer-events: none;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaCollapse from './VaCollapse.vue'\n\nexport default withConfigTransport(VaCollapse)\n"],"names":["defineComponent","name","components","VaIcon","props","modelValue","type","Boolean","default","undefined","disabled","header","String","icon","solid","color","textColor","colorAll","emits","setup","emit","slots","body","shallowRef","computedModelValue","useSyncProp","getColor","getHoverColor","useColors","accordionProps","toggle","useAccordionItem","textColorComputed","useTextColor","getNodeHeight","node","nodeName","textNode","range","document","createRange","selectNodeContents","rect","getBoundingClientRect","bottom","top","getTextNodeHeight","clientHeight","height","computed","value","Array","from","childNodes","reduce","result","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","getTransition","duration","computedClasses","popout","inset","headerStyle","paddingLeft","backgroundColor","boxShadow","contentStyle","hasContent","visibility","transitionDuration","background","class","_createElementBlock","_ctx","_createElementVNode","_mergeProps","_toHandlers","onClick","onFocus","onKeydown","tabindex","_renderSlot","style","_createBlock","_hoisted_2","_createVNode","ref","withConfigTransport","VaCollapse"],"mappings":"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"}