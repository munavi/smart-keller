{"version":3,"file":"useSelectable.mjs","sources":["../../src/composables/useSelectable.ts"],"sourcesContent":["import { PropType, computed, SetupContext, Ref } from 'vue'\n\nimport { useStateful, useStatefulProps, StatefulProps } from './useStateful'\nimport { useLoadingProps, LoadingProps } from './useLoading'\nimport { useValidation, useValidationProps, ValidationProps, useValidationEmits } from './useValidation'\nimport { useFocus } from './useFocus'\n\nexport interface SelectableProps extends StatefulProps<unknown>, LoadingProps, ValidationProps {\n  arrayValue: unknown | null,\n  label: string,\n  leftLabel: boolean,\n  trueValue: boolean,\n  falseValue: boolean,\n  indeterminate: boolean,\n  indeterminateValue: unknown | null,\n  disabled: boolean,\n  readonly: boolean,\n}\n\ntype Elements = {\n  input: Ref<HTMLElement | null>,\n  label: Ref<HTMLElement | null>,\n  container: Ref<HTMLElement | null>,\n}\n\nexport const useSelectableProps = {\n  ...useStatefulProps,\n  ...useLoadingProps,\n  ...useValidationProps,\n  arrayValue: { type: null as any as PropType<unknown>, default: null },\n  label: { type: String as PropType<string>, default: '' },\n  leftLabel: { type: Boolean as PropType<boolean>, default: false },\n  trueValue: { type: null as any as PropType<unknown>, default: true },\n  falseValue: { type: null as any as PropType<unknown>, default: false },\n  indeterminate: { type: Boolean as PropType<boolean>, default: false },\n  indeterminateValue: { type: null as any as PropType<unknown>, default: null },\n  disabled: { type: Boolean, default: false },\n  readonly: { type: Boolean, default: false },\n}\n\nexport const useSelectableEmits = [...useValidationEmits, 'update:modelValue', 'focus', 'blur']\n\nconst checkDuplicates = (props: SelectableProps) => {\n  // Just validating state values.\n  const values: unknown[] = [props.falseValue, props.trueValue]\n\n  if (props.indeterminate) {\n    values.push(props.indeterminateValue)\n  }\n\n  const hasDuplicates = new Set(values).size !== values.length\n\n  if (hasDuplicates) {\n    throw new Error('falseValue, trueValue, indeterminateValue props should have strictly different values, which is not the case.')\n  }\n}\n\nexport const useSelectable = (\n  props: SelectableProps,\n  emit: SetupContext['emit'],\n  { input, label, container }: Elements,\n) => {\n  checkDuplicates(props)\n\n  /** @public */\n  const reset = () => emit('update:modelValue', false)\n  const focus = () => input.value?.focus()\n\n  const { computedError, computedErrorMessages, validate } = useValidation(props, emit, reset, focus)\n  const { valueComputed } = useStateful(props, emit)\n  const { isFocused } = useFocus()\n\n  const isElementRelated = (element: HTMLElement | null) => {\n    return !!element && [label.value, container.value].includes(element)\n  }\n  const onBlur = (event: FocusEvent) => {\n    if ((input.value === event.target) && !isElementRelated(event.relatedTarget as HTMLElement)) {\n      isFocused.value = false\n      computedError.value = false\n      validate()\n      emit('blur', event)\n    }\n  }\n  const onFocus = (event: FocusEvent) => {\n    isFocused.value = true\n    emit('focus', event)\n  }\n\n  const isIndeterminate = computed(() => !!props.indeterminate && valueComputed.value === props.indeterminateValue)\n  const modelIsArray = computed(() => props.arrayValue !== null)\n  const isChecked = computed(() => {\n    if (modelIsArray.value) {\n      return (props.modelValue as unknown[])?.includes(props.arrayValue)\n    }\n\n    return valueComputed.value === props.trueValue\n  })\n  const toggleSelection = () => {\n    if (props.readonly || props.disabled || props.loading) {\n      return\n    }\n\n    // For array access we pretend computedValue does not exist and use modelValue + emit input directly.\n    if (modelIsArray.value) {\n      if (!props.modelValue) {\n        emit('update:modelValue', [props.arrayValue])\n      } else if (!Array.isArray(props.modelValue)) {\n        emit('update:modelValue', props.modelValue === props.arrayValue ? [] : [props.modelValue, props.arrayValue])\n      } else if (props.modelValue.includes(props.arrayValue)) {\n        emit('update:modelValue', props.modelValue.filter((option) => option !== props.arrayValue))\n      } else {\n        emit('update:modelValue', props.modelValue.concat(props.arrayValue))\n      }\n      return\n    }\n\n    if (props.indeterminate) {\n      if (isIndeterminate.value) {\n        valueComputed.value = props.trueValue\n      } else if (isChecked.value) {\n        valueComputed.value = props.falseValue\n      } else {\n        // unchecked\n        valueComputed.value = props.indeterminateValue\n      }\n      return\n    }\n\n    if (isChecked.value) {\n      valueComputed.value = props.falseValue\n    } else {\n      valueComputed.value = props.trueValue\n    }\n  }\n\n  return {\n    isChecked,\n    isIndeterminate,\n    onBlur,\n    onFocus,\n    toggleSelection,\n    reset,\n    focus,\n    computedError,\n    computedErrorMessages,\n  }\n}\n"],"names":["useSelectableProps","useStatefulProps","useLoadingProps","useValidationProps","arrayValue","type","default","label","String","leftLabel","Boolean","trueValue","falseValue","indeterminate","indeterminateValue","disabled","readonly","useSelectableEmits","useValidationEmits","useSelectable","props","emit","input","container","values","push","Set","size","length","Error","checkDuplicates","reset","focus","value","computedError","computedErrorMessages","validate","useValidation","valueComputed","useStateful","isFocused","useFocus","isIndeterminate","computed","modelIsArray","isChecked","modelValue","includes","onBlur","event","element","target","relatedTarget","onFocus","toggleSelection","loading","Array","isArray","filter","option","concat"],"mappings":"gMAyBaA,EAAqB,IAC7BC,KACAC,KACAC,EACHC,WAAY,CAAEC,KAAM,KAAkCC,QAAS,MAC/DC,MAAO,CAAEF,KAAMG,OAA4BF,QAAS,IACpDG,UAAW,CAAEJ,KAAMK,QAA8BJ,SAAS,GAC1DK,UAAW,CAAEN,KAAM,KAAkCC,SAAS,GAC9DM,WAAY,CAAEP,KAAM,KAAkCC,SAAS,GAC/DO,cAAe,CAAER,KAAMK,QAA8BJ,SAAS,GAC9DQ,mBAAoB,CAAET,KAAM,KAAkCC,QAAS,MACvES,SAAU,CAAEV,KAAMK,QAASJ,SAAS,GACpCU,SAAU,CAAEX,KAAMK,QAASJ,SAAS,IAGzBW,EAAqB,IAAIC,EAAoB,oBAAqB,QAAS,QAiB3EC,cAAgB,CAC3BC,EACAC,GACEC,MAAAA,EAAOf,MAAAA,EAAOgB,UAAAA,MAlBM,CAACH,IAEvB,MAAMI,EAAoB,CAACJ,EAAMR,WAAYQ,EAAMT,WAQnD,GANIS,EAAMP,eACRW,EAAOC,KAAKL,EAAMN,oBAGE,IAAIY,IAAIF,GAAQG,OAASH,EAAOI,OAGpD,MAAM,IAAIC,MAAM,kHASlBC,CAAgBV,GAGhB,MAAMW,MAAQ,IAAMV,EAAK,qBAAqB,GACxCW,MAAQ,WAAM,iBAAAV,EAAMW,4BAAOD,UAE3BE,cAAEA,EAAaC,sBAAEA,EAAqBC,SAAEA,GAAaC,EAAcjB,EAAOC,EAAMU,MAAOC,QACvFM,cAAEA,GAAkBC,EAAYnB,EAAOC,IACvCmB,UAAEA,GAAcC,IAkBhBC,EAAkBC,GAAS,MAAQvB,EAAMP,eAAiByB,EAAcL,QAAUb,EAAMN,qBACxF8B,EAAeD,GAAS,IAA2B,OAArBvB,EAAMhB,aACpCyC,EAAYF,GAAS,WACzB,OAAIC,EAAaX,gBACPb,EAAM0B,iCAA0BC,SAAS3B,EAAMhB,YAGlDkC,EAAcL,QAAUb,EAAMT,aAwCvC,MAAO,CACLkC,UAAAA,EACAH,gBAAAA,EACAM,OA/DcC,IAHS,IAACC,EAInB5B,EAAMW,QAAUgB,EAAME,SAJHD,EAIgCD,EAAMG,gBAH1C,CAAC7C,EAAM0B,MAAOV,EAAUU,OAAOc,SAASG,KAI1DV,EAAUP,OAAQ,EAClBC,EAAcD,OAAQ,EACtBG,IACAf,EAAK,OAAQ4B,KA2DfI,QAxDeJ,IACfT,EAAUP,OAAQ,EAClBZ,EAAK,QAAS4B,IAuDdK,gBA3CsB,KAClBlC,EAAMJ,UAAYI,EAAML,UAAYK,EAAMmC,UAK1CX,EAAaX,MACVb,EAAM0B,WAECU,MAAMC,QAAQrC,EAAM0B,YAErB1B,EAAM0B,WAAWC,SAAS3B,EAAMhB,YACzCiB,EAAK,oBAAqBD,EAAM0B,WAAWY,QAAQC,GAAWA,IAAWvC,EAAMhB,cAE/EiB,EAAK,oBAAqBD,EAAM0B,WAAWc,OAAOxC,EAAMhB,aAJxDiB,EAAK,oBAAqBD,EAAM0B,aAAe1B,EAAMhB,WAAa,GAAK,CAACgB,EAAM0B,WAAY1B,EAAMhB,aAFhGiB,EAAK,oBAAqB,CAACD,EAAMhB,aAWjCgB,EAAMP,cACJ6B,EAAgBT,MAClBK,EAAcL,MAAQb,EAAMT,UACnBkC,EAAUZ,MACnBK,EAAcL,MAAQb,EAAMR,WAG5B0B,EAAcL,MAAQb,EAAMN,mBAK5B+B,EAAUZ,MACZK,EAAcL,MAAQb,EAAMR,WAE5B0B,EAAcL,MAAQb,EAAMT,YAU9BoB,MAAAA,MACAC,MAAAA,MACAE,cAAAA,EACAC,sBAAAA"}