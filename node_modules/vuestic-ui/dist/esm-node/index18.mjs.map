{"version":3,"file":"index18.mjs","sources":["../../src/components/va-color-palette/VaColorPalette.vue","../../src/components/va-color-palette/VaColorPalette.vue?vue&type=template&id=07dc5043&lang.js","../../src/components/va-color-palette/index.ts"],"sourcesContent":["<template>\n  <div class=\"va-color-palette\">\n    <ul class=\"va-color-palette__colors\">\n      <va-color-indicator\n        v-for=\"(color, index) in palette\"\n        :modelValue=\"valueComputed === color\"\n        :key=\"index\"\n        :color=\"color\"\n        :square=\"indicator === 'square'\"\n        @update:modelValue=\"valueComputed = color\"\n      />\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useStatefulProps, useStateful, useStatefulEmits } from '../../composables/useStateful'\nimport VaColorIndicator from '../va-color-indicator'\n\nexport default defineComponent({\n  name: 'VaColorPalette',\n  components: { VaColorIndicator },\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: String as PropType<string>, default: null },\n    palette: { type: Array as PropType<Array<string>>, default: () => [] },\n    indicator: {\n      type: String as PropType<'dot' | 'square'>,\n      default: 'dot',\n      validator: (value: string) => ['dot', 'square'].includes(value),\n    },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    return {\n      valueComputed,\n      isSelected: (color: string) => valueComputed.value === color,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-color-palette {\n  padding-top: 3px;\n\n  &__colors {\n    display: flex;\n\n    & > * {\n      margin-right: 0.25rem;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-color-palette\">\n    <ul class=\"va-color-palette__colors\">\n      <va-color-indicator\n        v-for=\"(color, index) in palette\"\n        :modelValue=\"valueComputed === color\"\n        :key=\"index\"\n        :color=\"color\"\n        :square=\"indicator === 'square'\"\n        @update:modelValue=\"valueComputed = color\"\n      />\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useStatefulProps, useStateful, useStatefulEmits } from '../../composables/useStateful'\nimport VaColorIndicator from '../va-color-indicator'\n\nexport default defineComponent({\n  name: 'VaColorPalette',\n  components: { VaColorIndicator },\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: String as PropType<string>, default: null },\n    palette: { type: Array as PropType<Array<string>>, default: () => [] },\n    indicator: {\n      type: String as PropType<'dot' | 'square'>,\n      default: 'dot',\n      validator: (value: string) => ['dot', 'square'].includes(value),\n    },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    return {\n      valueComputed,\n      isSelected: (color: string) => valueComputed.value === color,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-color-palette {\n  padding-top: 3px;\n\n  &__colors {\n    display: flex;\n\n    & > * {\n      margin-right: 0.25rem;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\n\nimport VaColorPaletteComponent from './VaColorPalette.vue'\n\nexport const VaColorPalette = withConfigTransport(VaColorPaletteComponent)\n"],"names":["defineComponent","name","components","VaColorIndicator","emits","useStatefulEmits","props","useStatefulProps","modelValue","type","String","default","palette","Array","indicator","validator","value","includes","setup","emit","valueComputed","useStateful","isSelected","color","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_ctx","index","_createBlock","key","square","VaColorPalette","withConfigTransport","VaColorPaletteComponent"],"mappings":"6YAqBA,MAAeA,EAAgB,CAC7BC,KAAM,iBACNC,WAAY,CAAEC,iBAAAA,GACdC,MAAOC,EACPC,MAAO,IACFC,EACHC,WAAY,CAAEC,KAAMC,OAA4BC,QAAS,MACzDC,QAAS,CAAEH,KAAMI,MAAkCF,QAAS,IAAM,IAClEG,UAAW,CACTL,KAAMC,OACNC,QAAS,MACTI,UAAYC,GAAkB,CAAC,MAAO,UAAUC,SAASD,KAG7DE,MAAOZ,GAAOa,KAAEA,IACd,MAAMC,cAAEA,GAAkBC,EAAYf,EAAOa,GAE7C,MAAO,CACLC,cAAAA,EACAE,WAAaC,GAAkBH,EAAcJ,QAAUO,eCvCtDC,MAAM,uBACLA,MAAM,6GADZC,QAAAC,GACEC,OAAAC,UACEH,WAC2BI,YAAjBN,EAAOO,SADjBC,KAEGvB,WAAYqB,kBAAkBN,EAC9BS,IAAKF,EACLP,MAAOA,EACPU,kBAAQJ,YACR,yBAAmBA,gBAAgBN,mJCL/BW,EAAiBC,EAAoBC"}