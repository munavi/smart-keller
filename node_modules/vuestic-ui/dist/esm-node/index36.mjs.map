{"version":3,"file":"index36.mjs","sources":["../../src/components/va-parallax/VaParallax.vue","../../src/components/va-parallax/VaParallax.vue?vue&type=template&id=a3c5ce30&lang.js","../../src/components/va-parallax/index.ts"],"sourcesContent":["<template>\n  <div\n    class=\"va-parallax\"\n    :style=\"computedWrapperStyles\"\n    ref=\"rootElement\"\n  >\n    <div class=\"va-parallax__image-container\">\n      <img\n        class=\"va-parallax__image\"\n        ref=\"img\"\n        :src=\"$props.src\"\n        :alt=\"$props.alt\"\n        :style=\"computedImgStyles\"\n      />\n    </div>\n    <div class=\"va-parallax__item-container\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, Ref, computed, onMounted, onBeforeUnmount } from 'vue'\n\nexport default defineComponent({\n  name: 'VaParallax',\n  props: {\n    target: { type: [Object, String] as PropType<Element | string | undefined> },\n    src: { type: String as PropType<string>, default: '', required: true },\n    alt: { type: String as PropType<string>, default: 'parallax' },\n    height: { type: Number as PropType<number>, default: 400 },\n    reversed: { type: Boolean as PropType<boolean>, default: false },\n    speed: {\n      type: Number as PropType<number>,\n      default: 0.5,\n      validator: (value: number) => value >= 0 && value <= 1,\n    },\n  },\n  setup (props) {\n    const elOffsetTop = ref(0)\n    const parallax = ref(0)\n    const parallaxDist = ref(0)\n    const percentScrolled = ref(0)\n    const scrollTop = ref(0)\n    const windowHeight = ref(0)\n    const windowBottom = ref(0)\n    const isLoaded = ref(false)\n\n    const computedWrapperStyles = computed(() => ({ height: props.height + 'px' }))\n\n    const computedImgStyles = computed(() => ({\n      display: 'block',\n      transform: `translate(-50%, ${parallax.value}px)`,\n      opacity: isLoaded.value ? 1 : 0,\n      top: props.reversed ? 0 : 'auto',\n    }))\n\n    const rootElement: Ref<HTMLElement | null> = ref(null)\n    const targetElement = computed(() => {\n      if (typeof props.target !== 'string') {\n        return getScrollableParent(rootElement.value?.parentElement)\n      }\n\n      const element = document.querySelector(props.target)\n\n      if (element) { return element }\n\n      throw new Error('VaParallax target prop got wrong selector. Target is null')\n    })\n    const getScrollableParent = (element?: Element | null): Element | null => {\n      if (!element) {\n        return document.body\n      }\n\n      if (element.scrollHeight > element.clientHeight) {\n        return element\n      }\n\n      return getScrollableParent(element.parentElement)\n    }\n\n    const img: Ref<HTMLImageElement | null> = ref(null)\n    const imgHeight = computed(() => img.value?.naturalHeight || 0)\n\n    const calcDimensions = () => {\n      const offset = rootElement.value?.getBoundingClientRect() || { top: 0 }\n\n      scrollTop.value = targetElement.value?.scrollTop || 0\n      parallaxDist.value = imgHeight.value - props.height\n      elOffsetTop.value = offset.top + scrollTop.value\n      windowHeight.value = window.innerHeight\n      windowBottom.value = scrollTop.value + windowHeight.value\n    }\n\n    const translate = () => {\n      calcDimensions()\n\n      percentScrolled.value = (windowBottom.value - elOffsetTop.value) / (props.height + windowHeight.value)\n\n      parallax.value = Math.round(parallaxDist.value * percentScrolled.value) * props.speed\n\n      if (props.reversed) {\n        parallax.value = -parallax.value\n      }\n    }\n\n    const addEventListeners = () => {\n      targetElement.value?.addEventListener('scroll', translate)\n      targetElement.value?.addEventListener('resize', translate)\n    }\n\n    const removeEventListeners = () => {\n      targetElement.value?.removeEventListener('scroll', translate)\n      targetElement.value?.removeEventListener('resize', translate)\n    }\n\n    const initImage = () => {\n      if (img.value?.complete) {\n        translate()\n        addEventListeners()\n      } else {\n        img.value?.addEventListener('load', () => {\n          translate()\n          addEventListeners()\n        }, false)\n      }\n\n      isLoaded.value = true\n    }\n\n    onMounted(initImage)\n    onBeforeUnmount(removeEventListeners)\n\n    return {\n      img,\n      rootElement,\n      computedWrapperStyles,\n      computedImgStyles,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-parallax {\n  display: var(--va-parallax-display);\n  position: var(--va-parallax-position);\n  overflow: var(--va-parallax-overflow);\n  width: var(--va-parallax-width);\n  z-index: var(--va-parallax-z-index);\n  font-family: var(--va-font-family);\n\n  &__image-container {\n    position: var(--va-parallax-image-container-position);\n    top: var(--va-parallax-image-container-top);\n    left: var(--va-parallax-image-container-left);\n    right: var(--va-parallax-image-container-right);\n    bottom: var(--va-parallax-image-container-bottom);\n    z-index: var(--va-parallax-image-container-z-index);\n    contain: var(--va-parallax-image-container-contain);\n    user-select: var(--va-parallax-image-container-user-select);\n  }\n\n  &__image {\n    position: var(--va-parallax-image-position);\n    bottom: var(--va-parallax-image-bottom);\n    left: var(--va-parallax-image-left);\n    min-width: var(--va-parallax-image-min-width);\n    min-height: var(--va-parallax-image-min-height);\n    display: var(--va-parallax-image-display);\n    transform: var(--va-parallax-image-transform);\n    will-change: var(--va-parallax-image-will-change);\n    transition: var(--va-parallax-image-transition);\n    z-index: var(--va-parallax-image-z-index);\n  }\n\n  &__item-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 2;\n    contain: strict;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-parallax\"\n    :style=\"computedWrapperStyles\"\n    ref=\"rootElement\"\n  >\n    <div class=\"va-parallax__image-container\">\n      <img\n        class=\"va-parallax__image\"\n        ref=\"img\"\n        :src=\"$props.src\"\n        :alt=\"$props.alt\"\n        :style=\"computedImgStyles\"\n      />\n    </div>\n    <div class=\"va-parallax__item-container\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, Ref, computed, onMounted, onBeforeUnmount } from 'vue'\n\nexport default defineComponent({\n  name: 'VaParallax',\n  props: {\n    target: { type: [Object, String] as PropType<Element | string | undefined> },\n    src: { type: String as PropType<string>, default: '', required: true },\n    alt: { type: String as PropType<string>, default: 'parallax' },\n    height: { type: Number as PropType<number>, default: 400 },\n    reversed: { type: Boolean as PropType<boolean>, default: false },\n    speed: {\n      type: Number as PropType<number>,\n      default: 0.5,\n      validator: (value: number) => value >= 0 && value <= 1,\n    },\n  },\n  setup (props) {\n    const elOffsetTop = ref(0)\n    const parallax = ref(0)\n    const parallaxDist = ref(0)\n    const percentScrolled = ref(0)\n    const scrollTop = ref(0)\n    const windowHeight = ref(0)\n    const windowBottom = ref(0)\n    const isLoaded = ref(false)\n\n    const computedWrapperStyles = computed(() => ({ height: props.height + 'px' }))\n\n    const computedImgStyles = computed(() => ({\n      display: 'block',\n      transform: `translate(-50%, ${parallax.value}px)`,\n      opacity: isLoaded.value ? 1 : 0,\n      top: props.reversed ? 0 : 'auto',\n    }))\n\n    const rootElement: Ref<HTMLElement | null> = ref(null)\n    const targetElement = computed(() => {\n      if (typeof props.target !== 'string') {\n        return getScrollableParent(rootElement.value?.parentElement)\n      }\n\n      const element = document.querySelector(props.target)\n\n      if (element) { return element }\n\n      throw new Error('VaParallax target prop got wrong selector. Target is null')\n    })\n    const getScrollableParent = (element?: Element | null): Element | null => {\n      if (!element) {\n        return document.body\n      }\n\n      if (element.scrollHeight > element.clientHeight) {\n        return element\n      }\n\n      return getScrollableParent(element.parentElement)\n    }\n\n    const img: Ref<HTMLImageElement | null> = ref(null)\n    const imgHeight = computed(() => img.value?.naturalHeight || 0)\n\n    const calcDimensions = () => {\n      const offset = rootElement.value?.getBoundingClientRect() || { top: 0 }\n\n      scrollTop.value = targetElement.value?.scrollTop || 0\n      parallaxDist.value = imgHeight.value - props.height\n      elOffsetTop.value = offset.top + scrollTop.value\n      windowHeight.value = window.innerHeight\n      windowBottom.value = scrollTop.value + windowHeight.value\n    }\n\n    const translate = () => {\n      calcDimensions()\n\n      percentScrolled.value = (windowBottom.value - elOffsetTop.value) / (props.height + windowHeight.value)\n\n      parallax.value = Math.round(parallaxDist.value * percentScrolled.value) * props.speed\n\n      if (props.reversed) {\n        parallax.value = -parallax.value\n      }\n    }\n\n    const addEventListeners = () => {\n      targetElement.value?.addEventListener('scroll', translate)\n      targetElement.value?.addEventListener('resize', translate)\n    }\n\n    const removeEventListeners = () => {\n      targetElement.value?.removeEventListener('scroll', translate)\n      targetElement.value?.removeEventListener('resize', translate)\n    }\n\n    const initImage = () => {\n      if (img.value?.complete) {\n        translate()\n        addEventListeners()\n      } else {\n        img.value?.addEventListener('load', () => {\n          translate()\n          addEventListeners()\n        }, false)\n      }\n\n      isLoaded.value = true\n    }\n\n    onMounted(initImage)\n    onBeforeUnmount(removeEventListeners)\n\n    return {\n      img,\n      rootElement,\n      computedWrapperStyles,\n      computedImgStyles,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-parallax {\n  display: var(--va-parallax-display);\n  position: var(--va-parallax-position);\n  overflow: var(--va-parallax-overflow);\n  width: var(--va-parallax-width);\n  z-index: var(--va-parallax-z-index);\n  font-family: var(--va-font-family);\n\n  &__image-container {\n    position: var(--va-parallax-image-container-position);\n    top: var(--va-parallax-image-container-top);\n    left: var(--va-parallax-image-container-left);\n    right: var(--va-parallax-image-container-right);\n    bottom: var(--va-parallax-image-container-bottom);\n    z-index: var(--va-parallax-image-container-z-index);\n    contain: var(--va-parallax-image-container-contain);\n    user-select: var(--va-parallax-image-container-user-select);\n  }\n\n  &__image {\n    position: var(--va-parallax-image-position);\n    bottom: var(--va-parallax-image-bottom);\n    left: var(--va-parallax-image-left);\n    min-width: var(--va-parallax-image-min-width);\n    min-height: var(--va-parallax-image-min-height);\n    display: var(--va-parallax-image-display);\n    transform: var(--va-parallax-image-transform);\n    will-change: var(--va-parallax-image-will-change);\n    transition: var(--va-parallax-image-transition);\n    z-index: var(--va-parallax-image-z-index);\n  }\n\n  &__item-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 2;\n    contain: strict;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaParallax from './VaParallax.vue'\n\nexport default withConfigTransport(VaParallax)\n"],"names":["defineComponent","name","props","target","type","Object","String","src","default","required","alt","height","Number","reversed","Boolean","speed","validator","value","setup","elOffsetTop","ref","parallax","parallaxDist","percentScrolled","scrollTop","windowHeight","windowBottom","isLoaded","computedWrapperStyles","computed","computedImgStyles","display","transform","opacity","top","rootElement","targetElement","getScrollableParent","parentElement","element","document","querySelector","Error","scrollHeight","clientHeight","body","img","imgHeight","naturalHeight","translate","offset","getBoundingClientRect","window","innerHeight","calcDimensions","Math","round","addEventListeners","addEventListener","onMounted","complete","onBeforeUnmount","removeEventListener","class","_createElementBlock","style","_ctx","_createElementVNode","_hoisted_1","_hoisted_3","_renderSlot","withConfigTransport","VaParallax"],"mappings":"qSAwBA,MAAeA,EAAgB,CAC7BC,KAAM,aACNC,MAAO,CACLC,OAAQ,CAAEC,KAAM,CAACC,OAAQC,SACzBC,IAAK,CAAEH,KAAME,OAA4BE,QAAS,GAAIC,UAAU,GAChEC,IAAK,CAAEN,KAAME,OAA4BE,QAAS,YAClDG,OAAQ,CAAEP,KAAMQ,OAA4BJ,QAAS,KACrDK,SAAU,CAAET,KAAMU,QAA8BN,SAAS,GACzDO,MAAO,CACLX,KAAMQ,OACNJ,QAAS,GACTQ,UAAYC,GAAkBA,GAAS,GAAKA,GAAS,IAGzDC,MAAOhB,GACL,MAAMiB,EAAcC,EAAI,GAClBC,EAAWD,EAAI,GACfE,EAAeF,EAAI,GACnBG,EAAkBH,EAAI,GACtBI,EAAYJ,EAAI,GAChBK,EAAeL,EAAI,GACnBM,EAAeN,EAAI,GACnBO,EAAWP,GAAI,GAEfQ,EAAwBC,GAAS,MAASlB,OAAQT,EAAMS,OAAS,SAEjEmB,EAAoBD,GAAS,MACjCE,QAAS,QACTC,UAAW,mBAAmBX,EAASJ,WACvCgB,QAASN,EAASV,MAAQ,EAAI,EAC9BiB,IAAKhC,EAAMW,SAAW,EAAI,WAGtBsB,EAAuCf,EAAI,MAC3CgB,EAAgBP,GAAS,WAC7B,GAA4B,iBAAjB3B,EAAMC,OACf,OAAOkC,8BAAoBF,EAAYlB,4BAAOqB,eAGhD,MAAMC,EAAUC,SAASC,cAAcvC,EAAMC,QAE7C,GAAIoC,EAAW,OAAOA,EAEtB,MAAM,IAAIG,MAAM,gEAEZL,oBAAuBE,GACtBA,EAIDA,EAAQI,aAAeJ,EAAQK,aAC1BL,EAGFF,oBAAoBE,EAAQD,eAP1BE,SAASK,KAUdC,EAAoC1B,EAAI,MACxC2B,EAAYlB,GAAS,WAAM,iBAAAiB,EAAI7B,4BAAO+B,gBAAiB,KAYvDC,UAAY,KAVK,cACrB,MAAMC,aAASf,EAAYlB,4BAAOkC,0BAA2B,CAAEjB,IAAK,GAEpEV,EAAUP,iBAAQmB,EAAcnB,4BAAOO,YAAa,EACpDF,EAAaL,MAAQ8B,EAAU9B,MAAQf,EAAMS,OAC7CQ,EAAYF,MAAQiC,EAAOhB,IAAMV,EAAUP,MAC3CQ,EAAaR,MAAQmC,OAAOC,YAC5B3B,EAAaT,MAAQO,EAAUP,MAAQQ,EAAaR,OAIpDqC,GAEA/B,EAAgBN,OAASS,EAAaT,MAAQE,EAAYF,QAAUf,EAAMS,OAASc,EAAaR,OAEhGI,EAASJ,MAAQsC,KAAKC,MAAMlC,EAAaL,MAAQM,EAAgBN,OAASf,EAAMa,MAE5Eb,EAAMW,WACRQ,EAASJ,OAASI,EAASJ,QAIzBwC,kBAAoB,uBACxBrB,EAAcnB,sBAAOyC,iBAAiB,SAAUT,qBAChDb,EAAcnB,sBAAOyC,iBAAiB,SAAUT,YAyBlD,OAHAU,GAdkB,wBACZb,EAAI7B,4BAAO2C,WACbX,YACAQ,+BAEAX,EAAI7B,sBAAOyC,iBAAiB,QAAQ,KAClCT,YACAQ,uBACC,GAGL9B,EAASV,OAAQ,KAInB4C,GApB6B,uBAC3BzB,EAAcnB,sBAAO6C,oBAAoB,SAAUb,qBACnDb,EAAcnB,sBAAO6C,oBAAoB,SAAUb,cAoB9C,CACLH,IAAAA,EACAX,YAAAA,EACAP,sBAAAA,EACAE,kBAAAA,eCnIGiC,MAAM,mDASNA,MAAM,gFAdbC,SACED,MAAM,cACLE,QAAOC,yBACR9C,IAAI,gBAEJ+C,QAAAC,GACED,SACEJ,MAAM,qBACN3C,IAAI,MACHb,IAAK2D,SAAO3D,IACZG,IAAKwD,SAAOxD,IACZuD,QAAOC,mCAGZC,QAAAE,GACEC,kFCbN,MAAeC,EAAoBC"}