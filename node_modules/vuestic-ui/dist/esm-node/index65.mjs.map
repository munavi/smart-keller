{"version":3,"file":"index65.mjs","sources":["../../src/composables/useTimer.ts","../../src/components/va-toast/VaToast.vue","../../src/components/va-toast/VaToast.vue?vue&type=template&id=e50edcbc&lang.js","../../src/components/va-toast/VaToast.ts","../../src/components/va-toast/toast.ts","../../src/components/va-toast/plugin/index.ts","../../src/components/va-dropdown/plugin/index.ts"],"sourcesContent":["import { ref } from 'vue'\n\nexport const useTimer = () => {\n  let timer: ReturnType<typeof setTimeout> | undefined\n\n  const start = (...args: Parameters<typeof setTimeout>) => {\n    timer = setTimeout(...args)\n\n    return timer\n  }\n\n  const clear = () => timer && clearTimeout(timer)\n\n  return {\n    start,\n    clear,\n  }\n}\n","<template>\n  <transition name=\"va-toast-fade\">\n    <div\n      v-show=\"visible\"\n      :class=\"['va-toast', ...toastClasses]\"\n      :style=\"toastStyles\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n      @click=\"onToastClick\"\n      role=\"alert\"\n      ref=\"rootElement\"\n    >\n      <div class=\"va-toast__group\">\n        <h2 v-if=\"$props.title\" class=\"va-toast__title\" v-text=\"$props.title\" />\n\n        <div class=\"va-toast__content\" v-show=\"$props.message\">\n          <div v-if=\"$props.dangerouslyUseHtmlString\" v-html=\"computedMessage\" />\n          <p v-else v-text=\"computedMessage\" />\n        </div>\n\n        <div class=\"va-toast__content\" v-if=\"$props.render\">\n          <VaToastRenderer :render=\"$props.render\" />\n        </div>\n\n        <va-icon\n          v-if=\"$props.closeable\"\n          size=\"small\"\n          :name=\"$props.icon\"\n          class=\"va-toast__close-icon\"\n          @click.stop=\"onToastClose\"\n        />\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed, onMounted } from 'vue'\n\nimport { useColors } from '../../composables/useColor'\nimport { useTimer } from '../../composables/useTimer'\nimport { useTextColor } from '../../composables/useTextColor'\nimport VaIcon from '../va-icon/VaIcon.vue'\n\nimport { NotificationPosition } from './types'\n\nconst VaToastRenderer = defineComponent({\n  name: 'VaToastRenderer',\n  props: {\n    render: { type: Function, required: true },\n  },\n  setup: (props) => () => props.render(),\n})\n\nexport default defineComponent({\n  name: 'VaToast',\n  components: { VaIcon, VaToastRenderer },\n  emits: ['on-click', 'on-close'],\n  props: {\n    title: { type: String as PropType<string>, default: '' },\n    offsetY: { type: Number as PropType<number>, default: 16 },\n    offsetX: { type: Number as PropType<number>, default: 16 },\n    message: { type: [String, Function], default: '' },\n    dangerouslyUseHtmlString: { type: Boolean as PropType<boolean>, default: false },\n    icon: { type: String as PropType<string>, default: 'close' },\n    customClass: { type: String as PropType<string>, default: '' },\n    duration: { type: Number as PropType<number>, default: 5000 },\n    color: { type: String as PropType<string>, default: '' },\n    closeable: { type: Boolean as PropType<boolean>, default: true },\n    onClose: { type: Function },\n    onClick: { type: Function },\n    multiLine: { type: Boolean as PropType<boolean>, default: false },\n    position: {\n      type: String as PropType<NotificationPosition>,\n      default: 'top-right',\n      validator: (value: string) => ['top-right', 'top-left', 'bottom-right', 'bottom-left'].includes(value),\n    },\n    render: { type: Function },\n  },\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n\n    const { textColorComputed } = useTextColor(props.color)\n\n    const rootElement = ref<HTMLElement>()\n\n    const visible = ref(false)\n\n    const positionX = computed(() => {\n      return props.position.includes('right') ? 'right' : 'left'\n    })\n\n    const positionY = computed(() => {\n      return props.position.includes('top') ? 'top' : 'bottom'\n    })\n\n    const toastClasses = computed(() => [\n      props.customClass,\n      props.multiLine ? 'va-toast--multiline' : '',\n    ])\n\n    const toastStyles = computed(() => ({\n      [positionY.value]: `${props.offsetY}px`,\n      [positionX.value]: `${props.offsetX}px`,\n      backgroundColor: getColor(props.color),\n      color: textColorComputed.value,\n    }))\n\n    const computedMessage = computed(() => (typeof props.message === 'function') ? props.message() : props.message)\n\n    const destroyElement = () => {\n      rootElement.value?.removeEventListener('transitionend', destroyElement)\n\n      rootElement.value?.remove()\n    }\n\n    const onToastClick = () => {\n      if (typeof props.onClick === 'function') {\n        props.onClick()\n      } else {\n        emit('on-click')\n      }\n    }\n\n    const onToastClose = () => {\n      visible.value = false\n\n      rootElement.value?.addEventListener('transitionend', destroyElement)\n\n      if (typeof props.onClose === 'function') {\n        props.onClose()\n      } else {\n        emit('on-close')\n      }\n    }\n\n    const timer = useTimer()\n    const clearTimer = timer.clear\n    const startTimer = () => {\n      if (props.duration > 0) {\n        timer.start(() => visible.value && onToastClose(), props.duration)\n      }\n    }\n\n    onMounted(() => {\n      visible.value = true\n\n      startTimer()\n    })\n\n    return {\n      visible,\n      toastClasses,\n      toastStyles,\n      computedMessage,\n      onToastClick,\n      onToastClose,\n      startTimer,\n      clearTimer,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-toast {\n  position: fixed;\n  box-sizing: border-box;\n  width: var(--va-toast-width);\n  padding: var(--va-toast-padding);\n  display: flex;\n  align-items: center;\n  border-radius: var(--va-toast-border-radius);\n  border: 1px solid var(--va-toast-border-color);\n  background-color: var(--va-toast-background-color);\n  color: var(--va-toast-color);\n  box-shadow: var(--va-toast-box-shadow);\n  transition: var(--va-toast-transition);\n  overflow: hidden;\n  z-index: var(--va-toast-z-index);\n  font-family: var(--va-font-family);\n\n  &--multiline {\n    min-height: 70px;\n  }\n\n  &--right {\n    right: 16px;\n  }\n\n  &--left {\n    left: 16px;\n  }\n\n  &__group {\n    margin-left: var(--va-toast-group-margin-left);\n    margin-right: var(--va-toast-group-margin-right);\n  }\n\n  &__title {\n    font-weight: var(--va-toast-title-font-weight);\n    font-size: var(--va-toast-title-font-size);\n    color: var(--va-toast-title-color);\n    margin: var(--va-toast-title-margin);\n  }\n\n  &__content {\n    font-size: var(--va-toast-content-font-size);\n    line-height: var(--va-toast-content-line-height);\n    padding-right: var(--va-toast-content-padding-right);\n\n    p,\n    div {\n      margin: 0;\n    }\n  }\n\n  &__icon {\n    height: var(--va-toast-icon-height);\n    width: var(--va-toast-icon-width);\n    font-size: var(--va-toast-icon-font-size);\n  }\n\n  &__close-icon {\n    position: absolute;\n    top: 50%;\n    right: var(--va-toast-close-icon-right);\n    cursor: pointer;\n    transform: translateY(-50%);\n    font-size: var(--va-toast-close-icon-font-siz);\n\n    &:hover {\n      color: var(--va-toast-hover-color);\n    }\n  }\n}\n\n.va-toast-fade-enter {\n  &.right {\n    right: 0;\n    transform: translateX(100%);\n  }\n\n  &.left {\n    left: 0;\n    transform: translateX(-100%);\n  }\n}\n\n.va-toast-fade-leave-active {\n  opacity: 0;\n}\n</style>\n","<template>\n  <transition name=\"va-toast-fade\">\n    <div\n      v-show=\"visible\"\n      :class=\"['va-toast', ...toastClasses]\"\n      :style=\"toastStyles\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n      @click=\"onToastClick\"\n      role=\"alert\"\n      ref=\"rootElement\"\n    >\n      <div class=\"va-toast__group\">\n        <h2 v-if=\"$props.title\" class=\"va-toast__title\" v-text=\"$props.title\" />\n\n        <div class=\"va-toast__content\" v-show=\"$props.message\">\n          <div v-if=\"$props.dangerouslyUseHtmlString\" v-html=\"computedMessage\" />\n          <p v-else v-text=\"computedMessage\" />\n        </div>\n\n        <div class=\"va-toast__content\" v-if=\"$props.render\">\n          <VaToastRenderer :render=\"$props.render\" />\n        </div>\n\n        <va-icon\n          v-if=\"$props.closeable\"\n          size=\"small\"\n          :name=\"$props.icon\"\n          class=\"va-toast__close-icon\"\n          @click.stop=\"onToastClose\"\n        />\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed, onMounted } from 'vue'\n\nimport { useColors } from '../../composables/useColor'\nimport { useTimer } from '../../composables/useTimer'\nimport { useTextColor } from '../../composables/useTextColor'\nimport VaIcon from '../va-icon/VaIcon.vue'\n\nimport { NotificationPosition } from './types'\n\nconst VaToastRenderer = defineComponent({\n  name: 'VaToastRenderer',\n  props: {\n    render: { type: Function, required: true },\n  },\n  setup: (props) => () => props.render(),\n})\n\nexport default defineComponent({\n  name: 'VaToast',\n  components: { VaIcon, VaToastRenderer },\n  emits: ['on-click', 'on-close'],\n  props: {\n    title: { type: String as PropType<string>, default: '' },\n    offsetY: { type: Number as PropType<number>, default: 16 },\n    offsetX: { type: Number as PropType<number>, default: 16 },\n    message: { type: [String, Function], default: '' },\n    dangerouslyUseHtmlString: { type: Boolean as PropType<boolean>, default: false },\n    icon: { type: String as PropType<string>, default: 'close' },\n    customClass: { type: String as PropType<string>, default: '' },\n    duration: { type: Number as PropType<number>, default: 5000 },\n    color: { type: String as PropType<string>, default: '' },\n    closeable: { type: Boolean as PropType<boolean>, default: true },\n    onClose: { type: Function },\n    onClick: { type: Function },\n    multiLine: { type: Boolean as PropType<boolean>, default: false },\n    position: {\n      type: String as PropType<NotificationPosition>,\n      default: 'top-right',\n      validator: (value: string) => ['top-right', 'top-left', 'bottom-right', 'bottom-left'].includes(value),\n    },\n    render: { type: Function },\n  },\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n\n    const { textColorComputed } = useTextColor(props.color)\n\n    const rootElement = ref<HTMLElement>()\n\n    const visible = ref(false)\n\n    const positionX = computed(() => {\n      return props.position.includes('right') ? 'right' : 'left'\n    })\n\n    const positionY = computed(() => {\n      return props.position.includes('top') ? 'top' : 'bottom'\n    })\n\n    const toastClasses = computed(() => [\n      props.customClass,\n      props.multiLine ? 'va-toast--multiline' : '',\n    ])\n\n    const toastStyles = computed(() => ({\n      [positionY.value]: `${props.offsetY}px`,\n      [positionX.value]: `${props.offsetX}px`,\n      backgroundColor: getColor(props.color),\n      color: textColorComputed.value,\n    }))\n\n    const computedMessage = computed(() => (typeof props.message === 'function') ? props.message() : props.message)\n\n    const destroyElement = () => {\n      rootElement.value?.removeEventListener('transitionend', destroyElement)\n\n      rootElement.value?.remove()\n    }\n\n    const onToastClick = () => {\n      if (typeof props.onClick === 'function') {\n        props.onClick()\n      } else {\n        emit('on-click')\n      }\n    }\n\n    const onToastClose = () => {\n      visible.value = false\n\n      rootElement.value?.addEventListener('transitionend', destroyElement)\n\n      if (typeof props.onClose === 'function') {\n        props.onClose()\n      } else {\n        emit('on-close')\n      }\n    }\n\n    const timer = useTimer()\n    const clearTimer = timer.clear\n    const startTimer = () => {\n      if (props.duration > 0) {\n        timer.start(() => visible.value && onToastClose(), props.duration)\n      }\n    }\n\n    onMounted(() => {\n      visible.value = true\n\n      startTimer()\n    })\n\n    return {\n      visible,\n      toastClasses,\n      toastStyles,\n      computedMessage,\n      onToastClick,\n      onToastClose,\n      startTimer,\n      clearTimer,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-toast {\n  position: fixed;\n  box-sizing: border-box;\n  width: var(--va-toast-width);\n  padding: var(--va-toast-padding);\n  display: flex;\n  align-items: center;\n  border-radius: var(--va-toast-border-radius);\n  border: 1px solid var(--va-toast-border-color);\n  background-color: var(--va-toast-background-color);\n  color: var(--va-toast-color);\n  box-shadow: var(--va-toast-box-shadow);\n  transition: var(--va-toast-transition);\n  overflow: hidden;\n  z-index: var(--va-toast-z-index);\n  font-family: var(--va-font-family);\n\n  &--multiline {\n    min-height: 70px;\n  }\n\n  &--right {\n    right: 16px;\n  }\n\n  &--left {\n    left: 16px;\n  }\n\n  &__group {\n    margin-left: var(--va-toast-group-margin-left);\n    margin-right: var(--va-toast-group-margin-right);\n  }\n\n  &__title {\n    font-weight: var(--va-toast-title-font-weight);\n    font-size: var(--va-toast-title-font-size);\n    color: var(--va-toast-title-color);\n    margin: var(--va-toast-title-margin);\n  }\n\n  &__content {\n    font-size: var(--va-toast-content-font-size);\n    line-height: var(--va-toast-content-line-height);\n    padding-right: var(--va-toast-content-padding-right);\n\n    p,\n    div {\n      margin: 0;\n    }\n  }\n\n  &__icon {\n    height: var(--va-toast-icon-height);\n    width: var(--va-toast-icon-width);\n    font-size: var(--va-toast-icon-font-size);\n  }\n\n  &__close-icon {\n    position: absolute;\n    top: 50%;\n    right: var(--va-toast-close-icon-right);\n    cursor: pointer;\n    transform: translateY(-50%);\n    font-size: var(--va-toast-close-icon-font-siz);\n\n    &:hover {\n      color: var(--va-toast-hover-color);\n    }\n  }\n}\n\n.va-toast-fade-enter {\n  &.right {\n    right: 0;\n    transform: translateX(100%);\n  }\n\n  &.left {\n    left: 0;\n    transform: translateX(-100%);\n  }\n}\n\n.va-toast-fade-leave-active {\n  opacity: 0;\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\n\nimport VaToast from './VaToast.vue'\n\nexport default withConfigTransport(VaToast)\n","import VaToast from './VaToast'\nimport type { NotificationOptions } from './types'\nimport { VNode, createVNode, render, AppContext } from 'vue'\nimport { getGlobal } from '../../utils/ssr-utils'\n\nconst GAP = 5\nlet seed = 1\n\ndeclare global {\n  interface Window {\n    vaToastInstances: VNode[]\n  }\n}\n\ngetGlobal().vaToastInstances = []\n\ntype OptionKeys = keyof NotificationOptions;\n\nexport type VaToastId = string\n\nconst getTranslateValue = (item: VNode, position: string) => {\n  if (item.el) {\n    const direction = position.includes('bottom') ? -1 : 1\n    return (item.el.offsetHeight + GAP) * direction\n  }\n  return 0\n}\n\nconst getNewTranslateValue = (transformY: string, redundantHeight: number, position: string) => {\n  const direction = position.includes('bottom') ? -1 : 1\n  return parseInt(transformY, 10) - (redundantHeight + GAP) * direction\n}\n\nconst getNodeProps = (vNode: VNode): Record<OptionKeys, any> => {\n  return (vNode.component?.props as Record<OptionKeys, any>) || {}\n}\n\nconst closeNotification = (targetInstance: VNode | null, destroyElementFn: () => void) => {\n  if (!targetInstance) { return }\n\n  if (!getGlobal().vaToastInstances.length) {\n    seed = 1\n    return\n  }\n\n  const targetInstanceIndex = getGlobal().vaToastInstances.findIndex((instance) => instance === targetInstance)\n\n  if (targetInstanceIndex < 0) { return }\n\n  const nodeProps = getNodeProps(targetInstance)\n\n  const {\n    offsetX: targetOffsetX,\n    offsetY: targetOffsetY,\n    position: targetPosition,\n  } = nodeProps\n  const redundantHeight: number | null = targetInstance.el?.offsetHeight\n\n  destroyElementFn()\n\n  getGlobal().vaToastInstances = getGlobal().vaToastInstances.reduce((acc: any[], instance, index) => {\n    if (instance === targetInstance) {\n      return acc\n    }\n    if (instance.component) {\n      const { offsetX, offsetY, position } = getNodeProps(instance)\n      const isNextInstance = index > targetInstanceIndex && targetOffsetX === offsetX && targetOffsetY === offsetY && targetPosition === position\n      if (isNextInstance && instance.el && redundantHeight) {\n        const [_, transformY] = instance.el.style.transform.match(/[\\d-]+(?=px)/g)\n        const transformYNew = getNewTranslateValue(transformY, redundantHeight, position)\n        instance.el.style.transform = `translate(0, ${transformYNew}px)`\n      }\n    }\n    return [...acc, instance]\n  }, [])\n\n  if (!getGlobal().vaToastInstances.length) {\n    seed = 1\n  }\n}\n\nconst destroy = (el: HTMLElement | null | undefined, node: VNode | null) => {\n  if (el) {\n    render(null, el)\n    el.remove()\n  }\n  el = null\n  node = null\n}\n\nconst mount = (component: any, {\n  props,\n  children,\n  element,\n  appContext,\n}: { props?: { [key: string]: any }; children?: any; element?: HTMLElement; appContext?: AppContext } = {}): { vNode: VNode; el?: HTMLElement } => {\n  let el: HTMLElement | null | undefined = element\n\n  // eslint-disable-next-line prefer-const\n  let vNode: VNode | null\n\n  const onClose = () => {\n    closeNotification(vNode, () => destroy(el, vNode))\n\n    if (props?.onClose) {\n      props.onClose()\n    }\n  }\n\n  vNode = createVNode(component, { ...props, onClose }, children)\n\n  if (appContext) {\n    vNode.appContext = appContext\n  }\n\n  if (el) {\n    render(vNode, el)\n  } else if (typeof document !== 'undefined') {\n    render(vNode, el = document.createElement('div'))\n  }\n\n  return { vNode, el }\n}\n\nexport const closeAllNotifications = (appContext?: AppContext) => {\n  if (!getGlobal().vaToastInstances.length) {\n    seed = 1\n    return\n  }\n  getGlobal().vaToastInstances.forEach(instance => {\n    if (appContext && instance.appContext !== appContext) { return }\n    getNodeProps(instance).onClose()\n  })\n}\n\nexport const closeById = (id: string) => {\n  const targetInstance = getGlobal().vaToastInstances.find(instance => instance.el?.id === id)\n\n  if (targetInstance) {\n    const nodeProps = getNodeProps(targetInstance)\n    nodeProps.onClose()\n  }\n}\n\nconst getToastOptions = (options: string | NotificationOptions): any => {\n  if (typeof options === 'string') {\n    return {\n      message: options,\n    }\n  }\n  return options\n}\n\nexport const createToastInstance = (customProps: NotificationOptions | string, appContext?: AppContext): VaToastId | null => {\n  const { vNode, el } = mount(VaToast, { appContext, props: getToastOptions(customProps) })\n\n  const nodeProps = getNodeProps(vNode)\n\n  if (el && vNode.el && nodeProps) {\n    document.body.appendChild(el.childNodes[0])\n    const { offsetX, offsetY, position } = nodeProps\n\n    vNode.el.style.display = 'flex'\n    vNode.el.id = 'notification_' + seed\n\n    let transformY = 0\n    getGlobal().vaToastInstances.filter(item => {\n      const {\n        offsetX: itemOffsetX,\n        offsetY: itemOffsetY,\n        position: itemPosition,\n      } = getNodeProps(item)\n\n      return itemOffsetX === offsetX && itemOffsetY === offsetY && position === itemPosition\n    }).forEach((item) => {\n      transformY += getTranslateValue(item, position)\n    })\n    vNode.el.style.transform = `translate(0, ${transformY}px)`\n\n    seed += 1\n\n    getGlobal().vaToastInstances.push(vNode)\n\n    return vNode.el.id as VaToastId\n  }\n\n  return null\n}\n\nexport type { NotificationOptions } from './types'\n","import { App } from 'vue'\nimport { defineVuesticPlugin, defineGlobalProperty } from '../../../vuestic-plugin/utils'\nimport { createToastInstance, closeById, closeAllNotifications, NotificationOptions } from '../toast'\n\nconst createVaToastPlugin = (app: App) => ({\n  /** Returns toast instance id */\n  init (options: string | NotificationOptions) {\n    return createToastInstance(options, app?._context)\n  },\n\n  close (id: string) {\n    closeById(id)\n  },\n\n  closeAll (allApps = false) {\n    closeAllNotifications(allApps ? undefined : app?._context)\n  },\n})\n\nexport const VaToastPlugin = defineVuesticPlugin(() => ({\n  install (app) {\n    defineGlobalProperty(app, '$vaToast', createVaToastPlugin(app))\n  },\n}))\n\ndeclare module '@vue/runtime-core' {\n  export interface ComponentCustomProperties {\n    $vaToast: ReturnType<typeof createVaToastPlugin>\n  }\n}\n","import { defineVuesticPlugin, defineGlobalProperty } from '../../../vuestic-plugin/utils'\n\nconst vaDropdownPlugin = {\n  closeDropdown () {\n    let vm = this as any\n    // Hide first parent dropdown.\n    while ((vm = vm.$parent)) {\n      const name = vm.$options.name\n      if (name === 'VaDropdown') {\n        vm.hide()\n        break\n      }\n    }\n  },\n}\n\nexport const VaDropdownPlugin = defineVuesticPlugin(() => ({\n  install (app) {\n    defineGlobalProperty(app, '$closeDropdown', vaDropdownPlugin.closeDropdown)\n    defineGlobalProperty(app, '$vaDropdown', vaDropdownPlugin)\n  },\n}))\n\ndeclare module '@vue/runtime-core' {\n  export interface ComponentCustomProperties {\n    $vaDropdown: typeof vaDropdownPlugin\n\n    /** @deprecated */\n    $closeDropdown: typeof vaDropdownPlugin['closeDropdown']\n  }\n}\n"],"names":["VaToastRenderer","defineComponent","name","props","render","type","Function","required","setup","components","VaIcon","emits","title","String","default","offsetY","Number","offsetX","message","dangerouslyUseHtmlString","Boolean","icon","customClass","duration","color","closeable","onClose","onClick","multiLine","position","validator","value","includes","emit","getColor","useColors","textColorComputed","useTextColor","rootElement","ref","visible","positionX","computed","positionY","toastClasses","toastStyles","backgroundColor","computedMessage","destroyElement","removeEventListener","remove","onToastClose","addEventListener","timer","start","args","setTimeout","clear","clearTimeout","useTimer","clearTimer","startTimer","onMounted","onToastClick","class","_createBlock","_createElementVNode","_ctx","style","onMouseenter","onMouseleave","role","_hoisted_1","_createElementBlock","_toDisplayString","_hoisted_3","innerHTML","_hoisted_6","_createVNode","size","withConfigTransport","VaToast","seed","getGlobal","vaToastInstances","getNodeProps","vNode","component","closeNotification","targetInstance","destroyElementFn","length","targetInstanceIndex","findIndex","instance","nodeProps","targetOffsetX","targetOffsetY","targetPosition","redundantHeight","el","offsetHeight","reduce","acc","index","_","transformY","transform","match","transformYNew","direction","parseInt","getNewTranslateValue","mount","children","element","appContext","createVNode","node","destroy","document","createElement","closeAllNotifications","forEach","closeById","id","find","createToastInstance","customProps","options","body","appendChild","childNodes","display","filter","item","itemOffsetX","itemOffsetY","itemPosition","getTranslateValue","push","VaToastPlugin","defineVuesticPlugin","install","app","defineGlobalProperty","init","_context","close","closeAll","allApps","undefined","createVaToastPlugin","vaDropdownPlugin","closeDropdown","vm","this","$parent","$options","hide","VaDropdownPlugin"],"mappings":"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"}