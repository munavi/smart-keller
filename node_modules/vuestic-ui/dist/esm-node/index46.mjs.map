{"version":3,"file":"index46.mjs","sources":["../../src/components/va-tabs/types/index.ts","../../src/components/va-tabs/VaTabs.vue","../../src/composables/useResizeObserver.ts","../../src/components/va-tabs/VaTabs.vue?vue&type=template&id=42520688&lang.js","../../src/components/va-tabs/VaTab/VaTab.vue","../../src/components/va-tabs/VaTab/VaTab.vue?vue&type=template&id=74c61836&lang.js","../../src/components/va-tabs/VaTab/index.ts","../../src/components/va-tabs/index.ts"],"sourcesContent":["import { ComputedRef, Ref } from 'vue'\n\nexport const TabsViewKey = Symbol('TabsView')\nexport const TabKey = Symbol('Tab')\n\nexport interface TabComponent {\n  id: string | number | null,\n  tabElement: Ref<HTMLElement | undefined>,\n  name: ComputedRef<string | number | undefined>,\n  tabIndexComputed: ComputedRef<number>,\n  isActive: Ref<boolean>,\n  isActiveRouterLink: ComputedRef<boolean>,\n  rightSidePosition: Ref<number>,\n  leftSidePosition: Ref<number>,\n  onTabClick: () => void,\n  onTabKeydown: () => void,\n  onFocus: () => void,\n  updateSidePositions: () => void,\n}\n\nexport interface TabsView {\n  parentDisabled: boolean,\n  tabsList: TabComponent[],\n  selectTab: (tab: TabComponent) => void,\n  moveToTab: (tab: TabComponent) => void,\n  registerTab: (tab: TabComponent) => void,\n  unregisterTab: (tab: TabComponent) => void,\n}\n","<template>\n  <div\n    class=\"va-tabs\"\n    :class=\"computedTabsClass\"\n  >\n    <div\n      class=\"va-tabs__wrapper\"\n      ref=\"wrapper\"\n    >\n      <va-button\n        v-if=\"showPagination\"\n        :disabled=\"disablePaginationLeft\"\n        class=\"va-tabs__pagination\"\n        :color=\"color\"\n        flat\n        size=\"medium\"\n        :icon=\"$props.prevIcon\"\n        @click=\"movePaginationLeft()\"\n      />\n      <div\n        class=\"va-tabs__container\"\n        :class=\"computedClass\"\n        ref=\"container\"\n      >\n        <div\n          class=\"va-tabs__tabs\"\n          :style=\"paginationControlledStyles\"\n          ref=\"tabs\"\n        >\n          <div\n            class=\"va-tabs__slider-wrapper\"\n            :style=\"sliderStyles\"\n          >\n            <div class=\"va-tabs__slider\" />\n          </div>\n\n          <va-config :components=\"tabConfig\">\n            <div class=\"va-tabs__tabs-items\">\n              <slot name=\"tabs\"></slot>\n            </div>\n          </va-config>\n        </div>\n      </div>\n      <va-button\n        v-if=\"showPagination\"\n        :disabled=\"disablePaginationRight\"\n        class=\"va-tabs__pagination\"\n        :color=\"color\"\n        flat\n        size=\"medium\"\n        :icon=\"$props.nextIcon\"\n        @click=\"movePaginationRight()\"\n      />\n    </div>\n    <div class=\"va-tabs__content\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  provide,\n  reactive,\n  ref,\n  unref,\n  watch,\n  Ref,\n} from 'vue'\nimport VaButton from '../va-button'\nimport VaConfig from '../va-config'\nimport { useStateful, useStatefulProps } from '../../composables/useStateful'\nimport { useColor } from '../../composables/useColor'\nimport { TabsViewKey, TabComponent } from './types'\nimport { useResizeObserver } from '../../composables/useResizeObserver'\n\nconst getClientWidth = (element: HTMLElement | null | undefined): number => element?.clientWidth || 0\n\nexport default defineComponent({\n  name: 'VaTabs',\n  components: { VaButton, VaConfig },\n  emits: ['update:modelValue', 'click:next', 'click:prev'],\n\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: [String, Number], default: null },\n    left: { type: Boolean, default: true },\n    right: { type: Boolean, default: false },\n    center: { type: Boolean, default: false },\n    grow: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    hideSlider: { type: Boolean, default: false },\n    vertical: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    prevIcon: { type: String, default: 'chevron_left' },\n    nextIcon: { type: String, default: 'chevron_right' },\n  },\n\n  setup: (props, { emit }) => {\n    const wrapper = ref<HTMLElement>()\n    const container = ref<HTMLElement>()\n    const tabs = ref<HTMLElement>()\n\n    const tabsList: Ref<TabComponent[]> = ref([])\n    const sliderHeight = ref<number | null>(null)\n    const sliderWidth = ref<number | null>(null)\n    const sliderOffsetX = ref(0)\n    const sliderOffsetY = ref(0)\n    const showPagination = ref(false)\n    const tabsContentOffset = ref(0)\n    const startingXPoint = ref(0)\n    const animationIncluded = ref(false)\n    const { colorComputed } = useColor(props)\n    const { valueComputed: tabSelected }: { valueComputed: Ref<string | number | null> } = useStateful(props, emit)\n    const tabConfig = reactive({\n      VaTab: {\n        color: props.color,\n      },\n    })\n\n    const computedClass = computed(() => {\n      const {\n        left,\n        right,\n        center,\n        grow,\n        disabled,\n      } = props\n\n      return {\n        'va-tabs__container--left': left && !right && !center && !grow,\n        'va-tabs__container--right': right,\n        'va-tabs__container--center': center,\n        'va-tabs__container--grow': grow,\n        'va-tabs__container--disabled': disabled,\n      }\n    })\n\n    const computedTabsClass = computed(() => ({ 'va-tabs--vertical': props.vertical }))\n\n    const sliderStyles = computed(() => {\n      if (props.hideSlider) {\n        return { display: 'none' }\n      }\n\n      return {\n        backgroundColor: colorComputed.value,\n        height: props.vertical ? `${sliderHeight.value}px` : '',\n        width: props.vertical ? '' : `${sliderWidth.value}px`,\n        transform: `translateY(-${sliderOffsetY.value}px) translateX(${sliderOffsetX.value}px)`,\n        transition: animationIncluded.value ? 'var(--va-tabs-slider-wrapper-transition)' : '',\n      }\n    })\n\n    const paginationControlledStyles = computed(() => {\n      // Prevents the movement of vertical tabs\n      if (props.vertical) {\n        return {\n          transform: 'translateX(0px)',\n        }\n      }\n\n      return {\n        transform: `translateX(${startingXPoint.value - tabsContentOffset.value}px)`,\n        transition: animationIncluded.value ? 'var(--va-tabs-slider-transition)' : '',\n      }\n    })\n\n    const disablePaginationLeft = computed(() => tabsContentOffset.value === 0)\n\n    const disablePaginationRight = computed(() => {\n      const lastTab = tabsList.value[tabsList.value.length - 1]\n      const leftSidePosition = unref(lastTab.leftSidePosition)\n      const rightSidePosition = unref(lastTab.rightSidePosition)\n      const containerClientWidth = getClientWidth(container.value)\n\n      return rightSidePosition <= tabsContentOffset.value + containerClientWidth ||\n        leftSidePosition <= tabsContentOffset.value\n    })\n\n    // Methods\n    const resetSliderSizes = () => {\n      sliderWidth.value = 0\n      sliderHeight.value = 0\n    }\n\n    const moveToTab = (tab: TabComponent) => {\n      const containerClientWidth = getClientWidth(container.value)\n      const tabsClientWidth = getClientWidth(tabs.value)\n      const leftSidePosition = unref(tab.leftSidePosition)\n      const rightSidePosition = unref(tab.rightSidePosition)\n\n      if (showPagination.value && leftSidePosition + containerClientWidth <= tabsClientWidth) {\n        tabsContentOffset.value = leftSidePosition\n      } else if (showPagination.value && rightSidePosition >= containerClientWidth) {\n        tabsContentOffset.value = rightSidePosition - containerClientWidth\n      } else {\n        tabsContentOffset.value = 0\n      }\n    }\n\n    const updateStartingXPoint = () => {\n      startingXPoint.value = 0\n\n      if (!showPagination.value) {\n        return\n      }\n\n      const containerClientWidth = getClientWidth(container.value)\n      const tabsClientWidth = getClientWidth(tabs.value)\n\n      if (props.right) {\n        startingXPoint.value = tabsClientWidth - containerClientWidth\n      } else if (props.center) {\n        startingXPoint.value = Math.floor((tabsClientWidth - containerClientWidth) / 2)\n      }\n    }\n\n    const updateTabsState = () => {\n      resetSliderSizes()\n\n      tabsList.value.forEach((tab: TabComponent) => {\n        tab.updateSidePositions()\n\n        const isTabSelected = (tab.name?.value || tab.id) === tabSelected.value\n\n        tab.isActive = tab.isActiveRouterLink || isTabSelected\n\n        if (tab.isActive) {\n          moveToTab(tab)\n          updateSlider(tab)\n        }\n      })\n\n      const containerClientWidth = getClientWidth(container.value)\n      const tabsClientWidth = getClientWidth(tabs.value)\n\n      if (tabsContentOffset.value + containerClientWidth > tabsClientWidth && tabsList.value) {\n        moveToTab(tabsList.value[0])\n      }\n\n      updateStartingXPoint()\n    }\n\n    const updatePagination = () => {\n      const tabsClientWidth = getClientWidth(tabs.value)\n      const wrapperClientWidth = getClientWidth(wrapper.value)\n\n      showPagination.value = !!(tabs.value && wrapper.value && tabsClientWidth > wrapperClientWidth)\n    }\n\n    const movePaginationLeft = () => {\n      const containerClientWidth = getClientWidth(container.value)\n      let offsetToSet = tabsContentOffset.value - containerClientWidth\n\n      if (tabsList.value) {\n        for (let i = 0; i < tabsList.value.length - 1; i++) {\n          const currentTabLeftSidePosition = unref(tabsList.value[i]?.leftSidePosition)\n          const nextTabLeftSidePosition = unref(tabsList.value[i + 1]?.leftSidePosition)\n\n          if (\n            (currentTabLeftSidePosition > offsetToSet && currentTabLeftSidePosition < tabsContentOffset.value) ||\n            nextTabLeftSidePosition >= tabsContentOffset.value\n          ) {\n            offsetToSet = currentTabLeftSidePosition\n            break\n          }\n        }\n      }\n\n      tabsContentOffset.value = Math.max(0, offsetToSet)\n\n      emit('click:prev')\n    }\n\n    const movePaginationRight = () => {\n      const containerClientWidth = getClientWidth(container.value)\n      const containerRightSide = tabsContentOffset.value + containerClientWidth\n      let offsetToSet = containerRightSide\n\n      if (tabsList.value) {\n        for (let i = 0; i < tabsList.value.length - 1; i++) {\n          const rightSidePosition = unref(tabsList.value[i].rightSidePosition)\n\n          if (rightSidePosition > containerRightSide) {\n            offsetToSet = unref(tabsList.value[i].leftSidePosition)\n\n            if (tabsContentOffset.value < offsetToSet) {\n              break\n            }\n          }\n        }\n      }\n\n      const rightSidePosition = unref(tabsList.value[tabsList.value.length - 1]?.rightSidePosition)\n      const maxOffset = rightSidePosition - containerClientWidth\n\n      offsetToSet = Math.min(maxOffset, offsetToSet)\n      tabsContentOffset.value = Math.max(0, offsetToSet)\n\n      emit('click:next')\n    }\n\n    const updateSlider = (tab: TabComponent) => {\n      const tabElement = unref(tab.tabElement)\n      const tabOffsetTop = tabElement?.offsetTop || 0\n      const tabOffsetLeft = tabElement?.offsetLeft || 0\n      const tabClientHeight = tabElement?.clientHeight || 0\n      const tabClientWidth = tabElement?.clientWidth || 0\n\n      if (props.vertical) {\n        const containerClientHeight = container.value?.clientHeight || 0\n        const calculatedSliderOffsetY = containerClientHeight - tabOffsetTop - tabClientHeight\n\n        sliderOffsetY.value = Math.max(calculatedSliderOffsetY, 0)\n        sliderHeight.value = tabClientHeight\n        sliderOffsetX.value = 0\n        sliderWidth.value = 0\n      } else {\n        sliderOffsetX.value = tabOffsetLeft\n        sliderWidth.value = tabClientWidth\n        sliderOffsetY.value = 0\n        sliderHeight.value = 0\n      }\n    }\n\n    const includeAnimation = () => {\n      if (!animationIncluded.value) {\n        requestAnimationFrame(() => {\n          animationIncluded.value = true\n        })\n      }\n    }\n\n    const redrawTabs = () => {\n      const oldShowPaginationValue = showPagination.value\n\n      updatePagination()\n\n      if (oldShowPaginationValue === showPagination.value) {\n        updateTabsState()\n        includeAnimation()\n      } else {\n        requestAnimationFrame(() => {\n          updateTabsState()\n          includeAnimation()\n        })\n      }\n    }\n\n    const selectTab = (tab: TabComponent) => {\n      if (!tab) { return }\n\n      tabSelected.value = tab.name?.value || tab.id\n\n      if (props.stateful) {\n        updateTabsState()\n      }\n    }\n\n    const registerTab = (tab: TabComponent) => {\n      const idx = tabsList.value.push(tab) - 1\n\n      tab.id = tab.name?.value || idx\n    }\n\n    const unregisterTab = (tab: TabComponent) => {\n      tabsList.value = tabsList.value.filter((filteredTab: TabComponent) => filteredTab.id !== tab.id)\n\n      tabsList.value.forEach((tabListItem: TabComponent, idx: number) => {\n        tabListItem.id = tabListItem.name?.value || idx\n      })\n    }\n\n    provide(TabsViewKey, {\n      parentDisabled: props.disabled,\n      selectTab,\n      moveToTab,\n      registerTab,\n      unregisterTab,\n    })\n\n    // Lifecycle hooks\n    watch(() => props.modelValue, updateTabsState)\n\n    const resizeObserver = useResizeObserver([wrapper, tabs], redrawTabs)\n\n    return {\n      wrapper,\n      container,\n      tabs,\n      tabsList,\n      sliderHeight,\n      sliderWidth,\n      sliderOffsetX,\n      sliderOffsetY,\n      showPagination,\n      tabsContentOffset,\n      resizeObserver,\n      startingXPoint,\n      animationIncluded,\n      colorComputed,\n      tabConfig,\n      computedClass,\n      computedTabsClass,\n      tabSelected,\n      sliderStyles,\n      paginationControlledStyles,\n      disablePaginationLeft,\n      disablePaginationRight,\n      resetSliderSizes,\n      moveToTab,\n      updateStartingXPoint,\n      updateTabsState,\n      updatePagination,\n      movePaginationLeft,\n      movePaginationRight,\n      updateSlider,\n      includeAnimation,\n      redrawTabs,\n      selectTab,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-tabs {\n  position: var(--va-tabs-position);\n  font-family: var(--va-font-family);\n\n  &__wrapper {\n    overflow: hidden;\n    contain: content;\n    display: flex;\n    flex: 1 1 auto;\n  }\n\n  .va-tabs__pagination {\n    flex: 0 0 auto;\n  }\n\n  .va-tabs__container {\n    overflow: var(--va-tabs-container-overflow);\n    flex: var(--va-tabs-container-flex);\n    display: var(--va-tabs-container-display);\n    height: var(--va-tabs-container-height);\n    margin: var(--va-tabs-container-margin);\n    white-space: var(--va-tabs-container-white-space);\n    position: var(--va-tabs-container-position);\n\n    .va-tabs__tabs {\n      position: absolute;\n      height: 100%;\n    }\n\n    .va-tabs__tabs-items {\n      display: flex;\n    }\n\n    &--right {\n      justify-content: flex-end;\n    }\n\n    &--grow {\n      .va-tabs__tabs {\n        display: flex;\n        min-width: 100%;\n      }\n\n      .va-tab {\n        flex: 1 0 auto;\n        max-width: none;\n      }\n    }\n\n    &--center {\n      justify-content: center;\n    }\n\n    &--disabled {\n      @include va-disabled();\n\n      pointer-events: none;\n    }\n  }\n\n  &--vertical {\n    .va-tabs__wrapper {\n      flex: 0 0 auto;\n    }\n\n    .va-tabs__container {\n      height: auto;\n\n      .va-tabs__tabs-items {\n        flex-direction: column;\n      }\n\n      .va-tabs__tabs {\n        position: relative;\n      }\n    }\n\n    .va-tab {\n      display: flex;\n\n      &__content {\n        flex: 0 0 auto;\n      }\n    }\n\n    .va-tabs__content {\n      flex: 1 0 auto;\n    }\n  }\n\n  .va-tabs__slider-wrapper {\n    bottom: var(--va-tabs-slider-wrapper-bottom);\n    margin: var(--va-tabs-slider-wrapper-margin);\n    position: var(--va-tabs-slider-wrapper-position);\n    z-index: var(--va-tabs-slider-wrapper-z-index);\n\n    .va-tabs__slider {\n      width: var(--va-tabs-slider-width);\n      height: var(--va-tabs-slider-height);\n    }\n  }\n}\n</style>\n","import { onBeforeUnmount, onMounted, ref, Ref, unref, watch } from 'vue'\n\ntype MaybeRef<T> = T | Ref<T>\n\nexport const useResizeObserver = <T extends HTMLElement | undefined>(elementsList: MaybeRef<T>[], cb: () => void) => {\n  const resizeObserver = ref<ResizeObserver>()\n\n  const observeAll = (elementsList: MaybeRef<T>[]) => {\n    elementsList.forEach((element: MaybeRef<T>) => {\n      const unrefedElement = unref(element)\n\n      unrefedElement && resizeObserver.value?.observe(unrefedElement)\n    })\n  }\n\n  watch(elementsList, (newValue) => {\n    resizeObserver.value?.disconnect()\n    observeAll(newValue)\n  })\n\n  onMounted(() => {\n    resizeObserver.value = new ResizeObserver(cb)\n    observeAll(elementsList)\n  })\n\n  onBeforeUnmount(() => resizeObserver.value?.disconnect())\n\n  return resizeObserver\n}\n","<template>\n  <div\n    class=\"va-tabs\"\n    :class=\"computedTabsClass\"\n  >\n    <div\n      class=\"va-tabs__wrapper\"\n      ref=\"wrapper\"\n    >\n      <va-button\n        v-if=\"showPagination\"\n        :disabled=\"disablePaginationLeft\"\n        class=\"va-tabs__pagination\"\n        :color=\"color\"\n        flat\n        size=\"medium\"\n        :icon=\"$props.prevIcon\"\n        @click=\"movePaginationLeft()\"\n      />\n      <div\n        class=\"va-tabs__container\"\n        :class=\"computedClass\"\n        ref=\"container\"\n      >\n        <div\n          class=\"va-tabs__tabs\"\n          :style=\"paginationControlledStyles\"\n          ref=\"tabs\"\n        >\n          <div\n            class=\"va-tabs__slider-wrapper\"\n            :style=\"sliderStyles\"\n          >\n            <div class=\"va-tabs__slider\" />\n          </div>\n\n          <va-config :components=\"tabConfig\">\n            <div class=\"va-tabs__tabs-items\">\n              <slot name=\"tabs\"></slot>\n            </div>\n          </va-config>\n        </div>\n      </div>\n      <va-button\n        v-if=\"showPagination\"\n        :disabled=\"disablePaginationRight\"\n        class=\"va-tabs__pagination\"\n        :color=\"color\"\n        flat\n        size=\"medium\"\n        :icon=\"$props.nextIcon\"\n        @click=\"movePaginationRight()\"\n      />\n    </div>\n    <div class=\"va-tabs__content\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  provide,\n  reactive,\n  ref,\n  unref,\n  watch,\n  Ref,\n} from 'vue'\nimport VaButton from '../va-button'\nimport VaConfig from '../va-config'\nimport { useStateful, useStatefulProps } from '../../composables/useStateful'\nimport { useColor } from '../../composables/useColor'\nimport { TabsViewKey, TabComponent } from './types'\nimport { useResizeObserver } from '../../composables/useResizeObserver'\n\nconst getClientWidth = (element: HTMLElement | null | undefined): number => element?.clientWidth || 0\n\nexport default defineComponent({\n  name: 'VaTabs',\n  components: { VaButton, VaConfig },\n  emits: ['update:modelValue', 'click:next', 'click:prev'],\n\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: [String, Number], default: null },\n    left: { type: Boolean, default: true },\n    right: { type: Boolean, default: false },\n    center: { type: Boolean, default: false },\n    grow: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    hideSlider: { type: Boolean, default: false },\n    vertical: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    prevIcon: { type: String, default: 'chevron_left' },\n    nextIcon: { type: String, default: 'chevron_right' },\n  },\n\n  setup: (props, { emit }) => {\n    const wrapper = ref<HTMLElement>()\n    const container = ref<HTMLElement>()\n    const tabs = ref<HTMLElement>()\n\n    const tabsList: Ref<TabComponent[]> = ref([])\n    const sliderHeight = ref<number | null>(null)\n    const sliderWidth = ref<number | null>(null)\n    const sliderOffsetX = ref(0)\n    const sliderOffsetY = ref(0)\n    const showPagination = ref(false)\n    const tabsContentOffset = ref(0)\n    const startingXPoint = ref(0)\n    const animationIncluded = ref(false)\n    const { colorComputed } = useColor(props)\n    const { valueComputed: tabSelected }: { valueComputed: Ref<string | number | null> } = useStateful(props, emit)\n    const tabConfig = reactive({\n      VaTab: {\n        color: props.color,\n      },\n    })\n\n    const computedClass = computed(() => {\n      const {\n        left,\n        right,\n        center,\n        grow,\n        disabled,\n      } = props\n\n      return {\n        'va-tabs__container--left': left && !right && !center && !grow,\n        'va-tabs__container--right': right,\n        'va-tabs__container--center': center,\n        'va-tabs__container--grow': grow,\n        'va-tabs__container--disabled': disabled,\n      }\n    })\n\n    const computedTabsClass = computed(() => ({ 'va-tabs--vertical': props.vertical }))\n\n    const sliderStyles = computed(() => {\n      if (props.hideSlider) {\n        return { display: 'none' }\n      }\n\n      return {\n        backgroundColor: colorComputed.value,\n        height: props.vertical ? `${sliderHeight.value}px` : '',\n        width: props.vertical ? '' : `${sliderWidth.value}px`,\n        transform: `translateY(-${sliderOffsetY.value}px) translateX(${sliderOffsetX.value}px)`,\n        transition: animationIncluded.value ? 'var(--va-tabs-slider-wrapper-transition)' : '',\n      }\n    })\n\n    const paginationControlledStyles = computed(() => {\n      // Prevents the movement of vertical tabs\n      if (props.vertical) {\n        return {\n          transform: 'translateX(0px)',\n        }\n      }\n\n      return {\n        transform: `translateX(${startingXPoint.value - tabsContentOffset.value}px)`,\n        transition: animationIncluded.value ? 'var(--va-tabs-slider-transition)' : '',\n      }\n    })\n\n    const disablePaginationLeft = computed(() => tabsContentOffset.value === 0)\n\n    const disablePaginationRight = computed(() => {\n      const lastTab = tabsList.value[tabsList.value.length - 1]\n      const leftSidePosition = unref(lastTab.leftSidePosition)\n      const rightSidePosition = unref(lastTab.rightSidePosition)\n      const containerClientWidth = getClientWidth(container.value)\n\n      return rightSidePosition <= tabsContentOffset.value + containerClientWidth ||\n        leftSidePosition <= tabsContentOffset.value\n    })\n\n    // Methods\n    const resetSliderSizes = () => {\n      sliderWidth.value = 0\n      sliderHeight.value = 0\n    }\n\n    const moveToTab = (tab: TabComponent) => {\n      const containerClientWidth = getClientWidth(container.value)\n      const tabsClientWidth = getClientWidth(tabs.value)\n      const leftSidePosition = unref(tab.leftSidePosition)\n      const rightSidePosition = unref(tab.rightSidePosition)\n\n      if (showPagination.value && leftSidePosition + containerClientWidth <= tabsClientWidth) {\n        tabsContentOffset.value = leftSidePosition\n      } else if (showPagination.value && rightSidePosition >= containerClientWidth) {\n        tabsContentOffset.value = rightSidePosition - containerClientWidth\n      } else {\n        tabsContentOffset.value = 0\n      }\n    }\n\n    const updateStartingXPoint = () => {\n      startingXPoint.value = 0\n\n      if (!showPagination.value) {\n        return\n      }\n\n      const containerClientWidth = getClientWidth(container.value)\n      const tabsClientWidth = getClientWidth(tabs.value)\n\n      if (props.right) {\n        startingXPoint.value = tabsClientWidth - containerClientWidth\n      } else if (props.center) {\n        startingXPoint.value = Math.floor((tabsClientWidth - containerClientWidth) / 2)\n      }\n    }\n\n    const updateTabsState = () => {\n      resetSliderSizes()\n\n      tabsList.value.forEach((tab: TabComponent) => {\n        tab.updateSidePositions()\n\n        const isTabSelected = (tab.name?.value || tab.id) === tabSelected.value\n\n        tab.isActive = tab.isActiveRouterLink || isTabSelected\n\n        if (tab.isActive) {\n          moveToTab(tab)\n          updateSlider(tab)\n        }\n      })\n\n      const containerClientWidth = getClientWidth(container.value)\n      const tabsClientWidth = getClientWidth(tabs.value)\n\n      if (tabsContentOffset.value + containerClientWidth > tabsClientWidth && tabsList.value) {\n        moveToTab(tabsList.value[0])\n      }\n\n      updateStartingXPoint()\n    }\n\n    const updatePagination = () => {\n      const tabsClientWidth = getClientWidth(tabs.value)\n      const wrapperClientWidth = getClientWidth(wrapper.value)\n\n      showPagination.value = !!(tabs.value && wrapper.value && tabsClientWidth > wrapperClientWidth)\n    }\n\n    const movePaginationLeft = () => {\n      const containerClientWidth = getClientWidth(container.value)\n      let offsetToSet = tabsContentOffset.value - containerClientWidth\n\n      if (tabsList.value) {\n        for (let i = 0; i < tabsList.value.length - 1; i++) {\n          const currentTabLeftSidePosition = unref(tabsList.value[i]?.leftSidePosition)\n          const nextTabLeftSidePosition = unref(tabsList.value[i + 1]?.leftSidePosition)\n\n          if (\n            (currentTabLeftSidePosition > offsetToSet && currentTabLeftSidePosition < tabsContentOffset.value) ||\n            nextTabLeftSidePosition >= tabsContentOffset.value\n          ) {\n            offsetToSet = currentTabLeftSidePosition\n            break\n          }\n        }\n      }\n\n      tabsContentOffset.value = Math.max(0, offsetToSet)\n\n      emit('click:prev')\n    }\n\n    const movePaginationRight = () => {\n      const containerClientWidth = getClientWidth(container.value)\n      const containerRightSide = tabsContentOffset.value + containerClientWidth\n      let offsetToSet = containerRightSide\n\n      if (tabsList.value) {\n        for (let i = 0; i < tabsList.value.length - 1; i++) {\n          const rightSidePosition = unref(tabsList.value[i].rightSidePosition)\n\n          if (rightSidePosition > containerRightSide) {\n            offsetToSet = unref(tabsList.value[i].leftSidePosition)\n\n            if (tabsContentOffset.value < offsetToSet) {\n              break\n            }\n          }\n        }\n      }\n\n      const rightSidePosition = unref(tabsList.value[tabsList.value.length - 1]?.rightSidePosition)\n      const maxOffset = rightSidePosition - containerClientWidth\n\n      offsetToSet = Math.min(maxOffset, offsetToSet)\n      tabsContentOffset.value = Math.max(0, offsetToSet)\n\n      emit('click:next')\n    }\n\n    const updateSlider = (tab: TabComponent) => {\n      const tabElement = unref(tab.tabElement)\n      const tabOffsetTop = tabElement?.offsetTop || 0\n      const tabOffsetLeft = tabElement?.offsetLeft || 0\n      const tabClientHeight = tabElement?.clientHeight || 0\n      const tabClientWidth = tabElement?.clientWidth || 0\n\n      if (props.vertical) {\n        const containerClientHeight = container.value?.clientHeight || 0\n        const calculatedSliderOffsetY = containerClientHeight - tabOffsetTop - tabClientHeight\n\n        sliderOffsetY.value = Math.max(calculatedSliderOffsetY, 0)\n        sliderHeight.value = tabClientHeight\n        sliderOffsetX.value = 0\n        sliderWidth.value = 0\n      } else {\n        sliderOffsetX.value = tabOffsetLeft\n        sliderWidth.value = tabClientWidth\n        sliderOffsetY.value = 0\n        sliderHeight.value = 0\n      }\n    }\n\n    const includeAnimation = () => {\n      if (!animationIncluded.value) {\n        requestAnimationFrame(() => {\n          animationIncluded.value = true\n        })\n      }\n    }\n\n    const redrawTabs = () => {\n      const oldShowPaginationValue = showPagination.value\n\n      updatePagination()\n\n      if (oldShowPaginationValue === showPagination.value) {\n        updateTabsState()\n        includeAnimation()\n      } else {\n        requestAnimationFrame(() => {\n          updateTabsState()\n          includeAnimation()\n        })\n      }\n    }\n\n    const selectTab = (tab: TabComponent) => {\n      if (!tab) { return }\n\n      tabSelected.value = tab.name?.value || tab.id\n\n      if (props.stateful) {\n        updateTabsState()\n      }\n    }\n\n    const registerTab = (tab: TabComponent) => {\n      const idx = tabsList.value.push(tab) - 1\n\n      tab.id = tab.name?.value || idx\n    }\n\n    const unregisterTab = (tab: TabComponent) => {\n      tabsList.value = tabsList.value.filter((filteredTab: TabComponent) => filteredTab.id !== tab.id)\n\n      tabsList.value.forEach((tabListItem: TabComponent, idx: number) => {\n        tabListItem.id = tabListItem.name?.value || idx\n      })\n    }\n\n    provide(TabsViewKey, {\n      parentDisabled: props.disabled,\n      selectTab,\n      moveToTab,\n      registerTab,\n      unregisterTab,\n    })\n\n    // Lifecycle hooks\n    watch(() => props.modelValue, updateTabsState)\n\n    const resizeObserver = useResizeObserver([wrapper, tabs], redrawTabs)\n\n    return {\n      wrapper,\n      container,\n      tabs,\n      tabsList,\n      sliderHeight,\n      sliderWidth,\n      sliderOffsetX,\n      sliderOffsetY,\n      showPagination,\n      tabsContentOffset,\n      resizeObserver,\n      startingXPoint,\n      animationIncluded,\n      colorComputed,\n      tabConfig,\n      computedClass,\n      computedTabsClass,\n      tabSelected,\n      sliderStyles,\n      paginationControlledStyles,\n      disablePaginationLeft,\n      disablePaginationRight,\n      resetSliderSizes,\n      moveToTab,\n      updateStartingXPoint,\n      updateTabsState,\n      updatePagination,\n      movePaginationLeft,\n      movePaginationRight,\n      updateSlider,\n      includeAnimation,\n      redrawTabs,\n      selectTab,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-tabs {\n  position: var(--va-tabs-position);\n  font-family: var(--va-font-family);\n\n  &__wrapper {\n    overflow: hidden;\n    contain: content;\n    display: flex;\n    flex: 1 1 auto;\n  }\n\n  .va-tabs__pagination {\n    flex: 0 0 auto;\n  }\n\n  .va-tabs__container {\n    overflow: var(--va-tabs-container-overflow);\n    flex: var(--va-tabs-container-flex);\n    display: var(--va-tabs-container-display);\n    height: var(--va-tabs-container-height);\n    margin: var(--va-tabs-container-margin);\n    white-space: var(--va-tabs-container-white-space);\n    position: var(--va-tabs-container-position);\n\n    .va-tabs__tabs {\n      position: absolute;\n      height: 100%;\n    }\n\n    .va-tabs__tabs-items {\n      display: flex;\n    }\n\n    &--right {\n      justify-content: flex-end;\n    }\n\n    &--grow {\n      .va-tabs__tabs {\n        display: flex;\n        min-width: 100%;\n      }\n\n      .va-tab {\n        flex: 1 0 auto;\n        max-width: none;\n      }\n    }\n\n    &--center {\n      justify-content: center;\n    }\n\n    &--disabled {\n      @include va-disabled();\n\n      pointer-events: none;\n    }\n  }\n\n  &--vertical {\n    .va-tabs__wrapper {\n      flex: 0 0 auto;\n    }\n\n    .va-tabs__container {\n      height: auto;\n\n      .va-tabs__tabs-items {\n        flex-direction: column;\n      }\n\n      .va-tabs__tabs {\n        position: relative;\n      }\n    }\n\n    .va-tab {\n      display: flex;\n\n      &__content {\n        flex: 0 0 auto;\n      }\n    }\n\n    .va-tabs__content {\n      flex: 1 0 auto;\n    }\n  }\n\n  .va-tabs__slider-wrapper {\n    bottom: var(--va-tabs-slider-wrapper-bottom);\n    margin: var(--va-tabs-slider-wrapper-margin);\n    position: var(--va-tabs-slider-wrapper-position);\n    z-index: var(--va-tabs-slider-wrapper-z-index);\n\n    .va-tabs__slider {\n      width: var(--va-tabs-slider-width);\n      height: var(--va-tabs-slider-height);\n    }\n  }\n}\n</style>\n","<template>\n  <component\n    class=\"va-tab\"\n    ref=\"tabElement\"\n    :is=\"tagComputed\"\n    :href=\"hrefComputed\"\n    :target=\"target\"\n    :to=\"to\"\n    :replace=\"replace\"\n    :exact=\"exact\"\n    :active-class=\"activeClass\"\n    :exact-active-class=\"exactActiveClass\"\n    :class=\"classComputed\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div\n      class=\"va-tab__content\"\n      v-on=\"keyboardFocusListeners\"\n      :tabindex=\"tabIndexComputed\"\n      @focus=\"onFocus()\"\n      @click=\"onTabClick()\"\n      @keydown.enter=\"onTabKeydown()\"\n    >\n      <slot>\n        <va-icon\n          v-if=\"icon\"\n          class=\"va-tab__icon\"\n          :name=\"icon\"\n          size=\"small\"\n        />\n        <span\n          class=\"va-tab__label\"\n          v-text=\"label\"\n        />\n      </slot>\n    </div>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n} from 'vue'\nimport VaIcon from '../../va-icon'\nimport { useRouterLink, useRouterLinkProps } from '../../../composables/useRouterLink'\nimport useKeyboardOnlyFocus from '../../../composables/useKeyboardOnlyFocus'\nimport { useColor } from '../../../composables/useColor'\nimport { TabsViewKey, TabsView, TabComponent } from '../types'\n\nexport default defineComponent({\n  name: 'VaTab',\n  components: { VaIcon },\n  emits: ['click', 'keydown-enter', 'focus'],\n\n  props: {\n    ...useRouterLinkProps,\n    color: {\n      type: String,\n      default: '',\n    },\n    icon: {\n      type: String,\n      default: '',\n    },\n    label: {\n      type: String,\n      default: '',\n    },\n    disabled: {\n      type: Boolean,\n    },\n    name: {\n      type: [String, Number],\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  setup: (props, { emit }) => {\n    const tabElement = ref<HTMLElement>()\n\n    const isActive = ref(false)\n    const hoverState = ref(false)\n    const rightSidePosition = ref(0)\n    const leftSidePosition = ref(0)\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n    const { tagComputed, hrefComputed, isActiveRouterLink } = useRouterLink(props)\n    const { colorComputed } = useColor(props)\n    const classComputed = computed(() => ({ 'va-tab--disabled': props.disabled }))\n    const {\n      parentDisabled,\n      selectTab,\n      moveToTab,\n      registerTab,\n      unregisterTab,\n    } = inject<TabsView>(TabsViewKey, {\n      parentDisabled: false,\n      tabsList: [],\n      selectTab: (tab: TabComponent) => tab,\n      moveToTab: (tab: TabComponent) => tab,\n      registerTab: (tab: TabComponent) => tab,\n      unregisterTab: (tab: TabComponent) => tab,\n    })\n    const tabIndexComputed = computed(() => (props.disabled || parentDisabled) ? -1 : 0)\n\n    const computedStyle = computed(() => ({\n      color: hasKeyboardFocus.value || hoverState.value || isActive.value ? colorComputed.value : 'inherit',\n    }))\n\n    const updateHoverState = (isHover: boolean) => {\n      hoverState.value = isHover\n    }\n\n    const updateSidePositions = () => {\n      const componentOffsetLeft = tabElement.value?.offsetLeft || 0\n      const componentOffsetWidth = tabElement.value?.offsetWidth || 0\n\n      rightSidePosition.value = componentOffsetLeft + componentOffsetWidth\n      leftSidePosition.value = componentOffsetLeft\n    }\n\n    const onTabClick = () => {\n      selectTab(tabComponent)\n      emit('click')\n    }\n\n    const onTabKeydown = () => {\n      selectTab(tabComponent)\n      emit('keydown-enter')\n    }\n\n    const onFocus = () => {\n      if (hasKeyboardFocus.value) {\n        moveToTab(tabComponent)\n      }\n\n      emit('focus')\n    }\n\n    const tabComponent: TabComponent = {\n      name: computed(() => props.name),\n      id: null,\n      tabElement,\n      isActive,\n      tabIndexComputed,\n      isActiveRouterLink,\n      rightSidePosition,\n      leftSidePosition,\n      onTabClick,\n      onTabKeydown,\n      onFocus,\n      updateSidePositions,\n    }\n\n    onMounted(() => {\n      registerTab(tabComponent)\n    })\n\n    onBeforeUnmount(() => {\n      unregisterTab(tabComponent)\n    })\n\n    return {\n      tabElement,\n      isActive,\n      hoverState,\n      hasKeyboardFocus,\n      keyboardFocusListeners,\n      tagComputed,\n      hrefComputed,\n      isActiveRouterLink,\n      colorComputed,\n      classComputed,\n      computedStyle,\n      tabIndexComputed,\n      rightSidePosition,\n      leftSidePosition,\n      updateHoverState,\n      updateSidePositions,\n      onTabClick,\n      onTabKeydown,\n      onFocus,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.va-tab {\n  align-items: var(--va-tab-align-items);\n  display: var(--va-tab-display);\n  flex: var(--va-tab-flex);\n  font-weight: var(--va-tab-font-weight);\n  line-height: var(--va-tab-line-height);\n  height: var(--va-tab-height);\n  max-width: var(--va-tab-max-width);\n  text-align: var(--va-tab-text-align);\n  vertical-align: var(--va-tab-vertical-align);\n  color: var(--va-tab-color);\n\n  &__content {\n    align-items: var(--va-tab-content-align-items);\n    color: var(--va-tab-content-color);\n    display: var(--va-tab-content-display);\n    flex: var(--va-tab-content-flex);\n    height: var(--va-tab-content-height);\n    justify-content: var(--va-tab-content-justify-content);\n    max-width: var(--va-tab-content-max-width);\n    text-decoration: var(--va-tab-content-text-decoration);\n    transition: var(--va-tab-content-transition);\n    user-select: var(--va-tab-content-user-select);\n    white-space: var(--va-tab-content-white-space);\n    padding: var(--va-tab-content-padding);\n    cursor: var(--va-tab-content-cursor);\n  }\n\n  &__icon {\n    margin-right: var(--va-tab-icon-margin-right);\n  }\n\n  &.va-tab--disabled {\n    @include va-disabled();\n\n    pointer-events: none;\n  }\n}\n</style>\n","<template>\n  <component\n    class=\"va-tab\"\n    ref=\"tabElement\"\n    :is=\"tagComputed\"\n    :href=\"hrefComputed\"\n    :target=\"target\"\n    :to=\"to\"\n    :replace=\"replace\"\n    :exact=\"exact\"\n    :active-class=\"activeClass\"\n    :exact-active-class=\"exactActiveClass\"\n    :class=\"classComputed\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div\n      class=\"va-tab__content\"\n      v-on=\"keyboardFocusListeners\"\n      :tabindex=\"tabIndexComputed\"\n      @focus=\"onFocus()\"\n      @click=\"onTabClick()\"\n      @keydown.enter=\"onTabKeydown()\"\n    >\n      <slot>\n        <va-icon\n          v-if=\"icon\"\n          class=\"va-tab__icon\"\n          :name=\"icon\"\n          size=\"small\"\n        />\n        <span\n          class=\"va-tab__label\"\n          v-text=\"label\"\n        />\n      </slot>\n    </div>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n} from 'vue'\nimport VaIcon from '../../va-icon'\nimport { useRouterLink, useRouterLinkProps } from '../../../composables/useRouterLink'\nimport useKeyboardOnlyFocus from '../../../composables/useKeyboardOnlyFocus'\nimport { useColor } from '../../../composables/useColor'\nimport { TabsViewKey, TabsView, TabComponent } from '../types'\n\nexport default defineComponent({\n  name: 'VaTab',\n  components: { VaIcon },\n  emits: ['click', 'keydown-enter', 'focus'],\n\n  props: {\n    ...useRouterLinkProps,\n    color: {\n      type: String,\n      default: '',\n    },\n    icon: {\n      type: String,\n      default: '',\n    },\n    label: {\n      type: String,\n      default: '',\n    },\n    disabled: {\n      type: Boolean,\n    },\n    name: {\n      type: [String, Number],\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  setup: (props, { emit }) => {\n    const tabElement = ref<HTMLElement>()\n\n    const isActive = ref(false)\n    const hoverState = ref(false)\n    const rightSidePosition = ref(0)\n    const leftSidePosition = ref(0)\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n    const { tagComputed, hrefComputed, isActiveRouterLink } = useRouterLink(props)\n    const { colorComputed } = useColor(props)\n    const classComputed = computed(() => ({ 'va-tab--disabled': props.disabled }))\n    const {\n      parentDisabled,\n      selectTab,\n      moveToTab,\n      registerTab,\n      unregisterTab,\n    } = inject<TabsView>(TabsViewKey, {\n      parentDisabled: false,\n      tabsList: [],\n      selectTab: (tab: TabComponent) => tab,\n      moveToTab: (tab: TabComponent) => tab,\n      registerTab: (tab: TabComponent) => tab,\n      unregisterTab: (tab: TabComponent) => tab,\n    })\n    const tabIndexComputed = computed(() => (props.disabled || parentDisabled) ? -1 : 0)\n\n    const computedStyle = computed(() => ({\n      color: hasKeyboardFocus.value || hoverState.value || isActive.value ? colorComputed.value : 'inherit',\n    }))\n\n    const updateHoverState = (isHover: boolean) => {\n      hoverState.value = isHover\n    }\n\n    const updateSidePositions = () => {\n      const componentOffsetLeft = tabElement.value?.offsetLeft || 0\n      const componentOffsetWidth = tabElement.value?.offsetWidth || 0\n\n      rightSidePosition.value = componentOffsetLeft + componentOffsetWidth\n      leftSidePosition.value = componentOffsetLeft\n    }\n\n    const onTabClick = () => {\n      selectTab(tabComponent)\n      emit('click')\n    }\n\n    const onTabKeydown = () => {\n      selectTab(tabComponent)\n      emit('keydown-enter')\n    }\n\n    const onFocus = () => {\n      if (hasKeyboardFocus.value) {\n        moveToTab(tabComponent)\n      }\n\n      emit('focus')\n    }\n\n    const tabComponent: TabComponent = {\n      name: computed(() => props.name),\n      id: null,\n      tabElement,\n      isActive,\n      tabIndexComputed,\n      isActiveRouterLink,\n      rightSidePosition,\n      leftSidePosition,\n      onTabClick,\n      onTabKeydown,\n      onFocus,\n      updateSidePositions,\n    }\n\n    onMounted(() => {\n      registerTab(tabComponent)\n    })\n\n    onBeforeUnmount(() => {\n      unregisterTab(tabComponent)\n    })\n\n    return {\n      tabElement,\n      isActive,\n      hoverState,\n      hasKeyboardFocus,\n      keyboardFocusListeners,\n      tagComputed,\n      hrefComputed,\n      isActiveRouterLink,\n      colorComputed,\n      classComputed,\n      computedStyle,\n      tabIndexComputed,\n      rightSidePosition,\n      leftSidePosition,\n      updateHoverState,\n      updateSidePositions,\n      onTabClick,\n      onTabKeydown,\n      onFocus,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.va-tab {\n  align-items: var(--va-tab-align-items);\n  display: var(--va-tab-display);\n  flex: var(--va-tab-flex);\n  font-weight: var(--va-tab-font-weight);\n  line-height: var(--va-tab-line-height);\n  height: var(--va-tab-height);\n  max-width: var(--va-tab-max-width);\n  text-align: var(--va-tab-text-align);\n  vertical-align: var(--va-tab-vertical-align);\n  color: var(--va-tab-color);\n\n  &__content {\n    align-items: var(--va-tab-content-align-items);\n    color: var(--va-tab-content-color);\n    display: var(--va-tab-content-display);\n    flex: var(--va-tab-content-flex);\n    height: var(--va-tab-content-height);\n    justify-content: var(--va-tab-content-justify-content);\n    max-width: var(--va-tab-content-max-width);\n    text-decoration: var(--va-tab-content-text-decoration);\n    transition: var(--va-tab-content-transition);\n    user-select: var(--va-tab-content-user-select);\n    white-space: var(--va-tab-content-white-space);\n    padding: var(--va-tab-content-padding);\n    cursor: var(--va-tab-content-cursor);\n  }\n\n  &__icon {\n    margin-right: var(--va-tab-icon-margin-right);\n  }\n\n  &.va-tab--disabled {\n    @include va-disabled();\n\n    pointer-events: none;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaTab from './VaTab.vue'\n\nexport default withConfigTransport(VaTab)\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaTabs from './VaTabs.vue'\n\nexport { default as VaTab } from './VaTab'\n\nexport default withConfigTransport(VaTabs)\n"],"names":["TabsViewKey","Symbol","getClientWidth","element","clientWidth","defineComponent","name","components","VaButton","VaConfig","emits","props","useStatefulProps","modelValue","type","String","Number","default","left","Boolean","right","center","grow","disabled","hideSlider","vertical","color","prevIcon","nextIcon","setup","emit","wrapper","ref","container","tabs","tabsList","sliderHeight","sliderWidth","sliderOffsetX","sliderOffsetY","showPagination","tabsContentOffset","startingXPoint","animationIncluded","colorComputed","useColor","valueComputed","tabSelected","useStateful","tabConfig","reactive","VaTab","computedClass","computed","computedTabsClass","sliderStyles","display","backgroundColor","value","height","width","transform","transition","paginationControlledStyles","disablePaginationLeft","disablePaginationRight","lastTab","length","leftSidePosition","unref","rightSidePosition","containerClientWidth","resetSliderSizes","moveToTab","tab","tabsClientWidth","updateStartingXPoint","Math","floor","updateTabsState","forEach","updateSidePositions","isTabSelected","id","isActive","isActiveRouterLink","updateSlider","updatePagination","wrapperClientWidth","tabElement","tabOffsetTop","offsetTop","tabOffsetLeft","offsetLeft","tabClientHeight","clientHeight","tabClientWidth","calculatedSliderOffsetY","max","includeAnimation","requestAnimationFrame","redrawTabs","oldShowPaginationValue","selectTab","stateful","provide","parentDisabled","registerTab","idx","push","unregisterTab","filter","filteredTab","tabListItem","watch","resizeObserver","elementsList","cb","observeAll","unrefedElement","observe","newValue","disconnect","onMounted","ResizeObserver","onBeforeUnmount","useResizeObserver","movePaginationLeft","offsetToSet","i","currentTabLeftSidePosition","nextTabLeftSidePosition","movePaginationRight","containerRightSide","maxOffset","min","class","_createElementVNode","_createElementBlock","_ctx","_hoisted_1","_createBlock","flat","size","icon","onClick","style","_createVNode","_hoisted_4","_renderSlot","_hoisted_5","VaIcon","useRouterLinkProps","label","tag","hoverState","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","tagComputed","hrefComputed","useRouterLink","classComputed","inject","tabIndexComputed","computedStyle","componentOffsetLeft","componentOffsetWidth","offsetWidth","onTabClick","tabComponent","onTabKeydown","onFocus","updateHoverState","isHover","href","target","to","replace","exact","onMouseenter","onMouseleave","_mergeProps","_toHandlers","tabindex","onKeydown","_toDisplayString","withConfigTransport","VaTabs"],"mappings":"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"}