import { PropType } from 'vue';
export interface UseFormProps {
    disabled: boolean;
    readonly: boolean;
    id?: string | number;
    name?: string | number;
}
export declare const useFormProps: {
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    readonly: {
        type: BooleanConstructor;
        default: boolean;
    };
};
export declare const useFormPropsWithId: {
    id: {
        type: PropType<string | number>;
        default: undefined;
    };
    name: {
        type: PropType<string | number>;
        default: undefined;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    readonly: {
        type: BooleanConstructor;
        default: boolean;
    };
};
export declare const useForm: (props: UseFormProps) => {
    createComputedClass: <Prefix extends string>(prefix: Prefix) => import("vue").ComputedRef<Record<`${Prefix}--disabled` | `${Prefix}--readonly`, boolean>>;
    createComputedClassArray: <Prefix_1 extends string>(prefix: Prefix_1) => import("vue").ComputedRef<(`${Prefix_1}--disabled` | `${Prefix_1}--readonly`)[]>;
};
