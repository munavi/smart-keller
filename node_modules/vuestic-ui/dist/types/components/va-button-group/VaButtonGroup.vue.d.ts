import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    color: {
        type: PropType<string>;
        default: string;
    };
    gradient: {
        type: PropType<boolean>;
        default: undefined;
    };
    textColor: {
        type: PropType<string>;
        default: undefined;
    };
    rounded: {
        type: PropType<boolean>;
        default: boolean;
    };
    outline: {
        type: PropType<boolean>;
        default: boolean;
    };
    flat: {
        type: PropType<boolean>;
        default: boolean;
    };
    size: {
        type: PropType<string>;
        default: string;
        validator: (v: string) => boolean;
    };
}, {
    buttonConfig: {
        VaButton: {
            color: string;
            flat: boolean;
            outline: boolean;
            size: string;
            textColor: string | undefined;
            gradient: boolean | undefined;
            rounded: boolean;
        };
    };
    computedStyle: import("vue").ComputedRef<{
        [x: string]: string;
        color: string;
    }>;
    computedClass: import("vue").ComputedRef<{
        'va-button-group_square': boolean;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    color?: unknown;
    gradient?: unknown;
    textColor?: unknown;
    rounded?: unknown;
    outline?: unknown;
    flat?: unknown;
    size?: unknown;
} & {
    flat: boolean;
    color: string;
    outline: boolean;
    size: string;
    rounded: boolean;
} & {
    textColor?: string | undefined;
    gradient?: boolean | undefined;
}>, {
    flat: boolean;
    color: string;
    outline: boolean;
    size: string;
    textColor: string;
    gradient: boolean;
    rounded: boolean;
}>;
export default _default;
