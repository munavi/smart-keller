declare const _default: import("vue").DefineComponent<{
    color: {
        type: import("vue").PropType<string>;
        default: string;
    };
    textColor: {
        type: import("vue").PropType<string>;
        default: string;
    };
    square: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    icon: {
        type: import("vue").PropType<string>;
        default: string;
    };
    src: {
        type: import("vue").PropType<string>;
        default: null;
    };
    fontSize: {
        type: import("vue").PropType<string>;
        default: string;
    };
    size: {
        type: import("vue").PropType<string | number>;
        default: string;
        validator: (size: string | number) => boolean;
    };
    sizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        default: () => import("../../services/global-config/types").SizeConfig;
    };
    fontSizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        default: () => import("../../services/global-config/types").SizeConfig;
    };
    loading: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}, {
    sizeComputed: import("vue").ComputedRef<string>;
    computedStyle: import("vue").ComputedRef<{
        color: string;
        backgroundColor: string;
        borderRadius: string | number;
        fontSize: string;
        width: string;
        minWidth: string;
        height: string;
    }>;
    colorComputed: import("vue").ComputedRef<string>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    color?: unknown;
    textColor?: unknown;
    square?: unknown;
    icon?: unknown;
    src?: unknown;
    fontSize?: unknown;
    size?: unknown;
    sizesConfig?: unknown;
    fontSizesConfig?: unknown;
    loading?: unknown;
} & {
    square: boolean;
    color: string;
    fontSize: string;
    loading: boolean;
    size: string | number;
    icon: string;
    src: string;
    sizesConfig: Record<string, any>;
    textColor: string;
    fontSizesConfig: Record<string, any>;
} & {}>, {
    square: boolean;
    color: string;
    fontSize: string;
    loading: boolean;
    size: string | number;
    icon: string;
    src: string;
    sizesConfig: Record<string, any>;
    textColor: string;
    fontSizesConfig: Record<string, any>;
}>;
export default _default;
