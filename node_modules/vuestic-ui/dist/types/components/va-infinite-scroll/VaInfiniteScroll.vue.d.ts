import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    load: {
        type: FunctionConstructor;
        required: true;
    };
    offset: {
        type: NumberConstructor;
        default: number;
    };
    reverse: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    scrollTarget: {
        type: PropType<string | Element>;
        default: null;
    };
    debounce: {
        type: NumberConstructor;
        default: number;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
}, {
    element: import("vue").Ref<HTMLElement | undefined>;
    spinnerSlotContainer: import("vue").Ref<HTMLDivElement | undefined>;
    spinnerColor: import("vue").ComputedRef<string>;
    fetching: import("vue").Ref<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("onload" | "onerror")[], "onerror" | "onload", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    load?: unknown;
    offset?: unknown;
    reverse?: unknown;
    disabled?: unknown;
    scrollTarget?: unknown;
    debounce?: unknown;
    tag?: unknown;
} & {
    reverse: boolean;
    offset: number;
    load: Function;
    disabled: boolean;
    tag: string;
    scrollTarget: string | Element;
    debounce: number;
} & {}> & {
    onOnload?: ((...args: any[]) => any) | undefined;
    onOnerror?: ((...args: any[]) => any) | undefined;
}, {
    reverse: boolean;
    offset: number;
    disabled: boolean;
    tag: string;
    scrollTarget: string | Element;
    debounce: number;
}>;
export default _default;
