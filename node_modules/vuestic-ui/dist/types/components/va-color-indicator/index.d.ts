declare const VaColorIndicator: import("vue").DefineComponent<{
    modelValue: {
        type: BooleanConstructor;
        default: null;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    square: {
        type: BooleanConstructor;
        default: boolean;
    };
    stateful: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}, {
    valueComputed: import("vue").WritableComputedRef<boolean>;
    computedStyle: import("vue").ComputedRef<{
        borderRadius: string;
        backgroundColor: string;
    }>;
    computedClass: import("vue").ComputedRef<{
        'va-color-indicator--selected': boolean;
        'va-color-indicator--hoverable': boolean;
    }>;
    toggleModelValue: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, string[], string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    modelValue?: unknown;
    color?: unknown;
    square?: unknown;
    stateful?: unknown;
} & {
    square: boolean;
    color: string;
    modelValue: boolean;
    stateful: boolean;
} & {}> & {
    [x: string & `on${string}`]: ((...args: any[]) => any) | undefined;
}, {
    square: boolean;
    color: string;
    modelValue: boolean;
    stateful: boolean;
}>;
export default VaColorIndicator;
