import { PropType } from 'vue';
import { RouteLocationRaw } from 'vue-router';
declare const _default: import("vue").DefineComponent<{
    to: {
        type: PropType<RouteLocationRaw>;
        default: () => {};
    };
    active: {
        type: BooleanConstructor;
        default: boolean;
    };
    textColor: {
        type: StringConstructor;
        default: undefined;
    };
    activeColor: {
        type: StringConstructor;
        default: string;
    };
    hoverColor: {
        type: StringConstructor;
        default: undefined;
    };
    borderColor: {
        type: StringConstructor;
        default: undefined;
    };
}, {
    anchor: import("vue").Ref<HTMLAnchorElement | undefined>;
    computedStyle: import("vue").ComputedRef<Record<string, string>>;
    keyboardFocusListeners: {
        mousedown: () => void;
        focus: () => void;
        blur: () => void;
    };
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    to?: unknown;
    active?: unknown;
    textColor?: unknown;
    activeColor?: unknown;
    hoverColor?: unknown;
    borderColor?: unknown;
} & {
    active: boolean;
    to: RouteLocationRaw;
    activeColor: string;
} & {
    borderColor?: string | undefined;
    textColor?: string | undefined;
    hoverColor?: string | undefined;
}>, {
    active: boolean;
    borderColor: string;
    to: RouteLocationRaw;
    textColor: string;
    activeColor: string;
    hoverColor: string;
}>;
export default _default;
