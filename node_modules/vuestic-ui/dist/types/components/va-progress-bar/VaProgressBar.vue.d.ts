import { PropType } from 'vue';
declare type VaProgressSize = 'medium' | 'large' | 'small';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: NumberConstructor;
        default: number;
    };
    indeterminate: {
        type: BooleanConstructor;
        default: boolean;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: PropType<number | VaProgressSize>;
        default: string;
    };
    buffer: {
        type: NumberConstructor;
        default: number;
    };
    rounded: {
        type: BooleanConstructor;
        default: boolean;
    };
    reverse: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    isLarge: import("vue").ComputedRef<boolean>;
    rootClass: import("vue").ComputedRef<{
        [x: string]: boolean;
        'va-progress-bar': boolean;
        'va-progress-bar--square': boolean;
    }>;
    rootStyle: import("vue").ComputedRef<{
        height: string | undefined;
    }>;
    bufferStyle: import("vue").ComputedRef<{
        [x: string]: string | number;
        width: string;
        backgroundColor: string;
    }>;
    progressStyle: import("vue").ComputedRef<{
        width: string;
        backgroundColor: string;
        marginLeft: string | undefined;
    }>;
    intermediateStyle: import("vue").ComputedRef<{
        backgroundColor: string;
        animationDirection: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    modelValue?: unknown;
    indeterminate?: unknown;
    color?: unknown;
    size?: unknown;
    buffer?: unknown;
    rounded?: unknown;
    reverse?: unknown;
} & {
    reverse: boolean;
    buffer: number;
    color: string;
    size: number | VaProgressSize;
    modelValue: number;
    indeterminate: boolean;
    rounded: boolean;
} & {}>, {
    reverse: boolean;
    buffer: number;
    color: string;
    size: number | VaProgressSize;
    modelValue: number;
    indeterminate: boolean;
    rounded: boolean;
}>;
export default _default;
