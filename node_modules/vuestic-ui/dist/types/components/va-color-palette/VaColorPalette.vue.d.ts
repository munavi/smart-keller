import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: PropType<string>;
        default: null;
    };
    palette: {
        type: PropType<string[]>;
        default: () => never[];
    };
    indicator: {
        type: PropType<"square" | "dot">;
        default: string;
        validator: (value: string) => boolean;
    };
    stateful: {
        type: PropType<boolean>;
        default: boolean;
    };
}, {
    valueComputed: import("vue").WritableComputedRef<string>;
    isSelected: (color: string) => boolean;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, string[], string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    modelValue?: unknown;
    palette?: unknown;
    indicator?: unknown;
    stateful?: unknown;
} & {
    modelValue: string;
    stateful: boolean;
    palette: string[];
    indicator: "square" | "dot";
} & {}> & {
    [x: string & `on${string}`]: ((...args: any[]) => any) | undefined;
}, {
    modelValue: string;
    stateful: boolean;
    palette: string[];
    indicator: "square" | "dot";
}>;
export default _default;
