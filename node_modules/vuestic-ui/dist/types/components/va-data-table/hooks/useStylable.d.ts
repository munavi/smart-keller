import { TableColumn, TClassesOptions, TStyleOptions, TableCell } from '../types';
interface useStylableProps {
    selectable: boolean;
    selectedColor: string;
    allowFooterSorting: boolean;
    stickyHeader: boolean;
    height: string | number | undefined;
}
declare function getClasses(classes?: TClassesOptions): string[];
declare function getStyles(styles?: TStyleOptions): Record<string, any>;
export default function useStyleable(props: useStylableProps): {
    getHeaderCSSVariables: (column: TableColumn) => {
        [x: string]: string;
    };
    rowCSSVariables: import("vue").ComputedRef<Record<string, any>>;
    getCellCSSVariables: (cell: TableCell) => {
        [x: string]: "center" | "left" | "top" | "bottom" | "right" | "middle" | (string & Record<never, never>);
    };
    getFooterCSSVariables: (column: TableColumn) => {
        [x: string]: string;
    };
    getStickyCSSVariables: () => {
        [x: string]: string | false | 0 | undefined;
    };
    getClasses: typeof getClasses;
    getStyles: typeof getStyles;
};
export {};
