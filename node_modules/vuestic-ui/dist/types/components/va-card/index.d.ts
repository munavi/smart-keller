export declare const VaCardContent: import("vue").DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
export declare const VaCardTitle: import("vue").DefineComponent<{
    textColor: {
        type: import("vue").PropType<string>;
    };
}, {
    titleStyles: import("vue").ComputedRef<{
        color: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    textColor?: unknown;
} & {} & {
    textColor?: string | undefined;
}>, {}>;
export declare const VaCardActions: import("vue").DefineComponent<{
    align: {
        type: import("vue").PropType<string>;
        default: string;
    };
    vertical: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}, {
    alignComputed: import("vue").ComputedRef<{
        display: string;
        flexDirection: "column" | "row";
        justifyContent: string;
        alignItems: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    align?: unknown;
    vertical?: unknown;
} & {
    vertical: boolean;
    align: string;
} & {}>, {
    vertical: boolean;
    align: string;
}>;
declare const _default: import("vue").DefineComponent<{
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    square: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    outlined: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    bordered: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    disabled: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    href: {
        type: import("vue").PropType<string>;
        default: string;
    };
    target: {
        type: import("vue").PropType<string>;
        default: string;
    };
    stripe: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    stripeColor: {
        type: import("vue").PropType<string>;
        default: string;
    };
    gradient: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    textColor: {
        type: import("vue").PropType<string>;
    };
    color: {
        type: import("vue").PropType<string>;
        default: string;
    };
    to: {
        type: import("vue").PropType<string | Record<string, unknown>>;
        default: null;
    };
    replace: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    append: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    exact: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    activeClass: {
        type: import("vue").PropType<string>;
        default: string;
    };
    exactActiveClass: {
        type: import("vue").PropType<string>;
        default: string;
    };
}, {
    cardClasses: import("vue").ComputedRef<{
        'va-card--square': boolean;
        'va-card--outlined': boolean;
        'va-card--no-border': boolean;
        'va-card--disabled': boolean;
        'va-card--link': string | boolean;
    }>;
    cardStyles: import("vue").ComputedRef<{
        background: string;
        color: string;
    }>;
    stripeStyles: import("vue").ComputedRef<{
        background: string;
    }>;
    tagComputed: import("vue").ComputedRef<string>;
    hrefComputed: import("vue").ComputedRef<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    tag?: unknown;
    square?: unknown;
    outlined?: unknown;
    bordered?: unknown;
    disabled?: unknown;
    href?: unknown;
    target?: unknown;
    stripe?: unknown;
    stripeColor?: unknown;
    gradient?: unknown;
    textColor?: unknown;
    color?: unknown;
    to?: unknown;
    replace?: unknown;
    append?: unknown;
    exact?: unknown;
    activeClass?: unknown;
    exactActiveClass?: unknown;
} & {
    replace: boolean;
    exact: boolean;
    square: boolean;
    color: string;
    target: string;
    append: boolean;
    disabled: boolean;
    tag: string;
    href: string;
    to: string | Record<string, unknown>;
    gradient: boolean;
    activeClass: string;
    exactActiveClass: string;
    outlined: boolean;
    bordered: boolean;
    stripe: boolean;
    stripeColor: string;
} & {
    textColor?: string | undefined;
}> & {
    onClick?: ((...args: any[]) => any) | undefined;
}, {
    replace: boolean;
    exact: boolean;
    square: boolean;
    color: string;
    target: string;
    append: boolean;
    disabled: boolean;
    tag: string;
    href: string;
    to: string | Record<string, unknown>;
    gradient: boolean;
    activeClass: string;
    exactActiveClass: string;
    outlined: boolean;
    bordered: boolean;
    stripe: boolean;
    stripeColor: string;
}>;
export default _default;
