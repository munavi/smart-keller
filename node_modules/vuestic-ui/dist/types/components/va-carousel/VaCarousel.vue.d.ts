import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: NumberConstructor;
        default: number;
    };
    items: {
        type: PropType<any[]>;
        required: true;
    };
    autoscroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    autoscrollInterval: {
        type: NumberConstructor;
        default: number;
    };
    autoscrollPauseDuration: {
        type: NumberConstructor;
        default: number;
    };
    infinite: {
        type: BooleanConstructor;
        default: boolean;
    };
    fadeKeyframe: {
        type: StringConstructor;
        default: string;
    };
    arrows: {
        type: BooleanConstructor;
        default: boolean;
    };
    indicators: {
        type: BooleanConstructor;
        default: boolean;
    };
    indicatorTrigger: {
        type: PropType<"click" | "hover">;
        default: string;
    };
    vertical: {
        type: BooleanConstructor;
        default: boolean;
    };
    height: {
        type: StringConstructor;
        default: string;
    };
    effect: {
        type: PropType<"transition" | "fade">;
        default: string;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    stateful: {
        type: PropType<boolean>;
        default: boolean;
    };
}, {
    computedColor: import("vue").ComputedRef<string>;
    computedHoverColor: import("vue").ComputedRef<string>;
    computedActiveColor: import("vue").ComputedRef<string>;
    doShowNextButton: import("vue").ComputedRef<boolean>;
    doShowPrevButton: import("vue").ComputedRef<boolean>;
    computedSlidesStyle: import("vue").ComputedRef<{
        transition: string;
    } | {
        transform: string;
    }>;
    goTo: (index: number) => void;
    prev: () => void;
    next: () => void;
    currentSlide: import("vue").WritableComputedRef<number>;
    slides: import("vue").ComputedRef<any[]>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, string[], string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    modelValue?: unknown;
    items?: unknown;
    autoscroll?: unknown;
    autoscrollInterval?: unknown;
    autoscrollPauseDuration?: unknown;
    infinite?: unknown;
    fadeKeyframe?: unknown;
    arrows?: unknown;
    indicators?: unknown;
    indicatorTrigger?: unknown;
    vertical?: unknown;
    height?: unknown;
    effect?: unknown;
    color?: unknown;
    stateful?: unknown;
} & {
    height: string;
    color: string;
    infinite: boolean;
    vertical: boolean;
    effect: "transition" | "fade";
    modelValue: number;
    stateful: boolean;
    items: any[];
    autoscroll: boolean;
    autoscrollInterval: number;
    autoscrollPauseDuration: number;
    fadeKeyframe: string;
    arrows: boolean;
    indicators: boolean;
    indicatorTrigger: "click" | "hover";
} & {}> & {
    [x: string & `on${string}`]: ((...args: any[]) => any) | undefined;
}, {
    height: string;
    color: string;
    infinite: boolean;
    vertical: boolean;
    effect: "transition" | "fade";
    modelValue: number;
    stateful: boolean;
    autoscroll: boolean;
    autoscrollInterval: number;
    autoscrollPauseDuration: number;
    fadeKeyframe: string;
    arrows: boolean;
    indicators: boolean;
    indicatorTrigger: "click" | "hover";
}>;
export default _default;
