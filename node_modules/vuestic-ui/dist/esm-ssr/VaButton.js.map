{"version":3,"file":"VaButton.js","sources":["../../src/components/va-button/VaButton.vue","../../src/components/va-button/VaButton.vue?vue&type=template&id=49343f08&lang.js"],"sourcesContent":["<template>\n  <component\n    :is=\"tagComputed\"\n    class=\"va-button\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    :disabled=\"$props.disabled\"\n    :type=\"computedType\"\n    :href=\"hrefComputed\"\n    :target=\"$props.target\"\n    :to=\"$props.to\"\n    :replace=\"$props.replace\"\n    :append=\"$props.append\"\n    :active-class=\"$props.activeClass\"\n    :exact=\"$props.exact\"\n    :exact-active-class=\"$props.exactActiveClass\"\n    @focus=\"focusState = true\"\n    @blur=\"focusState = false\"\n    :tabindex=\"loading ? -1 : 0\"\n    @mouseenter=\"hoverState = true\"\n    @mouseleave=\"hoverState = false\"\n    v-on=\"$attrs\"\n    ref=\"button\"\n  >\n    <div class=\"va-button__content\" :class=\"{ 'va-button__content--loading': loading }\">\n      <va-icon\n        v-if=\"icon\"\n        :name=\"icon\"\n        :size=\"size\"\n        :color=\"textColorComputed\"\n        class=\"va-button__left-icon\"\n      />\n      <slot />\n      <va-icon\n        v-if=\"iconRight\"\n        :name=\"iconRight\"\n        :size=\"size\"\n        :color=\"textColorComputed\"\n        class=\"va-button__right-icon\"\n      />\n    </div>\n    <va-progress-circle\n      v-if=\"loading\"\n      class=\"va-button__loader\"\n      indeterminate\n      :size=\"loaderSize\"\n      :color=\"computedStyle.color\"\n      :thickness=\"0.15\"\n    />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, Ref, PropType, ComputedRef } from 'vue'\nimport { useTextColor } from '../../composables/useTextColor'\nimport { getGradientBackground, getTextColor, shiftHSLAColor } from '../../services/color-config/color-functions'\nimport { useColor } from '../../composables/useColor'\nimport { useRouterLink, useRouterLinkProps } from '../../composables/useRouterLink'\nimport { useSizeProps, useSize } from '../../composables/useSize'\nimport { useLoadingProps } from '../../composables/useLoading'\nimport VaIcon from '../va-icon'\nimport { VaProgressCircle } from '../va-progress-circle'\n\nexport default defineComponent({\n  name: 'VaButton',\n  components: { VaIcon, VaProgressCircle },\n  props: {\n    ...useSizeProps,\n    ...useLoadingProps,\n    ...useRouterLinkProps,\n    color: { type: String as PropType<string>, default: 'primary' },\n    textColor: { type: String as PropType<string | undefined>, default: undefined },\n    tag: { type: String as PropType<string>, default: 'button' },\n    outline: { type: Boolean as PropType<boolean | undefined>, default: undefined },\n    gradient: { type: Boolean as PropType<boolean | undefined>, default: undefined },\n    flat: { type: Boolean as PropType<boolean | undefined>, default: undefined },\n    type: { type: String as PropType<string>, default: 'button' },\n    disabled: { type: Boolean as PropType<boolean>, default: false },\n    block: { type: Boolean as PropType<boolean>, default: false },\n    rounded: { type: Boolean as PropType<boolean>, default: true },\n    round: { type: Boolean as PropType<boolean | undefined>, default: undefined },\n    spaceBetweenItems: { type: Boolean as PropType<boolean | undefined>, default: undefined },\n    icon: { type: String as PropType<string | undefined>, default: undefined },\n    iconRight: { type: String as PropType<string | undefined>, default: undefined },\n    size: {\n      type: String as PropType<string>,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n  },\n  setup (props, { slots }) {\n    const { sizeComputed } = useSize(props)\n    const { computeColor } = useColor(props)\n    const { tagComputed, hrefComputed } = useRouterLink(props)\n\n    const hoverState = ref(false)\n    const focusState = ref(false)\n\n    const colorComputed = computed(() => computeColor(props.color, 'primary'))\n    const isTransparentBackground = computed(() => Boolean(props.outline || props.flat))\n\n    const { textColorComputed } = useTextColor(props.color, isTransparentBackground)\n    const isSlotContentPassed = computed(() => !!slots.default?.()?.[0]?.children)\n\n    const computedType = computed(() => {\n      // Safari issue. type===button will break styles if the button is used as a link\n      switch (tagComputed.value) {\n        case 'a':\n        case 'router-link':\n        case 'nuxt-link':\n          return undefined\n        default:\n          return props.type\n      }\n    })\n\n    const hasOneIcon = computed(() => {\n      return Boolean((props.iconRight && !props.icon) || (!props.iconRight && props.icon))\n    })\n\n    const computedClass = computed(() => ({\n      'va-button--default': !props.flat && !props.outline && !props.disabled,\n      'va-button--flat': props.flat,\n      'va-button--outline': props.outline,\n      'va-button--disabled': props.disabled,\n      'va-button--hover': hoverState.value,\n      'va-button--focus': focusState.value,\n      'va-button--large': props.size === 'large',\n      'va-button--small': props.size === 'small',\n      'va-button--normal': !props.size || props.size === 'medium',\n      'va-button--loading': props.loading,\n      'va-button--block': props.block,\n      'va-button--square': !props.rounded,\n      'va-button--round': props.round || (!slots.default && hasOneIcon.value),\n      'va-button--no-label': !isSlotContentPassed.value,\n      'va-button--space-between-items': props.spaceBetweenItems,\n    }))\n\n    const loaderSize = computed(() => {\n      const size = /([0-9]*)(px)/.exec(sizeComputed.value) as null | [string, string, string]\n\n      return size ? `${+size[1] / 2}${size[2]}` : sizeComputed.value\n    })\n\n    const computedStyle: ComputedRef<Partial<CSSStyleDeclaration>> = computed(() => {\n      const borderColor = props.outline ? colorComputed.value : ''\n\n      let background = props.gradient\n        ? getGradientBackground(colorComputed.value)\n        : colorComputed.value\n\n      if (isTransparentBackground.value) {\n        background = 'var(--va-transparent)'\n      }\n\n      if (hoverState.value) {\n        const alpha = props.outline ? -0.9 : -0.8\n        const lightness = 5\n        const color = isTransparentBackground.value\n          ? shiftHSLAColor(colorComputed.value, { a: alpha })\n          : shiftHSLAColor(colorComputed.value, { l: lightness })\n\n        background = props.gradient ? getGradientBackground(color) : color\n      }\n\n      if (focusState.value) {\n        const alpha = props.outline ? -0.8 : -0.7\n        const lightness = 10\n        const color = isTransparentBackground.value ? shiftHSLAColor(colorComputed.value, { a: alpha }) : shiftHSLAColor(colorComputed.value, { l: lightness })\n\n        background = props.gradient ? getGradientBackground(color) : color\n      }\n\n      return {\n        color: textColorComputed.value,\n        borderColor,\n        background,\n      }\n    })\n\n    const button: Ref<HTMLElement | null> = ref(null)\n    const focus = () => button.value?.focus()\n    const blur = () => button.value?.blur()\n\n    return {\n      button,\n      tagComputed,\n      hrefComputed,\n      computedClass,\n      computedStyle,\n      computedType,\n      textColorComputed,\n      loaderSize,\n      focusState,\n      hoverState,\n    }\n  },\n\n  // we will use this while we have 'withConfigTransport' and problem with 'expose' method in 'setup' func\n  methods: {\n    focus () { (this as any).button?.focus() },\n    blur () { (this as any).button?.blur() },\n  },\n})\n</script>\n\n<style lang='scss'>\n@import '../../styles/resources';\n@import 'variables';\n\n.va-button {\n  display: var(--va-button-display);\n  align-items: var(--va-button-align-items);\n  justify-content: var(--va-button-justify-content);\n  background-image: var(--va-button-background-image);\n  box-shadow: var(--va-button-box-shadow, var(--va-control-box-shadow));\n  outline: var(--va-button-outline);\n  border: var(--va-button-border, var(--va-control-border));\n  font-family: var(--va-font-family);\n  text-decoration: none !important;\n  text-transform: initial;\n  cursor: pointer;\n  transition: var(--va-button-transition, var(--va-swing-transition));\n  background-color: var(--va-button-background-color, var(--va-white));\n  vertical-align: middle;\n  box-sizing: border-box;\n  font-weight: var(--va-button-font-weight);\n  margin: var(--va-button-margin);\n  padding: var(--va-button-padding);\n  position: relative;\n\n  &__content {\n    display: flex;\n    align-items: center;\n    height: 100%;\n\n    &__title,\n    &__icon {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: auto;\n      white-space: nowrap;\n    }\n\n    &--loading {\n      opacity: 0;\n    }\n  }\n\n  &--default {\n    color: var(--va-button-background-color, var(--va-white));\n\n    i {\n      color: var(--va-button-icon-color, var(--va-white));\n    }\n  }\n\n  &--outline {\n    background-color: transparent;\n    border: solid var(--va-button-outline-border, var(--va-outline-border-width));\n    text-decoration: none;\n\n    .va-button__content {\n      margin: calc(var(--va-button-outline-border, var(--va-outline-border-width)) * -1);\n    }\n\n    &.va-button--disabled {\n      background: transparent;\n\n      @include va-disabled;\n\n      &.va-button--active {\n        .va-button__content,\n        i {\n          color: var(--va-button-outline-icon-color, var(--va-white)) !important;\n        }\n      }\n    }\n  }\n\n  &--flat {\n    background: transparent;\n    border: var(--va-button-flat-border, var(--va-control-border)) solid transparent;\n    text-decoration: none;\n  }\n\n  &.va-button--disabled {\n    @include va-disabled;\n  }\n\n  &--large {\n    @include va-button(var(--va-button-lg-content-py), var(--va-button-lg-content-px), var(--va-button-lg-font-size), var(--va-button-lg-line-height), var(--va-button-lg-border-radius));\n\n    letter-spacing: var(--va-button-lg-letter-spacing);\n    min-height: var(--va-button-lg-size);\n    min-width: var(--va-button-lg-size);\n\n    .va-button__content {\n      padding: var(--va-button-lg-content-py) var(--va-button-lg-content-px);\n    }\n\n    &.va-button--round {\n      width: var(--va-button-lg-size);\n      height: var(--va-button-lg-size);\n    }\n\n    &.va-button--outline {\n      line-height: calc(var(--va-button-lg-line-height) - 2 * var(--va-button-outline-border, var(--va-outline-border-width)));\n    }\n\n    &.va-button--square {\n      border-radius: var(--va-button-lg-square-border-radius);\n    }\n\n    .va-button__left-icon {\n      margin-left: calc(var(--va-button-lg-content-px) / -2);\n      margin-right: calc(var(--va-button-lg-space-between-items) / 2);\n    }\n\n    .va-button__right-icon {\n      margin-left: calc(var(--va-button-lg-space-between-items) / 2);\n      margin-right: calc(var(--va-button-lg-content-px) / -2);\n    }\n  }\n\n  &--small {\n    @include va-button(var(--va-button-sm-content-py), var(--va-button-sm-content-px), var(--va-button-sm-font-size), var(--va-button-sm-line-height), var(--va-button-sm-border-radius));\n\n    letter-spacing: var(--va-button-sm-letter-spacing);\n    min-height: var(--va-button-sm-size);\n    min-width: var(--va-button-sm-size);\n\n    .va-button__content {\n      padding: var(--va-button-sm-content-py) var(--va-button-sm-content-px);\n    }\n\n    &.va-button--round {\n      width: var(--va-button-sm-size);\n      height: var(--va-button-sm-size);\n    }\n\n    &.va-button--outline {\n      line-height: calc(var(--va-button-sm-line-height) - 2 * var(--va-button-outline-border, var(--va-outline-border-width)));\n    }\n\n    &.va-button--square {\n      border-radius: var(--va-button-sm-square-border-radius);\n    }\n\n    .va-button__left-icon {\n      margin-left: calc(var(--va-button-sm-content-px) / -2);\n      margin-right: calc(var(--va-button-sm-space-between-items) / 2);\n    }\n\n    .va-button__right-icon {\n      margin-left: calc(var(--va-button-sm-space-between-items) / 2);\n      margin-right: calc(var(--va-button-sm-content-px) / -2);\n    }\n  }\n\n  &--normal {\n    @include va-button(var(--va-button-content-py), var(--va-button-content-px), var(--va-button-font-size), var(--va-button-line-height), var(--va-button-border-radius));\n\n    letter-spacing: var(--va-button-letter-spacing, var(--va-letter-spacing));\n    min-height: var(--va-button-size);\n    min-width: var(--va-button-size);\n\n    .va-button__content {\n      padding: var(--va-button-content-py) var(--va-button-content-px);\n      line-height: var(--va-button-line-height);\n    }\n\n    &.va-button--round {\n      width: var(--va-button-size);\n      height: var(--va-button-size);\n    }\n\n    &.va-button--outline {\n      line-height: calc(var(--va-button-line-height) - 2 * var(--va-button-outline-border, var(--va-outline-border-width)));\n    }\n\n    &.va-button--square {\n      border-radius: var(--va-button-square-border-radius);\n    }\n\n    .va-button__left-icon {\n      margin-left: calc(var(--va-button-content-px) / -2);\n      margin-right: calc(var(--va-button-space-between-items) / 2);\n    }\n\n    .va-button__right-icon {\n      margin-left: calc(var(--va-button-space-between-items) / 2);\n      margin-right: calc(var(--va-button-content-px) / -2);\n    }\n  }\n\n  &--round {\n    .va-button__content {\n      padding: 0;\n    }\n  }\n\n  &--round,\n  &--no-label {\n    .va-button__left-icon {\n      margin-left: 0;\n      margin-right: 0;\n    }\n\n    .va-button__right-icon {\n      margin-left: 0;\n      margin-right: 0;\n    }\n  }\n\n  &--space-between-items {\n    .va-button__content > * {\n      margin-right: calc(var(--va-button-space-between-items) / 2);\n      margin-left: calc(var(--va-button-space-between-items) / 2);\n\n      &:last-child {\n        margin-right: 0;\n      }\n\n      &:first-child {\n        margin-left: 0;\n      }\n    }\n  }\n\n  &--loading {\n    pointer-events: none;\n  }\n\n  &--block {\n    display: flex;\n    min-width: 100%;\n  }\n\n  &--square {\n    border-radius: 0.5rem;\n  }\n\n  &__loader {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n  }\n}\n</style>\n","<template>\n  <component\n    :is=\"tagComputed\"\n    class=\"va-button\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    :disabled=\"$props.disabled\"\n    :type=\"computedType\"\n    :href=\"hrefComputed\"\n    :target=\"$props.target\"\n    :to=\"$props.to\"\n    :replace=\"$props.replace\"\n    :append=\"$props.append\"\n    :active-class=\"$props.activeClass\"\n    :exact=\"$props.exact\"\n    :exact-active-class=\"$props.exactActiveClass\"\n    @focus=\"focusState = true\"\n    @blur=\"focusState = false\"\n    :tabindex=\"loading ? -1 : 0\"\n    @mouseenter=\"hoverState = true\"\n    @mouseleave=\"hoverState = false\"\n    v-on=\"$attrs\"\n    ref=\"button\"\n  >\n    <div class=\"va-button__content\" :class=\"{ 'va-button__content--loading': loading }\">\n      <va-icon\n        v-if=\"icon\"\n        :name=\"icon\"\n        :size=\"size\"\n        :color=\"textColorComputed\"\n        class=\"va-button__left-icon\"\n      />\n      <slot />\n      <va-icon\n        v-if=\"iconRight\"\n        :name=\"iconRight\"\n        :size=\"size\"\n        :color=\"textColorComputed\"\n        class=\"va-button__right-icon\"\n      />\n    </div>\n    <va-progress-circle\n      v-if=\"loading\"\n      class=\"va-button__loader\"\n      indeterminate\n      :size=\"loaderSize\"\n      :color=\"computedStyle.color\"\n      :thickness=\"0.15\"\n    />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, Ref, PropType, ComputedRef } from 'vue'\nimport { useTextColor } from '../../composables/useTextColor'\nimport { getGradientBackground, getTextColor, shiftHSLAColor } from '../../services/color-config/color-functions'\nimport { useColor } from '../../composables/useColor'\nimport { useRouterLink, useRouterLinkProps } from '../../composables/useRouterLink'\nimport { useSizeProps, useSize } from '../../composables/useSize'\nimport { useLoadingProps } from '../../composables/useLoading'\nimport VaIcon from '../va-icon'\nimport { VaProgressCircle } from '../va-progress-circle'\n\nexport default defineComponent({\n  name: 'VaButton',\n  components: { VaIcon, VaProgressCircle },\n  props: {\n    ...useSizeProps,\n    ...useLoadingProps,\n    ...useRouterLinkProps,\n    color: { type: String as PropType<string>, default: 'primary' },\n    textColor: { type: String as PropType<string | undefined>, default: undefined },\n    tag: { type: String as PropType<string>, default: 'button' },\n    outline: { type: Boolean as PropType<boolean | undefined>, default: undefined },\n    gradient: { type: Boolean as PropType<boolean | undefined>, default: undefined },\n    flat: { type: Boolean as PropType<boolean | undefined>, default: undefined },\n    type: { type: String as PropType<string>, default: 'button' },\n    disabled: { type: Boolean as PropType<boolean>, default: false },\n    block: { type: Boolean as PropType<boolean>, default: false },\n    rounded: { type: Boolean as PropType<boolean>, default: true },\n    round: { type: Boolean as PropType<boolean | undefined>, default: undefined },\n    spaceBetweenItems: { type: Boolean as PropType<boolean | undefined>, default: undefined },\n    icon: { type: String as PropType<string | undefined>, default: undefined },\n    iconRight: { type: String as PropType<string | undefined>, default: undefined },\n    size: {\n      type: String as PropType<string>,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n  },\n  setup (props, { slots }) {\n    const { sizeComputed } = useSize(props)\n    const { computeColor } = useColor(props)\n    const { tagComputed, hrefComputed } = useRouterLink(props)\n\n    const hoverState = ref(false)\n    const focusState = ref(false)\n\n    const colorComputed = computed(() => computeColor(props.color, 'primary'))\n    const isTransparentBackground = computed(() => Boolean(props.outline || props.flat))\n\n    const { textColorComputed } = useTextColor(props.color, isTransparentBackground)\n    const isSlotContentPassed = computed(() => !!slots.default?.()?.[0]?.children)\n\n    const computedType = computed(() => {\n      // Safari issue. type===button will break styles if the button is used as a link\n      switch (tagComputed.value) {\n        case 'a':\n        case 'router-link':\n        case 'nuxt-link':\n          return undefined\n        default:\n          return props.type\n      }\n    })\n\n    const hasOneIcon = computed(() => {\n      return Boolean((props.iconRight && !props.icon) || (!props.iconRight && props.icon))\n    })\n\n    const computedClass = computed(() => ({\n      'va-button--default': !props.flat && !props.outline && !props.disabled,\n      'va-button--flat': props.flat,\n      'va-button--outline': props.outline,\n      'va-button--disabled': props.disabled,\n      'va-button--hover': hoverState.value,\n      'va-button--focus': focusState.value,\n      'va-button--large': props.size === 'large',\n      'va-button--small': props.size === 'small',\n      'va-button--normal': !props.size || props.size === 'medium',\n      'va-button--loading': props.loading,\n      'va-button--block': props.block,\n      'va-button--square': !props.rounded,\n      'va-button--round': props.round || (!slots.default && hasOneIcon.value),\n      'va-button--no-label': !isSlotContentPassed.value,\n      'va-button--space-between-items': props.spaceBetweenItems,\n    }))\n\n    const loaderSize = computed(() => {\n      const size = /([0-9]*)(px)/.exec(sizeComputed.value) as null | [string, string, string]\n\n      return size ? `${+size[1] / 2}${size[2]}` : sizeComputed.value\n    })\n\n    const computedStyle: ComputedRef<Partial<CSSStyleDeclaration>> = computed(() => {\n      const borderColor = props.outline ? colorComputed.value : ''\n\n      let background = props.gradient\n        ? getGradientBackground(colorComputed.value)\n        : colorComputed.value\n\n      if (isTransparentBackground.value) {\n        background = 'var(--va-transparent)'\n      }\n\n      if (hoverState.value) {\n        const alpha = props.outline ? -0.9 : -0.8\n        const lightness = 5\n        const color = isTransparentBackground.value\n          ? shiftHSLAColor(colorComputed.value, { a: alpha })\n          : shiftHSLAColor(colorComputed.value, { l: lightness })\n\n        background = props.gradient ? getGradientBackground(color) : color\n      }\n\n      if (focusState.value) {\n        const alpha = props.outline ? -0.8 : -0.7\n        const lightness = 10\n        const color = isTransparentBackground.value ? shiftHSLAColor(colorComputed.value, { a: alpha }) : shiftHSLAColor(colorComputed.value, { l: lightness })\n\n        background = props.gradient ? getGradientBackground(color) : color\n      }\n\n      return {\n        color: textColorComputed.value,\n        borderColor,\n        background,\n      }\n    })\n\n    const button: Ref<HTMLElement | null> = ref(null)\n    const focus = () => button.value?.focus()\n    const blur = () => button.value?.blur()\n\n    return {\n      button,\n      tagComputed,\n      hrefComputed,\n      computedClass,\n      computedStyle,\n      computedType,\n      textColorComputed,\n      loaderSize,\n      focusState,\n      hoverState,\n    }\n  },\n\n  // we will use this while we have 'withConfigTransport' and problem with 'expose' method in 'setup' func\n  methods: {\n    focus () { (this as any).button?.focus() },\n    blur () { (this as any).button?.blur() },\n  },\n})\n</script>\n\n<style lang='scss'>\n@import '../../styles/resources';\n@import 'variables';\n\n.va-button {\n  display: var(--va-button-display);\n  align-items: var(--va-button-align-items);\n  justify-content: var(--va-button-justify-content);\n  background-image: var(--va-button-background-image);\n  box-shadow: var(--va-button-box-shadow, var(--va-control-box-shadow));\n  outline: var(--va-button-outline);\n  border: var(--va-button-border, var(--va-control-border));\n  font-family: var(--va-font-family);\n  text-decoration: none !important;\n  text-transform: initial;\n  cursor: pointer;\n  transition: var(--va-button-transition, var(--va-swing-transition));\n  background-color: var(--va-button-background-color, var(--va-white));\n  vertical-align: middle;\n  box-sizing: border-box;\n  font-weight: var(--va-button-font-weight);\n  margin: var(--va-button-margin);\n  padding: var(--va-button-padding);\n  position: relative;\n\n  &__content {\n    display: flex;\n    align-items: center;\n    height: 100%;\n\n    &__title,\n    &__icon {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: auto;\n      white-space: nowrap;\n    }\n\n    &--loading {\n      opacity: 0;\n    }\n  }\n\n  &--default {\n    color: var(--va-button-background-color, var(--va-white));\n\n    i {\n      color: var(--va-button-icon-color, var(--va-white));\n    }\n  }\n\n  &--outline {\n    background-color: transparent;\n    border: solid var(--va-button-outline-border, var(--va-outline-border-width));\n    text-decoration: none;\n\n    .va-button__content {\n      margin: calc(var(--va-button-outline-border, var(--va-outline-border-width)) * -1);\n    }\n\n    &.va-button--disabled {\n      background: transparent;\n\n      @include va-disabled;\n\n      &.va-button--active {\n        .va-button__content,\n        i {\n          color: var(--va-button-outline-icon-color, var(--va-white)) !important;\n        }\n      }\n    }\n  }\n\n  &--flat {\n    background: transparent;\n    border: var(--va-button-flat-border, var(--va-control-border)) solid transparent;\n    text-decoration: none;\n  }\n\n  &.va-button--disabled {\n    @include va-disabled;\n  }\n\n  &--large {\n    @include va-button(var(--va-button-lg-content-py), var(--va-button-lg-content-px), var(--va-button-lg-font-size), var(--va-button-lg-line-height), var(--va-button-lg-border-radius));\n\n    letter-spacing: var(--va-button-lg-letter-spacing);\n    min-height: var(--va-button-lg-size);\n    min-width: var(--va-button-lg-size);\n\n    .va-button__content {\n      padding: var(--va-button-lg-content-py) var(--va-button-lg-content-px);\n    }\n\n    &.va-button--round {\n      width: var(--va-button-lg-size);\n      height: var(--va-button-lg-size);\n    }\n\n    &.va-button--outline {\n      line-height: calc(var(--va-button-lg-line-height) - 2 * var(--va-button-outline-border, var(--va-outline-border-width)));\n    }\n\n    &.va-button--square {\n      border-radius: var(--va-button-lg-square-border-radius);\n    }\n\n    .va-button__left-icon {\n      margin-left: calc(var(--va-button-lg-content-px) / -2);\n      margin-right: calc(var(--va-button-lg-space-between-items) / 2);\n    }\n\n    .va-button__right-icon {\n      margin-left: calc(var(--va-button-lg-space-between-items) / 2);\n      margin-right: calc(var(--va-button-lg-content-px) / -2);\n    }\n  }\n\n  &--small {\n    @include va-button(var(--va-button-sm-content-py), var(--va-button-sm-content-px), var(--va-button-sm-font-size), var(--va-button-sm-line-height), var(--va-button-sm-border-radius));\n\n    letter-spacing: var(--va-button-sm-letter-spacing);\n    min-height: var(--va-button-sm-size);\n    min-width: var(--va-button-sm-size);\n\n    .va-button__content {\n      padding: var(--va-button-sm-content-py) var(--va-button-sm-content-px);\n    }\n\n    &.va-button--round {\n      width: var(--va-button-sm-size);\n      height: var(--va-button-sm-size);\n    }\n\n    &.va-button--outline {\n      line-height: calc(var(--va-button-sm-line-height) - 2 * var(--va-button-outline-border, var(--va-outline-border-width)));\n    }\n\n    &.va-button--square {\n      border-radius: var(--va-button-sm-square-border-radius);\n    }\n\n    .va-button__left-icon {\n      margin-left: calc(var(--va-button-sm-content-px) / -2);\n      margin-right: calc(var(--va-button-sm-space-between-items) / 2);\n    }\n\n    .va-button__right-icon {\n      margin-left: calc(var(--va-button-sm-space-between-items) / 2);\n      margin-right: calc(var(--va-button-sm-content-px) / -2);\n    }\n  }\n\n  &--normal {\n    @include va-button(var(--va-button-content-py), var(--va-button-content-px), var(--va-button-font-size), var(--va-button-line-height), var(--va-button-border-radius));\n\n    letter-spacing: var(--va-button-letter-spacing, var(--va-letter-spacing));\n    min-height: var(--va-button-size);\n    min-width: var(--va-button-size);\n\n    .va-button__content {\n      padding: var(--va-button-content-py) var(--va-button-content-px);\n      line-height: var(--va-button-line-height);\n    }\n\n    &.va-button--round {\n      width: var(--va-button-size);\n      height: var(--va-button-size);\n    }\n\n    &.va-button--outline {\n      line-height: calc(var(--va-button-line-height) - 2 * var(--va-button-outline-border, var(--va-outline-border-width)));\n    }\n\n    &.va-button--square {\n      border-radius: var(--va-button-square-border-radius);\n    }\n\n    .va-button__left-icon {\n      margin-left: calc(var(--va-button-content-px) / -2);\n      margin-right: calc(var(--va-button-space-between-items) / 2);\n    }\n\n    .va-button__right-icon {\n      margin-left: calc(var(--va-button-space-between-items) / 2);\n      margin-right: calc(var(--va-button-content-px) / -2);\n    }\n  }\n\n  &--round {\n    .va-button__content {\n      padding: 0;\n    }\n  }\n\n  &--round,\n  &--no-label {\n    .va-button__left-icon {\n      margin-left: 0;\n      margin-right: 0;\n    }\n\n    .va-button__right-icon {\n      margin-left: 0;\n      margin-right: 0;\n    }\n  }\n\n  &--space-between-items {\n    .va-button__content > * {\n      margin-right: calc(var(--va-button-space-between-items) / 2);\n      margin-left: calc(var(--va-button-space-between-items) / 2);\n\n      &:last-child {\n        margin-right: 0;\n      }\n\n      &:first-child {\n        margin-left: 0;\n      }\n    }\n  }\n\n  &--loading {\n    pointer-events: none;\n  }\n\n  &--block {\n    display: flex;\n    min-width: 100%;\n  }\n\n  &--square {\n    border-radius: 0.5rem;\n  }\n\n  &__loader {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n  }\n}\n</style>\n"],"names":["defineComponent","name","components","VaIcon","VaProgressCircle","props","useSizeProps","useLoadingProps","useRouterLinkProps","color","type","String","default","textColor","undefined","tag","outline","Boolean","gradient","flat","disabled","block","rounded","round","spaceBetweenItems","icon","iconRight","size","validator","value","includes","setup","slots","sizeComputed","useSize","computeColor","useColor","tagComputed","hrefComputed","useRouterLink","hoverState","ref","focusState","colorComputed","computed","isTransparentBackground","textColorComputed","useTextColor","isSlotContentPassed","children","computedType","hasOneIcon","computedClass","loading","loaderSize","exec","computedStyle","borderColor","background","getGradientBackground","alpha","lightness","shiftHSLAColor","a","l","button","methods","focus","this","blur","_ctx","_mergeProps","class","style","href","target","to","replace","append","activeClass","exact","exactActiveClass","tabindex","_toHandlers","_createVNode","_createBlock","_renderSlot","indeterminate","thickness"],"mappings":"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"}