{"version":3,"file":"index26.js","sources":["../../src/components/va-file-upload/VaFileUploadUndo/VaFileUploadUndo.vue","../../src/components/va-file-upload/VaFileUploadUndo/VaFileUploadUndo.vue?vue&type=template&id=ce975680&lang.js","../../src/components/va-file-upload/VaFileUploadUndo/index.ts","../../src/components/va-file-upload/VaFileUploadListItem/VaFileUploadListItem.vue","../../src/components/va-file-upload/VaFileUploadListItem/VaFileUploadListItem.vue?vue&type=template&id=90450f40&lang.js","../../src/components/va-file-upload/VaFileUploadListItem/index.ts","../../src/components/va-file-upload/VaFileUploadGalleryItem/VaFileUploadGalleryItem.vue","../../src/components/va-file-upload/VaFileUploadGalleryItem/VaFileUploadGalleryItem.vue?vue&type=template&id=15a3107c&lang.js","../../src/components/va-file-upload/VaFileUploadGalleryItem/index.ts","../../src/components/va-file-upload/VaFileUploadSingleItem/VaFileUploadSingleItem.vue","../../src/components/va-file-upload/VaFileUploadSingleItem/VaFileUploadSingleItem.vue?vue&type=template&id=28528720&lang.js","../../src/components/va-file-upload/VaFileUploadSingleItem/index.ts","../../src/components/va-file-upload/VaFileUploadList/VaFileUploadList.vue","../../src/components/va-file-upload/VaFileUploadList/VaFileUploadList.vue?vue&type=template&id=6af3e000&lang.js","../../src/components/va-file-upload/VaFileUploadList/index.ts","../../src/components/va-file-upload/VaFileUpload.vue","../../src/components/va-file-upload/VaFileUpload.vue?vue&type=template&id=c04ee272&lang.js","../../src/components/va-file-upload/index.ts"],"sourcesContent":["<template>\n  <div class=\"va-file-upload-undo\">\n    <span>File was successfully deleted</span>\n    <va-button\n      @click=\"$emit('recover')\"\n      outline\n      size=\"small\"\n      class=\"va-file-upload-undo__button\"\n    >\n      Undo\n    </va-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport VaButton from '../../va-button'\n\nexport default defineComponent({\n  name: 'VaFileUploadUndo',\n  components: {\n    VaButton,\n  },\n  emits: ['recover'],\n})\n\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-file-upload-undo {\n  height: var(--va-file-upload-undo-height);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  &__button {\n    line-height: var(--va-file-upload-undo-button-line-height);\n    margin-left: var(--va-file-upload-undo-margin-left);\n    margin-top: var(--va-file-upload-undo-button-margin-top);\n    margin-bottom: var(--va-file-upload-undo-button-margin-bottom);\n  }\n}\n</style>\n","<template>\n  <div class=\"va-file-upload-undo\">\n    <span>File was successfully deleted</span>\n    <va-button\n      @click=\"$emit('recover')\"\n      outline\n      size=\"small\"\n      class=\"va-file-upload-undo__button\"\n    >\n      Undo\n    </va-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport VaButton from '../../va-button'\n\nexport default defineComponent({\n  name: 'VaFileUploadUndo',\n  components: {\n    VaButton,\n  },\n  emits: ['recover'],\n})\n\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-file-upload-undo {\n  height: var(--va-file-upload-undo-height);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  &__button {\n    line-height: var(--va-file-upload-undo-button-line-height);\n    margin-left: var(--va-file-upload-undo-margin-left);\n    margin-top: var(--va-file-upload-undo-button-margin-top);\n    margin-bottom: var(--va-file-upload-undo-button-margin-bottom);\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaFileUploadUndo from './VaFileUploadUndo.vue'\n\nexport default withConfigTransport(VaFileUploadUndo)\n","<template>\n  <va-card\n    class=\"va-file-upload-list-item\"\n    :stripe=\"removed && undo\"\n    :stripeColor=\"color\"\n    no-margin\n    no-padding\n    :class=\"{'file-upload-list-item--undo': removed}\"\n  >\n    <va-file-upload-undo\n      @recover=\"recoverFile\"\n      v-if=\"removed && undo\"\n    />\n    <div\n      class=\"va-file-upload-list-item__content\"\n      v-else\n    >\n      <div class=\"va-file-upload-list-item__name\">\n        {{ file && file.name }}\n      </div>\n      <div class=\"va-file-upload-list-item__size\">\n        {{ file && file.size }}\n      </div>\n      <va-icon\n        color=\"danger\"\n        name=\"clear\"\n        @click=\"removeFile()\"\n        class=\"va-file-upload-list-item__delete\"\n      />\n    </div>\n  </va-card>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref } from 'vue'\n\nimport VaCard from '../../va-card'\nimport VaIcon from '../../va-icon'\n\nimport { VaFile, ConvertedFile } from '../types'\n\nimport VaFileUploadUndo from '../VaFileUploadUndo'\n\nexport default defineComponent({\n  name: 'VaFileUploadListItem',\n  components: {\n    VaIcon,\n    VaCard,\n    VaFileUploadUndo,\n  },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<ConvertedFile | null>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n    undo: { type: Boolean as PropType<boolean>, default: false },\n    undoDuration: { type: Number as PropType<number>, default: 3000 },\n  },\n  setup (props, { emit }) {\n    const removed = ref(false)\n\n    const removeFile = () => {\n      if (props.undo) {\n        removed.value = true\n\n        setTimeout(() => {\n          if (removed.value) {\n            emit('remove')\n            removed.value = false\n          }\n        }, props.undoDuration)\n      } else {\n        emit('remove')\n        removed.value = false\n      }\n    }\n\n    const recoverFile = () => { removed.value = false }\n\n    return {\n      removed,\n      removeFile,\n      recoverFile,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../../styles/resources\";\n@import \"variables\";\n\n.va-file-upload-list-item {\n  & + & {\n    margin-top: 0.5rem;\n  }\n\n  line-height: 1.5rem;\n  width: 100%;\n  max-width: 100%;\n  padding: 1.125rem 0.5rem 1rem 1rem;\n\n  &__content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__name {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    flex-basis: 60%;\n    overflow: hidden;\n  }\n\n  &__size {\n    color: var(--va-file-upload-list-item-size-text-color);\n  }\n\n  &__delete {\n    font-size: 1.5rem;\n    cursor: pointer;\n  }\n\n  &--undo {\n    background: none;\n    box-shadow: none;\n  }\n}\n</style>\n","<template>\n  <va-card\n    class=\"va-file-upload-list-item\"\n    :stripe=\"removed && undo\"\n    :stripeColor=\"color\"\n    no-margin\n    no-padding\n    :class=\"{'file-upload-list-item--undo': removed}\"\n  >\n    <va-file-upload-undo\n      @recover=\"recoverFile\"\n      v-if=\"removed && undo\"\n    />\n    <div\n      class=\"va-file-upload-list-item__content\"\n      v-else\n    >\n      <div class=\"va-file-upload-list-item__name\">\n        {{ file && file.name }}\n      </div>\n      <div class=\"va-file-upload-list-item__size\">\n        {{ file && file.size }}\n      </div>\n      <va-icon\n        color=\"danger\"\n        name=\"clear\"\n        @click=\"removeFile()\"\n        class=\"va-file-upload-list-item__delete\"\n      />\n    </div>\n  </va-card>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref } from 'vue'\n\nimport VaCard from '../../va-card'\nimport VaIcon from '../../va-icon'\n\nimport { VaFile, ConvertedFile } from '../types'\n\nimport VaFileUploadUndo from '../VaFileUploadUndo'\n\nexport default defineComponent({\n  name: 'VaFileUploadListItem',\n  components: {\n    VaIcon,\n    VaCard,\n    VaFileUploadUndo,\n  },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<ConvertedFile | null>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n    undo: { type: Boolean as PropType<boolean>, default: false },\n    undoDuration: { type: Number as PropType<number>, default: 3000 },\n  },\n  setup (props, { emit }) {\n    const removed = ref(false)\n\n    const removeFile = () => {\n      if (props.undo) {\n        removed.value = true\n\n        setTimeout(() => {\n          if (removed.value) {\n            emit('remove')\n            removed.value = false\n          }\n        }, props.undoDuration)\n      } else {\n        emit('remove')\n        removed.value = false\n      }\n    }\n\n    const recoverFile = () => { removed.value = false }\n\n    return {\n      removed,\n      removeFile,\n      recoverFile,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../../styles/resources\";\n@import \"variables\";\n\n.va-file-upload-list-item {\n  & + & {\n    margin-top: 0.5rem;\n  }\n\n  line-height: 1.5rem;\n  width: 100%;\n  max-width: 100%;\n  padding: 1.125rem 0.5rem 1rem 1rem;\n\n  &__content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__name {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    flex-basis: 60%;\n    overflow: hidden;\n  }\n\n  &__size {\n    color: var(--va-file-upload-list-item-size-text-color);\n  }\n\n  &__delete {\n    font-size: 1.5rem;\n    cursor: pointer;\n  }\n\n  &--undo {\n    background: none;\n    box-shadow: none;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaFileUploadListItem from './VaFileUploadListItem.vue'\n\nexport default withConfigTransport(VaFileUploadListItem)\n","<template>\n  <div\n    v-if=\"removed && undo\"\n    class=\"va-file-upload-gallery-item\"\n    :class=\"{'va-file-upload-gallery-item--undo': removed}\"\n  >\n    <va-file-upload-undo\n      class=\"va-file-upload-gallery-item--undo\"\n      @recover=\"recoverImage\"\n    />\n  </div>\n\n  <div\n    v-else\n    tabindex=\"0\"\n    class=\"va-file-upload-gallery-item\"\n    :class=\"{\n      'file-upload-gallery-item_not-image': !previewImage,\n      'va-file-upload-gallery-item--focused': isFocused\n    }\"\n    @focus=\"isFocused = true\"\n    @blur=\"isFocused = false\"\n  >\n    <img\n      v-if=\"previewImage\"\n      :src=\"previewImage\"\n      alt=\"\"\n      class=\"va-file-upload-gallery-item__image\"\n    >\n    <div class=\"va-file-upload-gallery-item__overlay\">\n      <div\n        class=\"va-file-upload-gallery-item__overlay-background\"\n        :style=\"overlayStyles\"\n      />\n      <div\n        class=\"va-file-upload-gallery-item__name\"\n        :title=\"file.name\"\n      >\n        {{ file.name }}\n      </div>\n      <va-button\n        flat\n        color=\"danger\"\n        icon=\"delete_outline\"\n        class=\"va-file-upload-gallery-item__delete\"\n        @click=\"removeImage\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, PropType, ref, watch, computed } from 'vue'\n\nimport VaButton from '../../va-button'\nimport VaFileUploadUndo from '../VaFileUploadUndo'\nimport { colorToRgba } from '../../../services/color-config/color-functions'\n\nimport type { ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadGalleryItem',\n  components: { VaFileUploadUndo, VaButton },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<ConvertedFile>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n    undo: { type: Boolean as PropType<boolean>, default: false },\n    undoDuration: { type: Number as PropType<number>, default: 3000 },\n  },\n  setup (props, { emit }) {\n    const previewImage = ref('')\n    const removed = ref(false)\n    const isFocused = ref(false)\n\n    const overlayStyles = computed(() => ({ backgroundColor: colorToRgba(props.color, 0.7) }))\n\n    const removeImage = () => {\n      if (props.undo) {\n        removed.value = true\n\n        setTimeout(() => {\n          if (!removed.value) { return }\n\n          emit('remove')\n          removed.value = false\n        }, props.undoDuration)\n      } else {\n        emit('remove')\n        removed.value = false\n      }\n    }\n\n    const recoverImage = () => { removed.value = false }\n\n    const convertToImg = () => {\n      if (!props.file.name || !props.file.image) { return }\n\n      if (props.file.image.url) {\n        previewImage.value = props.file.image.url\n      } else if (props.file.image instanceof File) {\n        const reader = new FileReader()\n        reader.readAsDataURL(props.file.image)\n        reader.onload = (e) => {\n          if ((e.target?.result as string).includes('image')) {\n            previewImage.value = e.target?.result as string\n          }\n        }\n      }\n    }\n\n    onMounted(convertToImg)\n    watch(() => props.file, convertToImg)\n\n    return {\n      previewImage,\n      removed,\n      isFocused,\n      recoverImage,\n      overlayStyles,\n      removeImage,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"variables\";\n@import \"../../../styles/resources\";\n\n$max-image-size: 8.5714rem;\n\n.va-file-upload-gallery-item {\n  display: flex;\n  position: relative;\n  margin-bottom: 1rem;\n  margin-right: 0.5rem;\n  flex-basis: calc(14.2857% - 0.5rem);\n  max-width: calc(14.2857% - 0.5rem);\n  border-radius: 0.375rem;\n  overflow: hidden;\n  width: 100%;\n  align-items: stretch;\n\n  @include media-breakpoint-down(md) {\n    flex-basis: calc(16.667% - 0.5rem);\n    max-width: calc(16.667% - 0.5rem);\n  }\n\n  @include media-breakpoint-down(sm) {\n    flex-basis: calc(20% - 0.5rem);\n    max-width: calc(20% - 0.5rem);\n  }\n\n  @include media-breakpoint-down(xs) {\n    flex-basis: calc(50% - 0.5rem);\n    max-width: calc(50% - 0.5rem);\n  }\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  &:hover,\n  &:focus,\n  &--focused {\n    .va-file-upload-gallery-item__overlay {\n      z-index: 3;\n      opacity: 1;\n    }\n\n    .va-file-upload-gallery-item {\n      &__name {\n        color: var(--va-file-upload-gallery-item-text-hover);\n      }\n    }\n  }\n\n  &__overlay {\n    display: flex;\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    flex-direction: column;\n    padding: 0.5rem;\n    z-index: -1;\n    opacity: 0;\n  }\n\n  &__overlay-background {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    z-index: -1;\n  }\n\n  &__image {\n    width: 100%;\n    box-shadow: var(--va-box-shadow);\n    object-fit: cover;\n    z-index: 1;\n  }\n\n  &__name {\n    color: var(--va-file-upload-gallery-item-text);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 0.875rem;\n  }\n\n  &__delete {\n    cursor: pointer;\n    font-size: 1.5rem;\n    margin-top: auto;\n  }\n\n  &--undo {\n    box-shadow: none;\n\n    .va-file-upload-gallery-item--undo {\n      padding: 0.5rem;\n      display: flex;\n      flex-direction: column;\n      font-size: 0.875rem;\n      height: 100%;\n      justify-content: space-between;\n      align-items: flex-start;\n\n      span {\n        margin-right: 0.5rem;\n      }\n\n      .va-button {\n        margin: 0;\n      }\n    }\n  }\n}\n\n.file-upload-gallery-item_not-image {\n  .file-upload-gallery-item__overlay {\n    display: flex;\n  }\n}\n</style>\n","<template>\n  <div\n    v-if=\"removed && undo\"\n    class=\"va-file-upload-gallery-item\"\n    :class=\"{'va-file-upload-gallery-item--undo': removed}\"\n  >\n    <va-file-upload-undo\n      class=\"va-file-upload-gallery-item--undo\"\n      @recover=\"recoverImage\"\n    />\n  </div>\n\n  <div\n    v-else\n    tabindex=\"0\"\n    class=\"va-file-upload-gallery-item\"\n    :class=\"{\n      'file-upload-gallery-item_not-image': !previewImage,\n      'va-file-upload-gallery-item--focused': isFocused\n    }\"\n    @focus=\"isFocused = true\"\n    @blur=\"isFocused = false\"\n  >\n    <img\n      v-if=\"previewImage\"\n      :src=\"previewImage\"\n      alt=\"\"\n      class=\"va-file-upload-gallery-item__image\"\n    >\n    <div class=\"va-file-upload-gallery-item__overlay\">\n      <div\n        class=\"va-file-upload-gallery-item__overlay-background\"\n        :style=\"overlayStyles\"\n      />\n      <div\n        class=\"va-file-upload-gallery-item__name\"\n        :title=\"file.name\"\n      >\n        {{ file.name }}\n      </div>\n      <va-button\n        flat\n        color=\"danger\"\n        icon=\"delete_outline\"\n        class=\"va-file-upload-gallery-item__delete\"\n        @click=\"removeImage\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, PropType, ref, watch, computed } from 'vue'\n\nimport VaButton from '../../va-button'\nimport VaFileUploadUndo from '../VaFileUploadUndo'\nimport { colorToRgba } from '../../../services/color-config/color-functions'\n\nimport type { ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadGalleryItem',\n  components: { VaFileUploadUndo, VaButton },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<ConvertedFile>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n    undo: { type: Boolean as PropType<boolean>, default: false },\n    undoDuration: { type: Number as PropType<number>, default: 3000 },\n  },\n  setup (props, { emit }) {\n    const previewImage = ref('')\n    const removed = ref(false)\n    const isFocused = ref(false)\n\n    const overlayStyles = computed(() => ({ backgroundColor: colorToRgba(props.color, 0.7) }))\n\n    const removeImage = () => {\n      if (props.undo) {\n        removed.value = true\n\n        setTimeout(() => {\n          if (!removed.value) { return }\n\n          emit('remove')\n          removed.value = false\n        }, props.undoDuration)\n      } else {\n        emit('remove')\n        removed.value = false\n      }\n    }\n\n    const recoverImage = () => { removed.value = false }\n\n    const convertToImg = () => {\n      if (!props.file.name || !props.file.image) { return }\n\n      if (props.file.image.url) {\n        previewImage.value = props.file.image.url\n      } else if (props.file.image instanceof File) {\n        const reader = new FileReader()\n        reader.readAsDataURL(props.file.image)\n        reader.onload = (e) => {\n          if ((e.target?.result as string).includes('image')) {\n            previewImage.value = e.target?.result as string\n          }\n        }\n      }\n    }\n\n    onMounted(convertToImg)\n    watch(() => props.file, convertToImg)\n\n    return {\n      previewImage,\n      removed,\n      isFocused,\n      recoverImage,\n      overlayStyles,\n      removeImage,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"variables\";\n@import \"../../../styles/resources\";\n\n$max-image-size: 8.5714rem;\n\n.va-file-upload-gallery-item {\n  display: flex;\n  position: relative;\n  margin-bottom: 1rem;\n  margin-right: 0.5rem;\n  flex-basis: calc(14.2857% - 0.5rem);\n  max-width: calc(14.2857% - 0.5rem);\n  border-radius: 0.375rem;\n  overflow: hidden;\n  width: 100%;\n  align-items: stretch;\n\n  @include media-breakpoint-down(md) {\n    flex-basis: calc(16.667% - 0.5rem);\n    max-width: calc(16.667% - 0.5rem);\n  }\n\n  @include media-breakpoint-down(sm) {\n    flex-basis: calc(20% - 0.5rem);\n    max-width: calc(20% - 0.5rem);\n  }\n\n  @include media-breakpoint-down(xs) {\n    flex-basis: calc(50% - 0.5rem);\n    max-width: calc(50% - 0.5rem);\n  }\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  &:hover,\n  &:focus,\n  &--focused {\n    .va-file-upload-gallery-item__overlay {\n      z-index: 3;\n      opacity: 1;\n    }\n\n    .va-file-upload-gallery-item {\n      &__name {\n        color: var(--va-file-upload-gallery-item-text-hover);\n      }\n    }\n  }\n\n  &__overlay {\n    display: flex;\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    flex-direction: column;\n    padding: 0.5rem;\n    z-index: -1;\n    opacity: 0;\n  }\n\n  &__overlay-background {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    z-index: -1;\n  }\n\n  &__image {\n    width: 100%;\n    box-shadow: var(--va-box-shadow);\n    object-fit: cover;\n    z-index: 1;\n  }\n\n  &__name {\n    color: var(--va-file-upload-gallery-item-text);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 0.875rem;\n  }\n\n  &__delete {\n    cursor: pointer;\n    font-size: 1.5rem;\n    margin-top: auto;\n  }\n\n  &--undo {\n    box-shadow: none;\n\n    .va-file-upload-gallery-item--undo {\n      padding: 0.5rem;\n      display: flex;\n      flex-direction: column;\n      font-size: 0.875rem;\n      height: 100%;\n      justify-content: space-between;\n      align-items: flex-start;\n\n      span {\n        margin-right: 0.5rem;\n      }\n\n      .va-button {\n        margin: 0;\n      }\n    }\n  }\n}\n\n.file-upload-gallery-item_not-image {\n  .file-upload-gallery-item__overlay {\n    display: flex;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaFileUploadGalleryItem from './VaFileUploadGalleryItem.vue'\n\nexport default withConfigTransport(VaFileUploadGalleryItem)\n","<template>\n  <div class=\"va-file-upload-single-item\">\n    <div class=\"va-file-upload-single-item__name\">\n      {{ file && file.name }}\n    </div>\n    <va-button\n      flat\n      @click=\"$emit('remove')\"\n      color=\"danger\"\n      size=\"small\"\n      class=\"va-file-upload-single-item__button\"\n    >\n      Delete\n    </va-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport VaButton from '../../va-button'\n\nimport { VaFile, ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadSingleItem',\n  components: {\n    VaButton,\n  },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<ConvertedFile | null>, default: null },\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-file-upload-single-item {\n  display: flex;\n  align-items: center;\n  max-width: 100%;\n\n  &__name {\n    margin-right: 0.25rem;\n    max-width: 80%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &__button {\n    margin-top: 0;\n    margin-bottom: 0;\n    font-weight: 700;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-file-upload-single-item\">\n    <div class=\"va-file-upload-single-item__name\">\n      {{ file && file.name }}\n    </div>\n    <va-button\n      flat\n      @click=\"$emit('remove')\"\n      color=\"danger\"\n      size=\"small\"\n      class=\"va-file-upload-single-item__button\"\n    >\n      Delete\n    </va-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport VaButton from '../../va-button'\n\nimport { VaFile, ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadSingleItem',\n  components: {\n    VaButton,\n  },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<ConvertedFile | null>, default: null },\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-file-upload-single-item {\n  display: flex;\n  align-items: center;\n  max-width: 100%;\n\n  &__name {\n    margin-right: 0.25rem;\n    max-width: 80%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &__button {\n    margin-top: 0;\n    margin-bottom: 0;\n    font-weight: 700;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaFileUploadSingleItem from './VaFileUploadSingleItem.vue'\n\nexport default withConfigTransport(VaFileUploadSingleItem)\n","<template>\n  <div\n    class=\"va-file-upload-list\"\n    :class=\"`va-file-upload-list--${type}`\"\n  >\n    <template v-if=\"type === 'list'\">\n      <va-file-upload-list-item\n        v-for=\"(file, index) in filesList\"\n        :key=\"file.name\"\n        :file=\"file\"\n        :color=\"color\"\n        :undo=\"undo\"\n        :undoDuration=\"undoDuration\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'gallery'\">\n      <va-file-upload-gallery-item\n        v-for=\"(file, index) in filesList\"\n        :file=\"file\"\n        :key=\"file.name\"\n        :color=\"color\"\n        :undo=\"undo\"\n        :undoDuration=\"undoDuration\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'single' && filesList.length\">\n      <va-file-upload-single-item\n        :file=\"filesList[filesList.length - 1]\"\n        @remove=\"$emit('removeSingle')\"\n      />\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport VaFileUploadListItem from '../VaFileUploadListItem'\nimport VaFileUploadGalleryItem from '../VaFileUploadGalleryItem'\nimport VaFileUploadSingleItem from '../VaFileUploadSingleItem'\n\nimport type { VaFile, ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadList',\n  components: {\n    VaFileUploadListItem,\n    VaFileUploadGalleryItem,\n    VaFileUploadSingleItem,\n  },\n  emits: ['remove', 'removeSingle'],\n  props: {\n    type: { type: String as PropType<string>, default: '' },\n    files: { type: Array as PropType<VaFile[]>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n    undo: { type: Boolean as PropType<boolean>, default: false },\n    undoDuration: { type: Number as PropType<number>, default: 3000 },\n  },\n  setup (props) {\n    const filesList = computed(() => props.files.map(convertFile))\n\n    const convertFile = (file: VaFile): ConvertedFile => ({\n      name: file.name || file.url || '',\n      size: formatSize(file.size),\n      date: formatDate(new Date()),\n      image: file,\n    })\n\n    const formatSize = (bytes?: number) => {\n      if (bytes === 0) { return '0 Bytes' }\n      if (!bytes) { return '' }\n\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    const formatDate = (date = new Date()) => {\n      return date.toLocaleDateString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n      })\n    }\n\n    return {\n      filesList,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-file-upload-list {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 0 1.5rem;\n\n  &--gallery {\n    padding-bottom: 0.5rem;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-file-upload-list\"\n    :class=\"`va-file-upload-list--${type}`\"\n  >\n    <template v-if=\"type === 'list'\">\n      <va-file-upload-list-item\n        v-for=\"(file, index) in filesList\"\n        :key=\"file.name\"\n        :file=\"file\"\n        :color=\"color\"\n        :undo=\"undo\"\n        :undoDuration=\"undoDuration\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'gallery'\">\n      <va-file-upload-gallery-item\n        v-for=\"(file, index) in filesList\"\n        :file=\"file\"\n        :key=\"file.name\"\n        :color=\"color\"\n        :undo=\"undo\"\n        :undoDuration=\"undoDuration\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'single' && filesList.length\">\n      <va-file-upload-single-item\n        :file=\"filesList[filesList.length - 1]\"\n        @remove=\"$emit('removeSingle')\"\n      />\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport VaFileUploadListItem from '../VaFileUploadListItem'\nimport VaFileUploadGalleryItem from '../VaFileUploadGalleryItem'\nimport VaFileUploadSingleItem from '../VaFileUploadSingleItem'\n\nimport type { VaFile, ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadList',\n  components: {\n    VaFileUploadListItem,\n    VaFileUploadGalleryItem,\n    VaFileUploadSingleItem,\n  },\n  emits: ['remove', 'removeSingle'],\n  props: {\n    type: { type: String as PropType<string>, default: '' },\n    files: { type: Array as PropType<VaFile[]>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n    undo: { type: Boolean as PropType<boolean>, default: false },\n    undoDuration: { type: Number as PropType<number>, default: 3000 },\n  },\n  setup (props) {\n    const filesList = computed(() => props.files.map(convertFile))\n\n    const convertFile = (file: VaFile): ConvertedFile => ({\n      name: file.name || file.url || '',\n      size: formatSize(file.size),\n      date: formatDate(new Date()),\n      image: file,\n    })\n\n    const formatSize = (bytes?: number) => {\n      if (bytes === 0) { return '0 Bytes' }\n      if (!bytes) { return '' }\n\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    const formatDate = (date = new Date()) => {\n      return date.toLocaleDateString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n      })\n    }\n\n    return {\n      filesList,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-file-upload-list {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 0 1.5rem;\n\n  &--gallery {\n    padding-bottom: 0.5rem;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaFileUploadList from './VaFileUploadList.vue'\n\nexport default withConfigTransport(VaFileUploadList)\n","<template>\n  <div\n    class=\"va-file-upload\"\n    :class=\"{ 'va-file-upload--dropzone': dropzone }\"\n    :style=\"computedStyle\"\n  >\n    <slot>\n      <div class=\"va-file-upload__field\">\n        <div\n          class=\"va-file-upload__field__text\"\n          v-if=\"dropzone\"\n        >\n          {{ dropZoneText }}\n        </div>\n        <va-button\n          class=\"va-file-upload__field__button\"\n          :disabled=\"disabled\"\n          :color=\"colorComputed\"\n          @change=\"changeFieldValue\"\n          @click=\"callFileDialogue()\"\n          :style=\"{ 'pointer-events': dropzoneHighlight ? 'none' : '' }\"\n        >\n          {{ uploadButtonText }}\n        </va-button>\n      </div>\n    </slot>\n\n    <input\n      ref=\"fileInputRef\"\n      type=\"file\"\n      class=\"va-file-upload__field__input\"\n      :accept=\"fileTypes\"\n      :multiple=\"type !== 'single'\"\n      :disabled=\"disabled\"\n      @change=\"changeFieldValue\"\n      @dragenter=\"dropzoneHighlight = true\"\n      @dragleave=\"dropzoneHighlight = false\"\n      tabindex=\"-1\"\n    >\n    <va-file-upload-list\n      v-if=\"files.length\"\n      :type=\"type\"\n      :files=\"files\"\n      :color=\"colorComputed\"\n      :undo=\"undo\"\n      :undoDuration=\"undoDuration\"\n      @remove=\"removeFile\"\n      @removeSingle=\"removeSingleFile\"\n    />\n    <va-modal\n      v-model=\"modal\"\n      hide-default-actions\n      title=\"File validation\"\n      message=\"File type is incorrect!\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, PropType, shallowRef } from 'vue'\nimport { useColors } from '../../services/color-config/color-config'\nimport { shiftHSLAColor } from '../../services/color-config/color-functions'\nimport VaButton from '../va-button'\nimport VaModal from '../va-modal'\nimport VaFileUploadList from './VaFileUploadList'\n\nimport type { VaFile } from './types'\n\nexport default defineComponent({\n  name: 'VaFileUpload',\n\n  components: {\n    VaModal,\n    VaButton,\n    VaFileUploadList,\n  },\n\n  props: {\n    fileTypes: { type: String as PropType<string>, default: '' },\n    dropzone: { type: Boolean as PropType<boolean>, default: false },\n    color: { type: String as PropType<string>, default: 'primary' },\n    disabled: { type: Boolean as PropType<boolean>, default: false },\n    undo: { type: Boolean as PropType<boolean>, default: false },\n    undoDuration: { type: Number as PropType<number>, default: 3000 },\n    dropZoneText: { type: String as PropType<string>, default: 'Drag’n’drop files or' },\n    uploadButtonText: { type: String as PropType<string>, default: 'Upload file' },\n\n    modelValue: {\n      type: Array as PropType<VaFile[]>,\n      default: () => [],\n      validator: (value: VaFile[]) => Array.isArray(value),\n    },\n    type: {\n      type: String as PropType<'list' | 'gallery' | 'single'>,\n      default: 'list',\n      validator: (value: string) => ['list', 'gallery', 'single'].includes(value),\n    },\n  },\n\n  emits: ['update:modelValue', 'file-removed', 'file-added'],\n\n  setup (props, { emit }) {\n    const modal = ref(false)\n    const dropzoneHighlight = ref(false)\n    const fileInputRef = shallowRef<HTMLInputElement | null>(null)\n\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => {\n      if (props.dropzone) {\n        return {\n          backgroundColor: shiftHSLAColor(colorComputed.value, { a: dropzoneHighlight.value ? -0.82 : -0.92 }),\n        }\n      }\n\n      return { backgroundColor: 'transparent' }\n    })\n\n    const files = computed<VaFile[]>({\n      get () { return props.modelValue },\n      set (files) { emit('update:modelValue', files) },\n    })\n\n    const validateFiles = (files: VaFile[]) => files.filter((file) => {\n      const fileName = file.name || file.url\n      if (!fileName) { return false }\n      if (file.url) { return true }\n\n      const MIMETypes = ['audio/*', 'video/*', 'image/*']\n      const isContainedMIMEType = MIMETypes.find((t) => props.fileTypes.includes(t))\n\n      if (isContainedMIMEType) {\n        // Do not validate MIMEType because there is too much to validate.\n        return true\n      }\n\n      const extn = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase()\n\n      const isCorrectExt = props.fileTypes.includes(extn)\n      if (!isCorrectExt) { modal.value = true }\n\n      return isCorrectExt\n    })\n\n    const uploadFile = (e: Event | DragEvent) => {\n      const f = (e.target as HTMLInputElement)?.files || (e as DragEvent).dataTransfer?.files\n\n      if (!f) { return }\n\n      const validatedFiles = props.fileTypes ? validateFiles(Array.from(f)) : f\n      files.value = [...files.value, ...validatedFiles]\n      emit('file-added', validatedFiles)\n    }\n\n    const changeFieldValue = (e: Event | DragEvent) => {\n      uploadFile(e)\n\n      if (fileInputRef.value) {\n        fileInputRef.value.value = ''\n      }\n    }\n\n    const removeFile = (index: number) => {\n      if (index in files.value) {\n        const removedFile = files.value[index]\n        files.value = files.value.filter((item, idx) => idx !== index)\n        emit('file-removed', removedFile)\n      }\n    }\n\n    const removeSingleFile = () => {\n      if (files.value.length > 0) {\n        const removedFile = files.value[0]\n        files.value = []\n        emit('file-removed', removedFile)\n      }\n    }\n\n    const callFileDialogue = () => {\n      if (fileInputRef.value) {\n        fileInputRef.value.click()\n      }\n    }\n\n    onMounted(() => {\n      if (Array.isArray(files.value)) {\n        files.value = validateFiles(files.value)\n      }\n    })\n\n    return {\n      modal,\n      dropzoneHighlight,\n      fileInputRef,\n      colorComputed,\n      computedStyle,\n      uploadFile,\n      changeFieldValue,\n      files,\n      removeFile,\n      removeSingleFile,\n      callFileDialogue,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-file-upload {\n  position: var(--va-file-upload-position);\n  font-family: var(--va-font-family);\n  margin: var(--va-file-upload-margin);\n\n  .va-file-upload-list {\n    margin-top: var(--va-file-upload-list-margin-top);\n  }\n\n  &--dropzone {\n    background-color: var(--va-file-upload-dropzone-background-color);\n    overflow: var(--va-file-upload-dropzone-overflow);\n    border-radius: var(--va-file-upload-dropzone-border-radius);\n    cursor: var(--va-file-upload-dropzone-cursor);\n\n    .va-file-upload__field {\n      justify-content: center;\n      display: flex;\n      align-items: center;\n      padding: var(--va-file-upload-dropzone-field-padding);\n      transition: height 0.2s;\n      overflow: visible;\n      flex-wrap: wrap;\n\n      @include media-breakpoint-down(sm) {\n        flex-direction: column;\n        padding: var(--va-file-upload-dropzone-field-padding-sm);\n\n        &__text {\n          padding: var(--va-file-upload-dropzone-text-padding-sm);\n          text-align: center;\n        }\n      }\n    }\n\n    .va-file-upload-list {\n      padding: var(--va-file-upload-dropzone-list-padding);\n      margin-top: 0;\n    }\n  }\n\n  &__field {\n    overflow: var(--va-file-upload-dropzone-field-overflow);\n    display: var(--va-file-upload-dropzone-field-display);\n    align-items: var(--va-file-upload-dropzone-field-align-items);\n    position: var(--va-file-upload-dropzone-field-position);\n\n    &__button {\n      margin: var(--va-file-upload-dropzone-field-button-margin);\n      z-index: var(--va-file-upload-dropzone-field-button-z-index);\n    }\n\n    &__text {\n      padding-right: var(--va-file-upload-dropzone-field-text-pr);\n    }\n\n    &__input {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      width: 100%;\n      color: transparent;\n      opacity: 0;\n      cursor: pointer;\n\n      &::-webkit-file-upload-button {\n        cursor: pointer;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-file-upload\"\n    :class=\"{ 'va-file-upload--dropzone': dropzone }\"\n    :style=\"computedStyle\"\n  >\n    <slot>\n      <div class=\"va-file-upload__field\">\n        <div\n          class=\"va-file-upload__field__text\"\n          v-if=\"dropzone\"\n        >\n          {{ dropZoneText }}\n        </div>\n        <va-button\n          class=\"va-file-upload__field__button\"\n          :disabled=\"disabled\"\n          :color=\"colorComputed\"\n          @change=\"changeFieldValue\"\n          @click=\"callFileDialogue()\"\n          :style=\"{ 'pointer-events': dropzoneHighlight ? 'none' : '' }\"\n        >\n          {{ uploadButtonText }}\n        </va-button>\n      </div>\n    </slot>\n\n    <input\n      ref=\"fileInputRef\"\n      type=\"file\"\n      class=\"va-file-upload__field__input\"\n      :accept=\"fileTypes\"\n      :multiple=\"type !== 'single'\"\n      :disabled=\"disabled\"\n      @change=\"changeFieldValue\"\n      @dragenter=\"dropzoneHighlight = true\"\n      @dragleave=\"dropzoneHighlight = false\"\n      tabindex=\"-1\"\n    >\n    <va-file-upload-list\n      v-if=\"files.length\"\n      :type=\"type\"\n      :files=\"files\"\n      :color=\"colorComputed\"\n      :undo=\"undo\"\n      :undoDuration=\"undoDuration\"\n      @remove=\"removeFile\"\n      @removeSingle=\"removeSingleFile\"\n    />\n    <va-modal\n      v-model=\"modal\"\n      hide-default-actions\n      title=\"File validation\"\n      message=\"File type is incorrect!\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, PropType, shallowRef } from 'vue'\nimport { useColors } from '../../services/color-config/color-config'\nimport { shiftHSLAColor } from '../../services/color-config/color-functions'\nimport VaButton from '../va-button'\nimport VaModal from '../va-modal'\nimport VaFileUploadList from './VaFileUploadList'\n\nimport type { VaFile } from './types'\n\nexport default defineComponent({\n  name: 'VaFileUpload',\n\n  components: {\n    VaModal,\n    VaButton,\n    VaFileUploadList,\n  },\n\n  props: {\n    fileTypes: { type: String as PropType<string>, default: '' },\n    dropzone: { type: Boolean as PropType<boolean>, default: false },\n    color: { type: String as PropType<string>, default: 'primary' },\n    disabled: { type: Boolean as PropType<boolean>, default: false },\n    undo: { type: Boolean as PropType<boolean>, default: false },\n    undoDuration: { type: Number as PropType<number>, default: 3000 },\n    dropZoneText: { type: String as PropType<string>, default: 'Drag’n’drop files or' },\n    uploadButtonText: { type: String as PropType<string>, default: 'Upload file' },\n\n    modelValue: {\n      type: Array as PropType<VaFile[]>,\n      default: () => [],\n      validator: (value: VaFile[]) => Array.isArray(value),\n    },\n    type: {\n      type: String as PropType<'list' | 'gallery' | 'single'>,\n      default: 'list',\n      validator: (value: string) => ['list', 'gallery', 'single'].includes(value),\n    },\n  },\n\n  emits: ['update:modelValue', 'file-removed', 'file-added'],\n\n  setup (props, { emit }) {\n    const modal = ref(false)\n    const dropzoneHighlight = ref(false)\n    const fileInputRef = shallowRef<HTMLInputElement | null>(null)\n\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => {\n      if (props.dropzone) {\n        return {\n          backgroundColor: shiftHSLAColor(colorComputed.value, { a: dropzoneHighlight.value ? -0.82 : -0.92 }),\n        }\n      }\n\n      return { backgroundColor: 'transparent' }\n    })\n\n    const files = computed<VaFile[]>({\n      get () { return props.modelValue },\n      set (files) { emit('update:modelValue', files) },\n    })\n\n    const validateFiles = (files: VaFile[]) => files.filter((file) => {\n      const fileName = file.name || file.url\n      if (!fileName) { return false }\n      if (file.url) { return true }\n\n      const MIMETypes = ['audio/*', 'video/*', 'image/*']\n      const isContainedMIMEType = MIMETypes.find((t) => props.fileTypes.includes(t))\n\n      if (isContainedMIMEType) {\n        // Do not validate MIMEType because there is too much to validate.\n        return true\n      }\n\n      const extn = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase()\n\n      const isCorrectExt = props.fileTypes.includes(extn)\n      if (!isCorrectExt) { modal.value = true }\n\n      return isCorrectExt\n    })\n\n    const uploadFile = (e: Event | DragEvent) => {\n      const f = (e.target as HTMLInputElement)?.files || (e as DragEvent).dataTransfer?.files\n\n      if (!f) { return }\n\n      const validatedFiles = props.fileTypes ? validateFiles(Array.from(f)) : f\n      files.value = [...files.value, ...validatedFiles]\n      emit('file-added', validatedFiles)\n    }\n\n    const changeFieldValue = (e: Event | DragEvent) => {\n      uploadFile(e)\n\n      if (fileInputRef.value) {\n        fileInputRef.value.value = ''\n      }\n    }\n\n    const removeFile = (index: number) => {\n      if (index in files.value) {\n        const removedFile = files.value[index]\n        files.value = files.value.filter((item, idx) => idx !== index)\n        emit('file-removed', removedFile)\n      }\n    }\n\n    const removeSingleFile = () => {\n      if (files.value.length > 0) {\n        const removedFile = files.value[0]\n        files.value = []\n        emit('file-removed', removedFile)\n      }\n    }\n\n    const callFileDialogue = () => {\n      if (fileInputRef.value) {\n        fileInputRef.value.click()\n      }\n    }\n\n    onMounted(() => {\n      if (Array.isArray(files.value)) {\n        files.value = validateFiles(files.value)\n      }\n    })\n\n    return {\n      modal,\n      dropzoneHighlight,\n      fileInputRef,\n      colorComputed,\n      computedStyle,\n      uploadFile,\n      changeFieldValue,\n      files,\n      removeFile,\n      removeSingleFile,\n      callFileDialogue,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-file-upload {\n  position: var(--va-file-upload-position);\n  font-family: var(--va-font-family);\n  margin: var(--va-file-upload-margin);\n\n  .va-file-upload-list {\n    margin-top: var(--va-file-upload-list-margin-top);\n  }\n\n  &--dropzone {\n    background-color: var(--va-file-upload-dropzone-background-color);\n    overflow: var(--va-file-upload-dropzone-overflow);\n    border-radius: var(--va-file-upload-dropzone-border-radius);\n    cursor: var(--va-file-upload-dropzone-cursor);\n\n    .va-file-upload__field {\n      justify-content: center;\n      display: flex;\n      align-items: center;\n      padding: var(--va-file-upload-dropzone-field-padding);\n      transition: height 0.2s;\n      overflow: visible;\n      flex-wrap: wrap;\n\n      @include media-breakpoint-down(sm) {\n        flex-direction: column;\n        padding: var(--va-file-upload-dropzone-field-padding-sm);\n\n        &__text {\n          padding: var(--va-file-upload-dropzone-text-padding-sm);\n          text-align: center;\n        }\n      }\n    }\n\n    .va-file-upload-list {\n      padding: var(--va-file-upload-dropzone-list-padding);\n      margin-top: 0;\n    }\n  }\n\n  &__field {\n    overflow: var(--va-file-upload-dropzone-field-overflow);\n    display: var(--va-file-upload-dropzone-field-display);\n    align-items: var(--va-file-upload-dropzone-field-align-items);\n    position: var(--va-file-upload-dropzone-field-position);\n\n    &__button {\n      margin: var(--va-file-upload-dropzone-field-button-margin);\n      z-index: var(--va-file-upload-dropzone-field-button-z-index);\n    }\n\n    &__text {\n      padding-right: var(--va-file-upload-dropzone-field-text-pr);\n    }\n\n    &__input {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      width: 100%;\n      color: transparent;\n      opacity: 0;\n      cursor: pointer;\n\n      &::-webkit-file-upload-button {\n        cursor: pointer;\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaFileUpload from './VaFileUpload.vue'\n\nexport { default as VaFileUploadGalleryItem } from './VaFileUploadGalleryItem'\nexport { default as VaFileUploadList } from './VaFileUploadList'\nexport { default as VaFileUploadListItem } from './VaFileUploadListItem'\nexport { default as VaFileUploadSingleItem } from './VaFileUploadSingleItem'\nexport { default as VaFileUploadUndo } from './VaFileUploadUndo'\n\nexport default withConfigTransport(VaFileUpload)\n"],"names":["defineComponent","name","components","VaButton","emits","_mergeProps","class","outline","size","withConfigTransport","VaFileUploadUndo","VaIcon","VaCard","props","file","type","Object","default","color","String","undo","Boolean","undoDuration","Number","setup","emit","removed","ref","removeFile","value","setTimeout","recoverFile","_ctx","stripe","stripeColor","_createBlock","onRecover","_createVNode","onClick","VaFileUploadListItem","previewImage","isFocused","overlayStyles","computed","backgroundColor","colorToRgba","convertToImg","image","url","File","reader","FileReader","readAsDataURL","onload","e","target","result","includes","onMounted","watch","recoverImage","removeImage","tabindex","flat","icon","VaFileUploadGalleryItem","VaFileUploadSingleItem","files","Array","filesList","map","convertFile","formatSize","date","formatDate","Date","bytes","i","Math","floor","log","parseFloat","pow","toFixed","toLocaleDateString","hour","minute","month","day","year","index","key","length","VaFileUploadList","VaModal","fileTypes","dropzone","disabled","dropZoneText","uploadButtonText","modelValue","validator","isArray","modal","dropzoneHighlight","fileInputRef","shallowRef","getColor","useColors","colorComputed","computedStyle","shiftHSLAColor","a","get","set","validateFiles","filter","fileName","find","t","extn","substring","lastIndexOf","toLowerCase","isCorrectExt","uploadFile","f","dataTransfer","validatedFiles","from","changeFieldValue","removedFile","item","idx","removeSingleFile","callFileDialogue","click","style","title","message","VaFileUpload"],"mappings":"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"}