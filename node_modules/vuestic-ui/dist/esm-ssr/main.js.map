{"version":3,"file":"main.js","sources":["../../src/components/va-toast/useToast.ts"],"sourcesContent":["import { createToastInstance, closeById, closeAllNotifications, NotificationOptions } from './toast'\nimport { getCurrentInstance } from 'vue'\n\n/** This hook can be used without plugin used */\nexport const useToast = () => {\n  const appContext = getCurrentInstance()?.appContext\n\n  const createdInThisSetupContext: string[] = []\n\n  /**\n   * @param options can be options object or message string\n   */\n  const init = (options: string | NotificationOptions) => {\n    const id = createToastInstance(options, appContext)\n\n    if (id) { createdInThisSetupContext.push(id) }\n\n    return id\n  }\n\n  const close = (id: string) => closeById(id)\n\n  /**\n   * Closes all VaToast instances in current App instance.\n   * @param allApps if you have multiple vue apps on page, set allApps to true to close it for all apps.\n   */\n  const closeAll = (allApps = false) => closeAllNotifications(allApps ? undefined : appContext)\n\n  /** Use this method if you need to close only toasts that created with this hook */\n  const closeAllCreatedInThisHook = () => {\n    createdInThisSetupContext.forEach((id) => closeById(id))\n  }\n\n  return {\n    init, close, closeAll, closeAllCreatedInThisHook,\n  }\n}\n"],"names":["useToast","appContext","getCurrentInstance","createdInThisSetupContext","init","options","id","createToastInstance","push","close","closeById","closeAll","allApps","closeAllNotifications","undefined","closeAllCreatedInThisHook","forEach"],"mappings":"80JAIaA,SAAW,WACtB,MAAMC,YAAaC,0BAAsBD,WAEnCE,EAAsC,GA0B5C,MAAO,CACLC,KAtBYC,IACZ,MAAMC,EAAKC,EAAoBF,EAASJ,GAIxC,OAFIK,GAAMH,EAA0BK,KAAKF,GAElCA,GAiBDG,MAdOH,GAAeI,EAAUJ,GAczBK,SARE,CAACC,GAAU,IAAUC,EAAsBD,OAAUE,EAAYb,GAQzDc,0BALS,KAChCZ,EAA0Ba,SAASV,GAAOI,EAAUJ"}