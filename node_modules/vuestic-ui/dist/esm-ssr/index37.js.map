{"version":3,"file":"index37.js","sources":["../../src/components/va-popover/VaPopover.vue","../../src/components/va-popover/VaPopover.vue?vue&type=template&id=7c5e74de&lang.js","../../src/components/va-popover/index.ts"],"sourcesContent":["<template>\n  <va-dropdown\n    class=\"va-popover\"\n    v-bind=\"VaDropdownPropValues\"\n    :modelValue=\"modelValue\"\n    :closeOnClickOutside=\"autoHide\"\n    :offset=\"$props.offset\"\n  >\n    <template #default>\n      <div class=\"va-popover__content-wrapper\">\n        <div\n          class=\"va-popover__content\"\n          :style=\"computedPopoverStyle\"\n        >\n          <div\n            v-if=\"$props.icon\"\n            class=\"va-popover__icon\"\n          >\n            <va-icon\n              :name=\"$props.icon\"\n              :color=\"textColorComputed\"\n            />\n          </div>\n          <div v-if=\"$props.title || $props.message\">\n            <div\n              v-if=\"$props.title\"\n              class=\"va-popover__title\"\n            >\n              {{ $props.title }}\n            </div>\n            <div class=\"va-popover__text\">\n              {{ $props.message }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n    <template #anchor>\n      <slot />\n    </template>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\nimport VaDropdown from '../va-dropdown/VaDropdown.vue'\nimport VaIcon from '../va-icon/VaIcon.vue'\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport { useColors } from '../../composables/useColor'\nimport { useTextColor } from '../../composables/useTextColor'\n\nconst VaDropdownProps = extractComponentProps(VaDropdown, ['closeOnClickOutside'])\n\nexport default defineComponent({\n  name: 'VaPopover',\n\n  components: { VaDropdown, VaIcon },\n\n  props: {\n    ...VaDropdownProps,\n    trigger: { default: 'hover' },\n    color: { type: String, default: 'dark' },\n    textColor: { type: String },\n    icon: { type: String, default: '' },\n    title: { type: String, default: '' },\n    message: { type: String, default: '' },\n    autoHide: { type: Boolean, default: true },\n    offset: { type: [Array, Number] as PropType<number | [number, number]>, default: 4 },\n  },\n\n  setup (props) {\n    const VaDropdownPropValues = filterComponentProps(props, VaDropdownProps)\n\n    const { getColor, getBoxShadowColor } = useColors()\n\n    const { textColorComputed } = useTextColor(props.color)\n\n    const computedPopoverStyle = computed(() => ({\n      boxShadow: `0px 2px 3px 0 ${getBoxShadowColor(getColor(props.color))}`,\n      backgroundColor: getColor(props.color),\n      color: textColorComputed.value,\n    }))\n\n    return {\n      VaDropdownPropValues,\n      computedPopoverStyle,\n      textColorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n@import 'variables';\n\n.va-popover {\n  display: var(--va-popover-display);\n\n  &__content-wrapper {\n    background-color: white;\n    border-radius: 0.5rem;\n  }\n\n  &__content {\n    opacity: var(--va-popover-content-opacity);\n    display: var(--va-popover-content-display);\n    align-items: var(--va-popover-content-align-items);\n    padding: var(--va-popover-content-padding);\n    border-radius: var(--va-popover-content-border-radius, var(--va-block-border-radius));\n    font-size: var(--va-popover-content-font-size);\n  }\n\n  &__icon + div {\n    padding-left: 0.75rem;\n    width: 100%;\n    overflow: hidden;\n  }\n\n  &__title {\n    font-weight: var(--va-popover-title-font-weight);\n    margin-bottom: var(--va-popover-title-margin-bottom);\n  }\n\n  &__text {\n    line-height: 1.5;\n  }\n}\n</style>\n","<template>\n  <va-dropdown\n    class=\"va-popover\"\n    v-bind=\"VaDropdownPropValues\"\n    :modelValue=\"modelValue\"\n    :closeOnClickOutside=\"autoHide\"\n    :offset=\"$props.offset\"\n  >\n    <template #default>\n      <div class=\"va-popover__content-wrapper\">\n        <div\n          class=\"va-popover__content\"\n          :style=\"computedPopoverStyle\"\n        >\n          <div\n            v-if=\"$props.icon\"\n            class=\"va-popover__icon\"\n          >\n            <va-icon\n              :name=\"$props.icon\"\n              :color=\"textColorComputed\"\n            />\n          </div>\n          <div v-if=\"$props.title || $props.message\">\n            <div\n              v-if=\"$props.title\"\n              class=\"va-popover__title\"\n            >\n              {{ $props.title }}\n            </div>\n            <div class=\"va-popover__text\">\n              {{ $props.message }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n    <template #anchor>\n      <slot />\n    </template>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\nimport VaDropdown from '../va-dropdown/VaDropdown.vue'\nimport VaIcon from '../va-icon/VaIcon.vue'\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport { useColors } from '../../composables/useColor'\nimport { useTextColor } from '../../composables/useTextColor'\n\nconst VaDropdownProps = extractComponentProps(VaDropdown, ['closeOnClickOutside'])\n\nexport default defineComponent({\n  name: 'VaPopover',\n\n  components: { VaDropdown, VaIcon },\n\n  props: {\n    ...VaDropdownProps,\n    trigger: { default: 'hover' },\n    color: { type: String, default: 'dark' },\n    textColor: { type: String },\n    icon: { type: String, default: '' },\n    title: { type: String, default: '' },\n    message: { type: String, default: '' },\n    autoHide: { type: Boolean, default: true },\n    offset: { type: [Array, Number] as PropType<number | [number, number]>, default: 4 },\n  },\n\n  setup (props) {\n    const VaDropdownPropValues = filterComponentProps(props, VaDropdownProps)\n\n    const { getColor, getBoxShadowColor } = useColors()\n\n    const { textColorComputed } = useTextColor(props.color)\n\n    const computedPopoverStyle = computed(() => ({\n      boxShadow: `0px 2px 3px 0 ${getBoxShadowColor(getColor(props.color))}`,\n      backgroundColor: getColor(props.color),\n      color: textColorComputed.value,\n    }))\n\n    return {\n      VaDropdownPropValues,\n      computedPopoverStyle,\n      textColorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n@import 'variables';\n\n.va-popover {\n  display: var(--va-popover-display);\n\n  &__content-wrapper {\n    background-color: white;\n    border-radius: 0.5rem;\n  }\n\n  &__content {\n    opacity: var(--va-popover-content-opacity);\n    display: var(--va-popover-content-display);\n    align-items: var(--va-popover-content-align-items);\n    padding: var(--va-popover-content-padding);\n    border-radius: var(--va-popover-content-border-radius, var(--va-block-border-radius));\n    font-size: var(--va-popover-content-font-size);\n  }\n\n  &__icon + div {\n    padding-left: 0.75rem;\n    width: 100%;\n    overflow: hidden;\n  }\n\n  &__title {\n    font-weight: var(--va-popover-title-font-weight);\n    margin-bottom: var(--va-popover-title-margin-bottom);\n  }\n\n  &__text {\n    line-height: 1.5;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaPopover from './VaPopover.vue'\n\nexport default withConfigTransport(VaPopover)\n"],"names":["VaDropdownProps","extractComponentProps","VaDropdown","defineComponent","name","components","VaIcon","props","trigger","default","color","type","String","textColor","icon","title","message","autoHide","Boolean","offset","Array","Number","setup","VaDropdownPropValues","filterComponentProps","getColor","getBoxShadowColor","useColors","textColorComputed","useTextColor","computedPopoverStyle","computed","boxShadow","backgroundColor","value","_mergeProps","class","_ctx","modelValue","closeOnClickOutside","_createVNode","style","_createBlock","anchor","_renderSlot","withConfigTransport","VaPopover"],"mappings":"wxBAmDA,MAAMA,EAAkBC,EAAsBC,EAAY,CAAC,wBAE3D,MAAeC,EAAgB,CAC7BC,KAAM,YAENC,WAAY,YAAEH,SAAYI,GAE1BC,MAAO,IACFP,EACHQ,QAAS,CAAEC,QAAS,SACpBC,MAAO,CAAEC,KAAMC,OAAQH,QAAS,QAChCI,UAAW,CAAEF,KAAMC,QACnBE,KAAM,CAAEH,KAAMC,OAAQH,QAAS,IAC/BM,MAAO,CAAEJ,KAAMC,OAAQH,QAAS,IAChCO,QAAS,CAAEL,KAAMC,OAAQH,QAAS,IAClCQ,SAAU,CAAEN,KAAMO,QAAST,SAAS,GACpCU,OAAQ,CAAER,KAAM,CAACS,MAAOC,QAAgDZ,QAAS,IAGnFa,MAAOf,GACL,MAAMgB,EAAuBC,EAAqBjB,EAAOP,IAEnDyB,SAAEA,EAAQC,kBAAEA,GAAsBC,KAElCC,kBAAEA,GAAsBC,EAAatB,EAAMG,OAQjD,MAAO,CACLa,qBAAAA,EACAO,qBAR2BC,GAAS,MACpCC,UAAW,iBAAiBN,EAAkBD,EAASlB,EAAMG,UAC7DuB,gBAAiBR,EAASlB,EAAMG,OAChCA,MAAOkB,EAAkBM,UAMzBN,kBAAAA,oGCrFJO,GACEC,MAAM,cACEC,wBACPC,WAAYD,aACZE,oBAAqBF,WACrBlB,OAAQkB,SAAOlB,YAELV,WAAX,yBACE+B,SAAKJ,MAAM,gCACTI,SACEJ,MAAM,sBACLK,MAAOJ,yBAGAA,SAAW,UADnBK,eAEEN,MAAM,qBAENI,KACGpC,KAAMiC,SAAOvB,KACbJ,MAAO2B,8DAGDA,SAAOtB,OAASsB,SAAOrB,aAAlC0B,iBAEUL,SAAY,WADpBK,eAEEN,MAAM,uBAEHC,SAAOtB,wBAEZyB,SAAKJ,MAAM,sBACNC,SAAOrB,+HAnBNqB,iCAGAA,SAAOvB,qDAIVV,KAAMiC,SAAOvB,KACbJ,MAAO2B,gEAGDA,SAAOtB,OAASsB,SAAOrB,wBAExBqB,SAAOtB,gDAGVsB,SAAOtB,4EAGPsB,SAAOrB,iEAMT2B,UAAX,yBACEC,2HCnCN,MAAeC,EAAoBC"}