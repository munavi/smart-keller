{"version":3,"file":"index44.js","sources":["../../src/components/va-slider/validateSlider.ts","../../src/components/va-slider/VaSlider.vue","../../src/components/va-slider/VaSlider.vue?vue&type=template&id=ad237830&lang.js","../../src/components/va-slider/index.ts"],"sourcesContent":["import { warn } from '../../services/utils'\n\nexport const validateSlider = (value: number | number[], step: number, min: number, max: number) => {\n  if (max < min) {\n    warn('The maximum value can not be less than the minimum value.')\n  }\n\n  if (min > max) {\n    warn('The minimum value can not be greater than the maximum value.')\n  }\n\n  if ((max - min) % step !== 0) {\n    warn('Step is illegal. Slider is nondivisible.')\n  }\n\n  const inRange = (v: number) => {\n    if (v < min) {\n      warn(`The value of the slider is ${v}, the minimum value is ${min}, the value of this slider can not be less than the minimum value`)\n    } else if (v > max) {\n      warn(`The value of the slider is ${v}, the maximum value is ${max}, the value of this slider can not be greater than the maximum value`)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    value.map((v) => inRange(v))\n  } else {\n    inRange(value)\n  }\n\n  return true\n}\n","<template>\n  <div\n    class=\"va-slider\"\n    :class=\"sliderClass\"\n  >\n    <div\n      class=\"va-slider__input-wrapper\"\n      v-if=\"vertical ? $slots.append : $slots.prepend\"\n    >\n      <slot :name=\"vertical ? 'append' : 'prepend'\" />\n    </div>\n    <span\n      v-if=\"($slots.label || label) && !invertLabel\"\n      :style=\"labelStyles\"\n      class=\"va-input__label\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <span\n      v-if=\"vertical ? iconAppend : iconPrepend\"\n      class=\"va-input__label\"\n    >\n      <va-icon\n        :name=\"vertical ? iconAppend : iconPrepend\"\n        :color=\"getColor($props.color)\"\n        :size=\"16\"\n      />\n    </span>\n    <div\n      class=\"va-slider__container\"\n      ref=\"sliderContainer\"\n      @mousedown=\"clickOnContainer\"\n      @touchstart=\"clickOnContainer\"\n      @mouseup=\"hasMouseDown = false\"\n    >\n      <div\n        class=\"va-slider__track\"\n        :style=\"trackStyles\"\n      />\n      <template v-if=\"pins\">\n        <div\n          v-for=\"(pin, i) in pinsCol\"\n          :key=\"i\"\n          class=\"va-slider__mark\"\n          :class=\"{ 'va-slider__mark--active': checkActivePin(pin) }\"\n          :style=\"getPinStyles(pin)\"\n        />\n      </template>\n      <template v-if=\"isRange\">\n        <div\n          ref=\"process\"\n          class=\"va-slider__track va-slider__track--selected\"\n          :class=\"{'va-slider__track--active': isFocused}\"\n          :style=\"processedStyles\"\n        />\n        <div\n          v-for=\"order in orders\"\n          :key=\"'dot' + order\"\n          :ref=\"'dot' + order\"\n          class=\"va-slider__handler\"\n          :class=\"dotClass[order]\"\n          :style=\"dottedStyles[order]\"\n          @focus=\"isFocused = true, currentSliderDotIndex = order\"\n          @blur=\"isFocused = false\"\n          :tabindex=\"disabled || readonly ? undefined : 0\"\n        >\n          <div\n            v-if=\"isActiveDot(order)\"\n            :style=\"{ backgroundColor: getColor($props.color) }\"\n            class=\"va-slider__handler__dot--focus\"\n          />\n          <div\n            v-if=\"trackLabelVisible\"\n            :style=\"labelStyles\"\n            class=\"va-slider__handler__dot--value\"\n          >\n            <slot\n              name=\"trackLabel\"\n              v-bind=\"{ value: val[order], order }\"\n            >\n              {{ getTrackLabel(val[order], order) }}\n            </slot>\n          </div>\n        </div>\n      </template>\n      <template v-else>\n        <div\n          ref=\"process\"\n          class=\"va-slider__track va-slider__track--selected\"\n          :class=\"{'va-slider__track--active': isFocused}\"\n          :style=\"processedStyles\"\n        />\n        <div\n          ref=\"dot\"\n          class=\"va-slider__handler\"\n          :class=\"dotClass\"\n          :style=\"dottedStyles\"\n          @focus=\"isFocused = true\"\n          @blur=\"isFocused = false\"\n          :tabindex=\"$props.disabled || $props.readonly ? undefined : 0\"\n        >\n          <div\n            v-if=\"isActiveDot(0)\"\n            class=\"va-slider__handler__dot--focus\"\n            :style=\"{ backgroundColor: getColor($props.color) }\"\n          />\n          <div\n            v-if=\"trackLabelVisible\"\n            :style=\"labelStyles\"\n            class=\"va-slider__handler__dot--value\"\n          >\n            <slot\n              name=\"trackLabel\"\n              v-bind=\"{ value: val }\"\n            >\n              {{ getTrackLabel(val) }}\n            </slot>\n          </div>\n        </div>\n      </template>\n    </div>\n    <span\n      v-if=\"vertical ? iconPrepend : iconAppend\"\n      class=\"va-input__label--inverse\"\n    >\n      <va-icon\n        :name=\"vertical ? iconPrepend : iconAppend\"\n        :color=\"getColor($props.color)\"\n        :size=\"16\"\n      />\n    </span>\n    <span\n      v-if=\"($slots.label || label) && invertLabel\"\n      :style=\"labelStyles\"\n      class=\"va-input__label va-input__label--inverse\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <div\n      class=\"va-slider__input-wrapper\"\n      v-if=\"vertical ? $slots.prepend : $slots.append\"\n    >\n      <slot :name=\"vertical ? 'prepend' : 'append'\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, ref, computed, onMounted, onBeforeUnmount, CSSProperties } from 'vue'\n\nimport { getHoverColor } from '../../services/color-config/color-functions'\nimport { validateSlider } from './validateSlider'\nimport VaIcon from '../va-icon'\nimport { useColors } from '../../composables/useColor'\n\nexport default defineComponent({\n  name: 'VaSlider',\n  components: { VaIcon },\n  emits: ['drag-start', 'drag-end', 'change', 'update:modelValue'],\n  props: {\n    range: { type: Boolean as PropType<boolean>, default: false },\n    modelValue: ({ type: [Number, Array] as PropType<number | number[]>, default: () => [] }),\n    trackLabel: ({ type: [Function, String] as PropType<string | ((val: any, order?: number) => string) | undefined> }),\n    color: { type: String as PropType<string>, default: 'primary' },\n    trackColor: { type: String as PropType<string>, default: '' },\n    labelColor: { type: String as PropType<string>, default: '' },\n    trackLabelVisible: { type: Boolean as PropType<boolean>, default: false },\n    min: { type: Number as PropType<number>, default: 0 },\n    max: { type: Number as PropType<number>, default: 100 },\n    step: { type: Number as PropType<number>, default: 1 },\n    label: { type: String as PropType<string>, default: '' },\n    invertLabel: { type: Boolean as PropType<boolean>, default: false },\n    disabled: { type: Boolean as PropType<boolean>, default: false },\n    readonly: { type: Boolean as PropType<boolean>, default: false },\n    pins: { type: Boolean as PropType<boolean>, default: false },\n    iconPrepend: { type: String as PropType<string>, default: '' },\n    iconAppend: { type: String as PropType<string>, default: '' },\n    vertical: { type: Boolean as PropType<boolean>, default: false },\n    showTrack: { type: Boolean as PropType<boolean>, default: true },\n  },\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n\n    const dot = ref<HTMLElement>()\n    const dot0 = ref<HTMLElement>()\n    const dot1 = ref<HTMLElement>()\n    const sliderContainer = ref<HTMLElement>()\n\n    const isFocused = ref(false)\n    const flag = ref(false)\n    const offset = ref(0)\n    const size = ref(0)\n    const currentValue = ref(props.modelValue)\n    const currentSliderDotIndex = ref(0)\n    const hasMouseDown = ref(false)\n\n    const orders = computed(() => props.vertical ? [1, 0] : [0, 1])\n\n    const pinPositionStyle = computed(() => props.vertical ? 'bottom' : 'left')\n    const trackSizeStyle = computed(() => props.vertical ? 'height' : 'width')\n\n    const moreToLess = computed(() => Array.isArray(val.value) && (val.value[1] - props.step) < val.value[0])\n\n    const lessToMore = computed(() => Array.isArray(val.value) && (val.value[0] + props.step) > val.value[1])\n\n    const sliderClass = computed(() => ({\n      'va-slider--active': isFocused.value,\n      'va-slider--disabled': props.disabled,\n      'va-slider--readonly': props.readonly,\n      'va-slider--horizontal': !props.vertical,\n      'va-slider--vertical': props.vertical,\n    }))\n\n    const dotClass = computed(() => {\n      if (props.range) {\n        return [\n          { 'va-slider__handler--inactive': !isFocused.value },\n          { 'va-slider__handler--inactive': !isFocused.value },\n        ]\n      }\n\n      return {\n        'va-slider__handler--on-focus': !props.range && (flag.value || isFocused),\n        'va-slider__handler--inactive': !isFocused.value,\n      }\n    })\n\n    const labelStyles = computed(() => ({\n      color: props.labelColor ? getColor(props.labelColor) : getColor(props.color),\n    }))\n\n    const trackStyles = computed(() => ({\n      backgroundColor: props.trackColor\n        ? getColor(props.trackColor)\n        : getHoverColor(getColor(props.color)),\n    }))\n\n    const processedStyles = computed(() => {\n      const validatedValue = limitValue(props.modelValue)\n\n      if (Array.isArray(validatedValue)) {\n        const val0 = ((validatedValue[0] - props.min) / (props.max - props.min)) * 100\n        const val1 = ((validatedValue[1] - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [pinPositionStyle.value]: `${val0}%`,\n          [trackSizeStyle.value]: `${val1 - val0}%`,\n          backgroundColor: getColor(props.color),\n          visibility: props.showTrack ? 'visible' : 'hidden',\n        } as CSSProperties\n      } else {\n        const val = ((validatedValue - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [trackSizeStyle.value]: `${val}%`,\n          backgroundColor: getColor(props.color),\n          visibility: props.showTrack ? 'visible' : 'hidden',\n        } as CSSProperties\n      }\n    })\n\n    const dottedStyles = computed(() => {\n      const validatedValue = limitValue(props.modelValue)\n\n      if (Array.isArray(validatedValue)) {\n        const val0 = ((validatedValue[0] - props.min) / (props.max - props.min)) * 100\n        const val1 = ((validatedValue[1] - props.min) / (props.max - props.min)) * 100\n\n        return [\n          {\n            [pinPositionStyle.value]: `${val0}%`,\n            backgroundColor: isActiveDot(0) ? getColor(props.color) : '#ffffff',\n            borderColor: getColor(props.color),\n          },\n          {\n            [pinPositionStyle.value]: `${val1}%`,\n            backgroundColor: isActiveDot(1) ? getColor(props.color) : '#ffffff',\n            borderColor: getColor(props.color),\n          },\n        ]\n      } else {\n        const val = ((validatedValue - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [pinPositionStyle.value]: `${val}%`,\n          backgroundColor: isActiveDot(0) ? getColor(props.color) : '#ffffff',\n          borderColor: getColor(props.color),\n        }\n      }\n    })\n\n    const val = computed({\n      get: () => props.modelValue,\n      set: (val) => {\n        if (!props.range) {\n          val = limitValue(val)\n        }\n\n        if (!flag.value) {\n          emit('change', val)\n        }\n\n        emit('update:modelValue', val)\n      },\n    })\n\n    const gap = computed(() => {\n      const total = (props.max - props.min) / props.step\n\n      return size.value / total\n    })\n\n    const multiple = computed(() => {\n      const decimals = `${props.step}`.split('.')[1]\n\n      return decimals ? Math.pow(10, decimals.length) : 1\n    })\n\n    const pinsCol = computed(() => ((props.max - props.min) / props.step) - 1)\n\n    const position = computed(() => {\n      return Array.isArray(props.modelValue)\n        ? [(props.modelValue[0] - props.min) / props.step * gap.value, (props.modelValue[1] - props.min) / props.step * gap.value]\n        : ((props.modelValue - props.min) / props.step * gap.value)\n    })\n\n    const limit = computed(() => [0, size.value])\n\n    const valueLimit = computed(() => [props.min, props.max])\n\n    const isActiveDot = (index: number) => {\n      if ((!isFocused.value && !flag.value) || props.disabled || props.readonly) {\n        return false\n      }\n\n      return props.range ? currentSliderDotIndex.value === index : currentSliderDotIndex.value === 0\n    }\n\n    const moveStart = (e: MouseEvent | TouchEvent, index = currentSliderDotIndex.value) => {\n      e.preventDefault() // prevent page scrolling\n\n      if (!index) {\n        if (!props.range) {\n          index = 0\n        } else if (Array.isArray(position.value)) {\n          const pos = getPos(e instanceof TouchEvent ? e.touches[0] : e)\n\n          index = pos > ((position.value[1] - position.value[0]) / 2 + position.value[0]) ? 1 : 0\n        }\n      }\n\n      if (Array.isArray(props.modelValue)) {\n        currentSliderDotIndex.value = index\n      }\n\n      Array.isArray(props.modelValue)\n        ? (index === 0 ? dot0 : dot1).value?.focus()\n        : dot.value?.focus()\n\n      flag.value = true\n\n      emit('drag-start')\n    }\n\n    const moving = (e: TouchEvent | MouseEvent) => {\n      if (!hasMouseDown.value || !flag.value || props.disabled || props.readonly) { return }\n\n      if ('touches' in e) {\n        setValueOnPos(getPos(e.touches[0]))\n      } else {\n        setValueOnPos(getPos(e))\n      }\n    }\n\n    const moveEnd = () => {\n      if (!props.disabled && !props.readonly) {\n        if (flag.value) {\n          emit('drag-end')\n\n          emit('change', /* props.range ? Array.from(props.modelValue) : */ props.modelValue)\n        } else {\n          return false\n        }\n\n        flag.value = false\n        hasMouseDown.value = false\n      }\n    }\n\n    const moveWithKeys = (event: KeyboardEvent) => {\n      // don't do anything if a dot isn't focused or if the slider's disabled or readonly\n      if (![dot0.value, dot1.value, dot.value].includes(document.activeElement as HTMLElement)) {\n        return\n      }\n      if (props.disabled || props.readonly) {\n        return\n      }\n\n      /*\n        where: where to move\n          0 - to left\n          1 - to right\n\n        which: which dot to move (only makes sense when isRange is true)\n          0 - left dot\n          1 - right dot\n        */\n      const moveDot = (isRange: boolean, where: number, which: number) => {\n        if (isRange && Array.isArray(val.value)) {\n          if (!props.pins) {\n            return val.value.splice(which, 1, val.value[which] + (where ? props.step : -props.step))\n          }\n\n          // how many value units one pin occupies\n          const onePinInterval = (props.max - props.min) / (pinsCol.value + 1)\n          // how many full pins are to the left of the dot now\n          const fullPinsNow = val.value[which] / onePinInterval | 0\n          // the value of the nearest pin\n          let nearestPinVal = fullPinsNow * onePinInterval\n\n          if (val.value[which] !== nearestPinVal) { // if the dot's not pinned already\n            nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\n            val.value.splice(which, 1, nearestPinVal)\n          } else {\n            val.value.splice(which, 1, val.value[which] + (where ? props.step : -props.step))\n          }\n        } else {\n          if (!props.pins && !Array.isArray(val.value)) {\n            val.value += where ? props.step : -props.step\n            return\n          }\n\n          // how many value units one pin occupies\n          const onePinInterval = (props.max - props.min) / (pinsCol.value + 1)\n          // how many full pins are to the left of the dot now\n          const fullPinsNow = !Array.isArray(val.value) ? val.value / onePinInterval | 0 : 0\n          // the value of the nearest pin\n          let nearestPinVal = fullPinsNow * onePinInterval\n\n          if (val.value !== nearestPinVal) { // if the dot's not pinned already\n            nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\n            val.value = nearestPinVal\n          } else {\n            val.value += where ? props.step : -props.step\n          }\n        }\n      }\n\n      // prevent page scroll\n      if (['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'].includes(event.key)) {\n        event.preventDefault()\n      }\n\n      const isActive = (el?: HTMLElement) => el === document.activeElement\n\n      if (props.range && Array.isArray(val.value)) {\n        const isVerticalDot0More = (event: KeyboardEvent) => props.vertical && isActive(dot0.value) && event.key === 'ArrowUp'\n        const isVerticalDot0Less = (event: KeyboardEvent) => props.vertical && isActive(dot0.value) && event.key === 'ArrowDown'\n        const isVerticalDot1More = (event: KeyboardEvent) => props.vertical && isActive(dot1.value) && event.key === 'ArrowUp'\n        const isVerticalDot1Less = (event: KeyboardEvent) => props.vertical && isActive(dot1.value) && event.key === 'ArrowDown'\n        const isHorizontalDot0Less = (event: KeyboardEvent) => !props.vertical && isActive(dot0.value) && event.key === 'ArrowLeft'\n        const isHorizontalDot0More = (event: KeyboardEvent) => !props.vertical && isActive(dot0.value) && event.key === 'ArrowRight'\n        const isHorizontalDot1Less = (event: KeyboardEvent) => !props.vertical && isActive(dot1.value) && event.key === 'ArrowLeft'\n        const isHorizontalDot1More = (event: KeyboardEvent) => !props.vertical && isActive(dot1.value) && event.key === 'ArrowRight'\n\n        switch (true) {\n          case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && moreToLess.value && val.value[0] !== props.min:\n            dot0.value?.focus()\n            moveDot(true, 0, 0)\n            break\n          case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && lessToMore.value && val.value[1] !== props.max:\n            dot1.value?.focus()\n            moveDot(true, 1, 1)\n            break\n          case (isVerticalDot0Less(event) || isHorizontalDot0Less(event)) && val.value[0] !== props.min:\n            moveDot(true, 0, 0)\n            break\n          case (isVerticalDot1More(event) || isHorizontalDot1More(event)) && val.value[1] !== props.max:\n            moveDot(true, 1, 1)\n            break\n          case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && val.value[1] !== props.min:\n            moveDot(true, 0, 1)\n            break\n          case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && val.value[0] !== props.max:\n            moveDot(true, 1, 0)\n            break\n          default:\n            break\n        }\n      } else {\n        if (props.vertical) {\n          if (event.key === 'ArrowDown') {\n            moveDot(false, 0, 0)\n          }\n          if (event.key === 'ArrowUp') {\n            moveDot(false, 1, 0)\n          }\n        } else {\n          if (event.key === 'ArrowLeft') {\n            moveDot(false, 0, 0)\n          }\n          if (event.key === 'ArrowRight') {\n            moveDot(false, 1, 0)\n          }\n        }\n      }\n    }\n\n    const checkActivePin = (pin: number) => {\n      if (Array.isArray(val.value)) {\n        return pin * props.step > val.value[0] && pin * props.step < val.value[1]\n      } else {\n        return pin * props.step < val.value\n      }\n    }\n\n    const pinPositionStep = computed(() => props.step / (props.max - props.min) * 100)\n    const getPinStyles = (pin: number) => ({\n      backgroundColor: checkActivePin(pin) ? getColor(props.color) : getHoverColor(getColor(props.color)),\n      [pinPositionStyle.value]: `${pin * pinPositionStep.value}%`,\n      transition: hasMouseDown.value ? 'none' : 'var(--va-slider-pin-transition)',\n    })\n\n    const getPos = (e: MouseEvent | Touch) => {\n      getStaticData()\n\n      return props.vertical ? offset.value - e.clientY : e.clientX - offset.value\n    }\n\n    const getStaticData = () => {\n      if (sliderContainer.value) {\n        size.value = sliderContainer.value[props.vertical ? 'offsetHeight' : 'offsetWidth']\n\n        offset.value = sliderContainer.value.getBoundingClientRect()[pinPositionStyle.value]\n      }\n    }\n\n    const getValueByIndex = (index: number) => {\n      return ((props.step * multiple.value) * index + (props.min * multiple.value)) / multiple.value\n    }\n\n    const getTrackLabel = (val: number | number[], order?: number) => {\n      if (!props.trackLabel) { return val }\n\n      if (typeof props.trackLabel === 'function') {\n        return props.trackLabel(val, order)\n      }\n    }\n\n    const setCurrentValue = (newValue: number) => {\n      const slider = currentSliderDotIndex.value\n\n      if (Array.isArray(val.value) && Array.isArray(currentValue.value) && Array.isArray(props.modelValue)) {\n        if (isDiff(currentValue.value[slider], newValue)) {\n          currentValue.value.splice(slider, 1, newValue)\n          if (slider === 0) {\n            val.value = [currentValue.value.splice(slider, 1, newValue)[0], props.modelValue[1]]\n            currentValue.value = [...val.value]\n          } else {\n            val.value = [props.modelValue[0], currentValue.value.splice(slider, 1, newValue)[0]]\n            currentValue.value = [...val.value]\n          }\n        }\n      } else {\n        if (newValue < props.min || newValue > props.max) {\n          return false\n        }\n        if (isDiff(currentValue.value, newValue)) {\n          currentValue.value = newValue\n          val.value = newValue\n        }\n      }\n    }\n\n    const setValueOnPos = (pixelPosition: number) => {\n      const range = limit.value\n      const valueRange = valueLimit.value\n\n      // set focus on current thumb\n      const dotToFocus = Array.isArray(props.modelValue) ? (currentSliderDotIndex.value ? dot1.value : dot0.value) : dot.value\n\n      dotToFocus?.focus()\n\n      if (pixelPosition >= range[0] && pixelPosition <= range[1]) {\n        if (currentSliderDotIndex.value) {\n          if (Array.isArray(position.value) && Array.isArray(val.value) && pixelPosition <= position.value[0]) {\n            val.value[1] = val.value[0]\n            currentSliderDotIndex.value = 0\n          }\n          const v = getValueByIndex(Math.round(pixelPosition / gap.value))\n          setCurrentValue(v)\n        } else {\n          if (Array.isArray(position.value) && Array.isArray(val.value) && pixelPosition >= position.value[1]) {\n            val.value[0] = val.value[1]\n            currentSliderDotIndex.value = 1\n          }\n          const v = getValueByIndex(Math.round(pixelPosition / gap.value))\n          setCurrentValue(v)\n        }\n      } else if (pixelPosition < range[0]) {\n        setCurrentValue(valueRange[0])\n      } else {\n        setCurrentValue(valueRange[1])\n      }\n    }\n\n    const limitValue = (val: number | number[]) => {\n      const inRange = (v: number) => {\n        if (v < props.min) {\n          return props.min\n        } else if (v > props.max) {\n          return props.max\n        }\n        return v\n      }\n\n      if (Array.isArray(val)) {\n        if (val[0] >= val[1] && currentSliderDotIndex.value === 0) {\n          const v = inRange(val[1])\n          return [v, v]\n        }\n        if (val[0] >= val[1] && currentSliderDotIndex.value === 1) {\n          const v = inRange(val[0])\n          return [v, v]\n        }\n        return val.map((v) => inRange(v))\n      } else {\n        return inRange(val)\n      }\n    }\n\n    const isDiff = (a: unknown, b: unknown) => JSON.stringify(a) !== JSON.stringify(b)\n\n    const clickOnContainer = (e: MouseEvent | TouchEvent) => {\n      if (props.disabled || props.readonly) {\n        return\n      }\n\n      const pos = ('touches' in e) ? getPos(e.touches[0]) : getPos(e)\n\n      if (Array.isArray(position.value)) {\n        currentSliderDotIndex.value = pos > ((position.value[1] - position.value[0]) / 2 + position.value[0]) ? 1 : 0\n      }\n\n      hasMouseDown.value = true\n      setValueOnPos(pos)\n      moveStart(e, currentSliderDotIndex.value)\n    }\n\n    const bindEvents = () => {\n      document.addEventListener('mousemove', moving)\n      document.addEventListener('touchmove', moving)\n      document.addEventListener('mouseup', moveEnd)\n      document.addEventListener('mouseleave', moveEnd)\n      document.addEventListener('touchcancel', moveEnd)\n      document.addEventListener('touchend', moveEnd)\n      document.addEventListener('keydown', moveWithKeys)\n    }\n\n    const unbindEvents = () => {\n      document.removeEventListener('mousemove', moving)\n      document.removeEventListener('touchmove', moving)\n      document.removeEventListener('mouseup', moveEnd)\n      document.removeEventListener('mouseleave', moveEnd)\n      document.removeEventListener('touchcancel', moveEnd)\n      document.removeEventListener('touchend', moveEnd)\n      document.removeEventListener('keydown', moveWithKeys)\n    }\n\n    onMounted(() => {\n      if (validateSlider(props.modelValue, props.step, props.min, props.max)) {\n        getStaticData()\n        bindEvents()\n      }\n    })\n\n    onBeforeUnmount(unbindEvents)\n\n    watch([\n      val,\n      () => props.step,\n      () => props.min,\n      () => props.max,\n    ], ([value, step, min, max]) => {\n      validateSlider(value, step, min, max)\n    })\n\n    watch(hasMouseDown, (hasMouseDown) => {\n      document.documentElement.style.cursor = hasMouseDown ? 'grabbing' : ''\n    })\n\n    return {\n      getColor,\n      dot,\n      dot0,\n      dot1,\n      orders,\n      sliderContainer,\n      val,\n      sliderClass,\n      dotClass,\n      labelStyles,\n      processedStyles,\n      getPinStyles,\n      dottedStyles,\n      clickOnContainer,\n      moveStart,\n      hasMouseDown,\n      trackStyles,\n      pinsCol,\n      checkActivePin,\n      isFocused,\n      isActiveDot,\n      getTrackLabel,\n      currentSliderDotIndex,\n      isRange: Array.isArray(props.modelValue),\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-slider {\n  display: var(--va-slider-display);\n  align-items: var(--va-slider-align-items);\n  font-family: var(--va-font-family);\n\n  &__input-wrapper {\n    position: var(--va-slider-input-wrapper-position);\n    display: var(--va-slider-input-wrapper-display);\n  }\n\n  &__container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    cursor: grab;\n  }\n\n  &__track {\n    position: var(--va-slider-track-position);\n    border-radius: var(--va-slider-track-border-radius);\n    transition: var(--va-slider-track-transition);\n    opacity: var(--va-slider-track-opacity);\n\n    &--active {\n      transition: 0s;\n    }\n  }\n\n  &__track--selected {\n    opacity: 1;\n  }\n\n  &__handler {\n    position: var(--va-slider-handler-position);\n    width: var(--va-slider-handler-width);\n    height: var(--va-slider-handler-height);\n    background: var(--va-slider-handler-background);\n    border: var(--va-slider-handler-border);\n    border-radius: var(--va-slider-handler-border-radius);\n    outline: var(--va-slider-handler-outline);\n    left: var(--va-slider-handler-left);\n    transition: var(--va-slider-handler-transition);\n\n    &__dot--focus {\n      transform: var(--va-slider-dot-transform);\n      display: var(--va-slider-dot-display);\n      width: var(--va-slider-dot-width);\n      height: var(--va-slider-dot-height);\n      position: var(--va-slider-dot-position);\n      border-radius: var(--va-slider-dot-border-radius);\n      opacity: var(--va-slider-dot-opacity);\n      pointer-events: var(--va-slider-dot-pointer-events);\n    }\n\n    &__dot--value {\n      transform: var(--va-slider-dot-value-transform);\n      user-select: var(--va-slider-dot-value-user-select);\n      font-size: var(--va-slider-dot-value-font-size);\n      letter-spacing: var(--va-slider-dot-value-letter-spacing);\n      line-height: var(--va-slider-dot-value-line-height);\n      font-weight: var(--va-slider-dot-value-font-weight);\n      text-transform: var(--va-slider-dot-value-text-transform);\n      white-space: var(--va-slider-dot-value-white-space);\n    }\n  }\n\n  .va-input__label {\n    user-select: var(--va-slider-input-label-user-select);\n    font-size: var(--va-slider-input-label-font-size);\n    letter-spacing: var(--va-slider-input-label-letter-spacing);\n    line-height: var(--va-slider-input-label-line-height);\n    font-weight: var(--va-slider-input-label-font-weight);\n    text-transform: var(--va-slider-input-label-text-transform);\n  }\n\n  .va-input__label--inverse {\n    user-select: var(--va-slider-input-label-inverse-user-select);\n    font-size: var(--va-slider-input-label-inverse-font-size);\n    letter-spacing: var(--va-slider-input-label-inverse-letter-spacing);\n    line-height: var(--va-slider-input-label-inverse-line-height);\n    font-weight: var(--va-slider-input-label-inverse-font-weight);\n    text-transform: var(--va-slider-input-label-inverse-text-transform);\n  }\n\n  &--active {\n    .va-slider__container {\n      cursor: grabbing;\n    }\n  }\n\n  &--disabled {\n    @include va-disabled;\n\n    .va-slider__container {\n      cursor: default;\n    }\n  }\n\n  &--readonly {\n    .va-slider__container {\n      cursor: default;\n    }\n  }\n}\n\n.va-slider--horizontal {\n  .va-slider__input-wrapper {\n    flex-basis: var(--va-slider-horizontal-input-wrapper-flex-basis);\n    flex-grow: var(--va-slider-horizontal-input-wrapper-flex-grow);\n    margin-right: var(--va-slider-horizontal-input-wrapper-margin-right);\n\n    &:last-of-type {\n      margin-left: 1rem;\n    }\n  }\n\n  .va-slider {\n    &__container {\n      width: 100%;\n      height: 1.5rem;\n    }\n\n    &__track {\n      height: var(--va-slider-horizontal-track-height);\n      width: var(--va-slider-horizontal-track-width);\n    }\n\n    &__mark {\n      position: absolute;\n      width: 0.125rem;\n      height: 0.75rem;\n    }\n\n    &__handler {\n      transform: var(--va-slider-horizontal-handler-transform);\n\n      &--inactive {\n        transition: left 0.5s ease-out;\n      }\n\n      &__dot--value {\n        position: var(--va-slider-horizontal-dot-value-position);\n        top: var(--va-slider-horizontal-dot-value-top);\n        left: var(--va-slider-horizontal-dot-value-left);\n      }\n    }\n  }\n\n  .va-input__label {\n    margin-right: 1rem;\n  }\n\n  .va-input__label--inverse {\n    margin-left: 1rem;\n  }\n}\n\n.va-slider--vertical {\n  height: var(--va-slider-vertical-height);\n  padding: var(--va-slider-vertical-padding);\n  flex-direction: var(--va-slider-vertical-flex-direction);\n  align-items: var(--va-slider-vertical-align-items);\n\n  .va-input__label {\n    margin-bottom: var(--va-slider-vertical-label-margin-bottom);\n  }\n\n  .va-input__label--inverse {\n    left: var(--va-slider-vertical-label-inverse-left);\n    margin-top: var(--va-slider-vertical-label-inverse-margin-top);\n  }\n\n  .va-slider {\n    &__input-wrapper {\n      flex-basis: var(--va-slider-vertical-input-wrapper-flex-basis);\n      flex-grow: var(--va-slider-vertical-input-wrapper-flex-grow);\n      max-width: var(--va-slider-vertical-input-wrapper-max-width);\n      min-width: var(--va-slider-vertical-input-wrapper-min-width);\n      position: var(--va-slider-vertical-input-wrapper-position);\n      display: var(--va-slider-vertical-input-wrapper-display);\n\n      &:last-of-type {\n        margin-top: 1rem;\n      }\n    }\n\n    &__container {\n      height: 100%;\n      width: 0.5rem;\n    }\n\n    &__track {\n      height: var(--va-slider-vertical-track-height);\n      width: var(--va-slider-vertical-track-width);\n      bottom: var(--va-slider-vertical-track-bottom);\n    }\n\n    &__mark {\n      position: absolute;\n      width: 0.75rem;\n      height: 0.125rem;\n      left: -2px;\n    }\n\n    &__handler {\n      transform: var(--va-slider-vertical-handler-transform);\n\n      &--inactive {\n        transition: bottom 0.5s ease-out;\n      }\n\n      &__dot--value {\n        position: var(--va-slider-vertical-dot-value-position);\n        top: var(--va-slider-vertical-dot-value-top);\n        left: var(--va-slider-vertical-dot-value-left);\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-slider\"\n    :class=\"sliderClass\"\n  >\n    <div\n      class=\"va-slider__input-wrapper\"\n      v-if=\"vertical ? $slots.append : $slots.prepend\"\n    >\n      <slot :name=\"vertical ? 'append' : 'prepend'\" />\n    </div>\n    <span\n      v-if=\"($slots.label || label) && !invertLabel\"\n      :style=\"labelStyles\"\n      class=\"va-input__label\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <span\n      v-if=\"vertical ? iconAppend : iconPrepend\"\n      class=\"va-input__label\"\n    >\n      <va-icon\n        :name=\"vertical ? iconAppend : iconPrepend\"\n        :color=\"getColor($props.color)\"\n        :size=\"16\"\n      />\n    </span>\n    <div\n      class=\"va-slider__container\"\n      ref=\"sliderContainer\"\n      @mousedown=\"clickOnContainer\"\n      @touchstart=\"clickOnContainer\"\n      @mouseup=\"hasMouseDown = false\"\n    >\n      <div\n        class=\"va-slider__track\"\n        :style=\"trackStyles\"\n      />\n      <template v-if=\"pins\">\n        <div\n          v-for=\"(pin, i) in pinsCol\"\n          :key=\"i\"\n          class=\"va-slider__mark\"\n          :class=\"{ 'va-slider__mark--active': checkActivePin(pin) }\"\n          :style=\"getPinStyles(pin)\"\n        />\n      </template>\n      <template v-if=\"isRange\">\n        <div\n          ref=\"process\"\n          class=\"va-slider__track va-slider__track--selected\"\n          :class=\"{'va-slider__track--active': isFocused}\"\n          :style=\"processedStyles\"\n        />\n        <div\n          v-for=\"order in orders\"\n          :key=\"'dot' + order\"\n          :ref=\"'dot' + order\"\n          class=\"va-slider__handler\"\n          :class=\"dotClass[order]\"\n          :style=\"dottedStyles[order]\"\n          @focus=\"isFocused = true, currentSliderDotIndex = order\"\n          @blur=\"isFocused = false\"\n          :tabindex=\"disabled || readonly ? undefined : 0\"\n        >\n          <div\n            v-if=\"isActiveDot(order)\"\n            :style=\"{ backgroundColor: getColor($props.color) }\"\n            class=\"va-slider__handler__dot--focus\"\n          />\n          <div\n            v-if=\"trackLabelVisible\"\n            :style=\"labelStyles\"\n            class=\"va-slider__handler__dot--value\"\n          >\n            <slot\n              name=\"trackLabel\"\n              v-bind=\"{ value: val[order], order }\"\n            >\n              {{ getTrackLabel(val[order], order) }}\n            </slot>\n          </div>\n        </div>\n      </template>\n      <template v-else>\n        <div\n          ref=\"process\"\n          class=\"va-slider__track va-slider__track--selected\"\n          :class=\"{'va-slider__track--active': isFocused}\"\n          :style=\"processedStyles\"\n        />\n        <div\n          ref=\"dot\"\n          class=\"va-slider__handler\"\n          :class=\"dotClass\"\n          :style=\"dottedStyles\"\n          @focus=\"isFocused = true\"\n          @blur=\"isFocused = false\"\n          :tabindex=\"$props.disabled || $props.readonly ? undefined : 0\"\n        >\n          <div\n            v-if=\"isActiveDot(0)\"\n            class=\"va-slider__handler__dot--focus\"\n            :style=\"{ backgroundColor: getColor($props.color) }\"\n          />\n          <div\n            v-if=\"trackLabelVisible\"\n            :style=\"labelStyles\"\n            class=\"va-slider__handler__dot--value\"\n          >\n            <slot\n              name=\"trackLabel\"\n              v-bind=\"{ value: val }\"\n            >\n              {{ getTrackLabel(val) }}\n            </slot>\n          </div>\n        </div>\n      </template>\n    </div>\n    <span\n      v-if=\"vertical ? iconPrepend : iconAppend\"\n      class=\"va-input__label--inverse\"\n    >\n      <va-icon\n        :name=\"vertical ? iconPrepend : iconAppend\"\n        :color=\"getColor($props.color)\"\n        :size=\"16\"\n      />\n    </span>\n    <span\n      v-if=\"($slots.label || label) && invertLabel\"\n      :style=\"labelStyles\"\n      class=\"va-input__label va-input__label--inverse\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <div\n      class=\"va-slider__input-wrapper\"\n      v-if=\"vertical ? $slots.prepend : $slots.append\"\n    >\n      <slot :name=\"vertical ? 'prepend' : 'append'\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, ref, computed, onMounted, onBeforeUnmount, CSSProperties } from 'vue'\n\nimport { getHoverColor } from '../../services/color-config/color-functions'\nimport { validateSlider } from './validateSlider'\nimport VaIcon from '../va-icon'\nimport { useColors } from '../../composables/useColor'\n\nexport default defineComponent({\n  name: 'VaSlider',\n  components: { VaIcon },\n  emits: ['drag-start', 'drag-end', 'change', 'update:modelValue'],\n  props: {\n    range: { type: Boolean as PropType<boolean>, default: false },\n    modelValue: ({ type: [Number, Array] as PropType<number | number[]>, default: () => [] }),\n    trackLabel: ({ type: [Function, String] as PropType<string | ((val: any, order?: number) => string) | undefined> }),\n    color: { type: String as PropType<string>, default: 'primary' },\n    trackColor: { type: String as PropType<string>, default: '' },\n    labelColor: { type: String as PropType<string>, default: '' },\n    trackLabelVisible: { type: Boolean as PropType<boolean>, default: false },\n    min: { type: Number as PropType<number>, default: 0 },\n    max: { type: Number as PropType<number>, default: 100 },\n    step: { type: Number as PropType<number>, default: 1 },\n    label: { type: String as PropType<string>, default: '' },\n    invertLabel: { type: Boolean as PropType<boolean>, default: false },\n    disabled: { type: Boolean as PropType<boolean>, default: false },\n    readonly: { type: Boolean as PropType<boolean>, default: false },\n    pins: { type: Boolean as PropType<boolean>, default: false },\n    iconPrepend: { type: String as PropType<string>, default: '' },\n    iconAppend: { type: String as PropType<string>, default: '' },\n    vertical: { type: Boolean as PropType<boolean>, default: false },\n    showTrack: { type: Boolean as PropType<boolean>, default: true },\n  },\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n\n    const dot = ref<HTMLElement>()\n    const dot0 = ref<HTMLElement>()\n    const dot1 = ref<HTMLElement>()\n    const sliderContainer = ref<HTMLElement>()\n\n    const isFocused = ref(false)\n    const flag = ref(false)\n    const offset = ref(0)\n    const size = ref(0)\n    const currentValue = ref(props.modelValue)\n    const currentSliderDotIndex = ref(0)\n    const hasMouseDown = ref(false)\n\n    const orders = computed(() => props.vertical ? [1, 0] : [0, 1])\n\n    const pinPositionStyle = computed(() => props.vertical ? 'bottom' : 'left')\n    const trackSizeStyle = computed(() => props.vertical ? 'height' : 'width')\n\n    const moreToLess = computed(() => Array.isArray(val.value) && (val.value[1] - props.step) < val.value[0])\n\n    const lessToMore = computed(() => Array.isArray(val.value) && (val.value[0] + props.step) > val.value[1])\n\n    const sliderClass = computed(() => ({\n      'va-slider--active': isFocused.value,\n      'va-slider--disabled': props.disabled,\n      'va-slider--readonly': props.readonly,\n      'va-slider--horizontal': !props.vertical,\n      'va-slider--vertical': props.vertical,\n    }))\n\n    const dotClass = computed(() => {\n      if (props.range) {\n        return [\n          { 'va-slider__handler--inactive': !isFocused.value },\n          { 'va-slider__handler--inactive': !isFocused.value },\n        ]\n      }\n\n      return {\n        'va-slider__handler--on-focus': !props.range && (flag.value || isFocused),\n        'va-slider__handler--inactive': !isFocused.value,\n      }\n    })\n\n    const labelStyles = computed(() => ({\n      color: props.labelColor ? getColor(props.labelColor) : getColor(props.color),\n    }))\n\n    const trackStyles = computed(() => ({\n      backgroundColor: props.trackColor\n        ? getColor(props.trackColor)\n        : getHoverColor(getColor(props.color)),\n    }))\n\n    const processedStyles = computed(() => {\n      const validatedValue = limitValue(props.modelValue)\n\n      if (Array.isArray(validatedValue)) {\n        const val0 = ((validatedValue[0] - props.min) / (props.max - props.min)) * 100\n        const val1 = ((validatedValue[1] - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [pinPositionStyle.value]: `${val0}%`,\n          [trackSizeStyle.value]: `${val1 - val0}%`,\n          backgroundColor: getColor(props.color),\n          visibility: props.showTrack ? 'visible' : 'hidden',\n        } as CSSProperties\n      } else {\n        const val = ((validatedValue - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [trackSizeStyle.value]: `${val}%`,\n          backgroundColor: getColor(props.color),\n          visibility: props.showTrack ? 'visible' : 'hidden',\n        } as CSSProperties\n      }\n    })\n\n    const dottedStyles = computed(() => {\n      const validatedValue = limitValue(props.modelValue)\n\n      if (Array.isArray(validatedValue)) {\n        const val0 = ((validatedValue[0] - props.min) / (props.max - props.min)) * 100\n        const val1 = ((validatedValue[1] - props.min) / (props.max - props.min)) * 100\n\n        return [\n          {\n            [pinPositionStyle.value]: `${val0}%`,\n            backgroundColor: isActiveDot(0) ? getColor(props.color) : '#ffffff',\n            borderColor: getColor(props.color),\n          },\n          {\n            [pinPositionStyle.value]: `${val1}%`,\n            backgroundColor: isActiveDot(1) ? getColor(props.color) : '#ffffff',\n            borderColor: getColor(props.color),\n          },\n        ]\n      } else {\n        const val = ((validatedValue - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [pinPositionStyle.value]: `${val}%`,\n          backgroundColor: isActiveDot(0) ? getColor(props.color) : '#ffffff',\n          borderColor: getColor(props.color),\n        }\n      }\n    })\n\n    const val = computed({\n      get: () => props.modelValue,\n      set: (val) => {\n        if (!props.range) {\n          val = limitValue(val)\n        }\n\n        if (!flag.value) {\n          emit('change', val)\n        }\n\n        emit('update:modelValue', val)\n      },\n    })\n\n    const gap = computed(() => {\n      const total = (props.max - props.min) / props.step\n\n      return size.value / total\n    })\n\n    const multiple = computed(() => {\n      const decimals = `${props.step}`.split('.')[1]\n\n      return decimals ? Math.pow(10, decimals.length) : 1\n    })\n\n    const pinsCol = computed(() => ((props.max - props.min) / props.step) - 1)\n\n    const position = computed(() => {\n      return Array.isArray(props.modelValue)\n        ? [(props.modelValue[0] - props.min) / props.step * gap.value, (props.modelValue[1] - props.min) / props.step * gap.value]\n        : ((props.modelValue - props.min) / props.step * gap.value)\n    })\n\n    const limit = computed(() => [0, size.value])\n\n    const valueLimit = computed(() => [props.min, props.max])\n\n    const isActiveDot = (index: number) => {\n      if ((!isFocused.value && !flag.value) || props.disabled || props.readonly) {\n        return false\n      }\n\n      return props.range ? currentSliderDotIndex.value === index : currentSliderDotIndex.value === 0\n    }\n\n    const moveStart = (e: MouseEvent | TouchEvent, index = currentSliderDotIndex.value) => {\n      e.preventDefault() // prevent page scrolling\n\n      if (!index) {\n        if (!props.range) {\n          index = 0\n        } else if (Array.isArray(position.value)) {\n          const pos = getPos(e instanceof TouchEvent ? e.touches[0] : e)\n\n          index = pos > ((position.value[1] - position.value[0]) / 2 + position.value[0]) ? 1 : 0\n        }\n      }\n\n      if (Array.isArray(props.modelValue)) {\n        currentSliderDotIndex.value = index\n      }\n\n      Array.isArray(props.modelValue)\n        ? (index === 0 ? dot0 : dot1).value?.focus()\n        : dot.value?.focus()\n\n      flag.value = true\n\n      emit('drag-start')\n    }\n\n    const moving = (e: TouchEvent | MouseEvent) => {\n      if (!hasMouseDown.value || !flag.value || props.disabled || props.readonly) { return }\n\n      if ('touches' in e) {\n        setValueOnPos(getPos(e.touches[0]))\n      } else {\n        setValueOnPos(getPos(e))\n      }\n    }\n\n    const moveEnd = () => {\n      if (!props.disabled && !props.readonly) {\n        if (flag.value) {\n          emit('drag-end')\n\n          emit('change', /* props.range ? Array.from(props.modelValue) : */ props.modelValue)\n        } else {\n          return false\n        }\n\n        flag.value = false\n        hasMouseDown.value = false\n      }\n    }\n\n    const moveWithKeys = (event: KeyboardEvent) => {\n      // don't do anything if a dot isn't focused or if the slider's disabled or readonly\n      if (![dot0.value, dot1.value, dot.value].includes(document.activeElement as HTMLElement)) {\n        return\n      }\n      if (props.disabled || props.readonly) {\n        return\n      }\n\n      /*\n        where: where to move\n          0 - to left\n          1 - to right\n\n        which: which dot to move (only makes sense when isRange is true)\n          0 - left dot\n          1 - right dot\n        */\n      const moveDot = (isRange: boolean, where: number, which: number) => {\n        if (isRange && Array.isArray(val.value)) {\n          if (!props.pins) {\n            return val.value.splice(which, 1, val.value[which] + (where ? props.step : -props.step))\n          }\n\n          // how many value units one pin occupies\n          const onePinInterval = (props.max - props.min) / (pinsCol.value + 1)\n          // how many full pins are to the left of the dot now\n          const fullPinsNow = val.value[which] / onePinInterval | 0\n          // the value of the nearest pin\n          let nearestPinVal = fullPinsNow * onePinInterval\n\n          if (val.value[which] !== nearestPinVal) { // if the dot's not pinned already\n            nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\n            val.value.splice(which, 1, nearestPinVal)\n          } else {\n            val.value.splice(which, 1, val.value[which] + (where ? props.step : -props.step))\n          }\n        } else {\n          if (!props.pins && !Array.isArray(val.value)) {\n            val.value += where ? props.step : -props.step\n            return\n          }\n\n          // how many value units one pin occupies\n          const onePinInterval = (props.max - props.min) / (pinsCol.value + 1)\n          // how many full pins are to the left of the dot now\n          const fullPinsNow = !Array.isArray(val.value) ? val.value / onePinInterval | 0 : 0\n          // the value of the nearest pin\n          let nearestPinVal = fullPinsNow * onePinInterval\n\n          if (val.value !== nearestPinVal) { // if the dot's not pinned already\n            nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\n            val.value = nearestPinVal\n          } else {\n            val.value += where ? props.step : -props.step\n          }\n        }\n      }\n\n      // prevent page scroll\n      if (['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'].includes(event.key)) {\n        event.preventDefault()\n      }\n\n      const isActive = (el?: HTMLElement) => el === document.activeElement\n\n      if (props.range && Array.isArray(val.value)) {\n        const isVerticalDot0More = (event: KeyboardEvent) => props.vertical && isActive(dot0.value) && event.key === 'ArrowUp'\n        const isVerticalDot0Less = (event: KeyboardEvent) => props.vertical && isActive(dot0.value) && event.key === 'ArrowDown'\n        const isVerticalDot1More = (event: KeyboardEvent) => props.vertical && isActive(dot1.value) && event.key === 'ArrowUp'\n        const isVerticalDot1Less = (event: KeyboardEvent) => props.vertical && isActive(dot1.value) && event.key === 'ArrowDown'\n        const isHorizontalDot0Less = (event: KeyboardEvent) => !props.vertical && isActive(dot0.value) && event.key === 'ArrowLeft'\n        const isHorizontalDot0More = (event: KeyboardEvent) => !props.vertical && isActive(dot0.value) && event.key === 'ArrowRight'\n        const isHorizontalDot1Less = (event: KeyboardEvent) => !props.vertical && isActive(dot1.value) && event.key === 'ArrowLeft'\n        const isHorizontalDot1More = (event: KeyboardEvent) => !props.vertical && isActive(dot1.value) && event.key === 'ArrowRight'\n\n        switch (true) {\n          case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && moreToLess.value && val.value[0] !== props.min:\n            dot0.value?.focus()\n            moveDot(true, 0, 0)\n            break\n          case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && lessToMore.value && val.value[1] !== props.max:\n            dot1.value?.focus()\n            moveDot(true, 1, 1)\n            break\n          case (isVerticalDot0Less(event) || isHorizontalDot0Less(event)) && val.value[0] !== props.min:\n            moveDot(true, 0, 0)\n            break\n          case (isVerticalDot1More(event) || isHorizontalDot1More(event)) && val.value[1] !== props.max:\n            moveDot(true, 1, 1)\n            break\n          case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && val.value[1] !== props.min:\n            moveDot(true, 0, 1)\n            break\n          case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && val.value[0] !== props.max:\n            moveDot(true, 1, 0)\n            break\n          default:\n            break\n        }\n      } else {\n        if (props.vertical) {\n          if (event.key === 'ArrowDown') {\n            moveDot(false, 0, 0)\n          }\n          if (event.key === 'ArrowUp') {\n            moveDot(false, 1, 0)\n          }\n        } else {\n          if (event.key === 'ArrowLeft') {\n            moveDot(false, 0, 0)\n          }\n          if (event.key === 'ArrowRight') {\n            moveDot(false, 1, 0)\n          }\n        }\n      }\n    }\n\n    const checkActivePin = (pin: number) => {\n      if (Array.isArray(val.value)) {\n        return pin * props.step > val.value[0] && pin * props.step < val.value[1]\n      } else {\n        return pin * props.step < val.value\n      }\n    }\n\n    const pinPositionStep = computed(() => props.step / (props.max - props.min) * 100)\n    const getPinStyles = (pin: number) => ({\n      backgroundColor: checkActivePin(pin) ? getColor(props.color) : getHoverColor(getColor(props.color)),\n      [pinPositionStyle.value]: `${pin * pinPositionStep.value}%`,\n      transition: hasMouseDown.value ? 'none' : 'var(--va-slider-pin-transition)',\n    })\n\n    const getPos = (e: MouseEvent | Touch) => {\n      getStaticData()\n\n      return props.vertical ? offset.value - e.clientY : e.clientX - offset.value\n    }\n\n    const getStaticData = () => {\n      if (sliderContainer.value) {\n        size.value = sliderContainer.value[props.vertical ? 'offsetHeight' : 'offsetWidth']\n\n        offset.value = sliderContainer.value.getBoundingClientRect()[pinPositionStyle.value]\n      }\n    }\n\n    const getValueByIndex = (index: number) => {\n      return ((props.step * multiple.value) * index + (props.min * multiple.value)) / multiple.value\n    }\n\n    const getTrackLabel = (val: number | number[], order?: number) => {\n      if (!props.trackLabel) { return val }\n\n      if (typeof props.trackLabel === 'function') {\n        return props.trackLabel(val, order)\n      }\n    }\n\n    const setCurrentValue = (newValue: number) => {\n      const slider = currentSliderDotIndex.value\n\n      if (Array.isArray(val.value) && Array.isArray(currentValue.value) && Array.isArray(props.modelValue)) {\n        if (isDiff(currentValue.value[slider], newValue)) {\n          currentValue.value.splice(slider, 1, newValue)\n          if (slider === 0) {\n            val.value = [currentValue.value.splice(slider, 1, newValue)[0], props.modelValue[1]]\n            currentValue.value = [...val.value]\n          } else {\n            val.value = [props.modelValue[0], currentValue.value.splice(slider, 1, newValue)[0]]\n            currentValue.value = [...val.value]\n          }\n        }\n      } else {\n        if (newValue < props.min || newValue > props.max) {\n          return false\n        }\n        if (isDiff(currentValue.value, newValue)) {\n          currentValue.value = newValue\n          val.value = newValue\n        }\n      }\n    }\n\n    const setValueOnPos = (pixelPosition: number) => {\n      const range = limit.value\n      const valueRange = valueLimit.value\n\n      // set focus on current thumb\n      const dotToFocus = Array.isArray(props.modelValue) ? (currentSliderDotIndex.value ? dot1.value : dot0.value) : dot.value\n\n      dotToFocus?.focus()\n\n      if (pixelPosition >= range[0] && pixelPosition <= range[1]) {\n        if (currentSliderDotIndex.value) {\n          if (Array.isArray(position.value) && Array.isArray(val.value) && pixelPosition <= position.value[0]) {\n            val.value[1] = val.value[0]\n            currentSliderDotIndex.value = 0\n          }\n          const v = getValueByIndex(Math.round(pixelPosition / gap.value))\n          setCurrentValue(v)\n        } else {\n          if (Array.isArray(position.value) && Array.isArray(val.value) && pixelPosition >= position.value[1]) {\n            val.value[0] = val.value[1]\n            currentSliderDotIndex.value = 1\n          }\n          const v = getValueByIndex(Math.round(pixelPosition / gap.value))\n          setCurrentValue(v)\n        }\n      } else if (pixelPosition < range[0]) {\n        setCurrentValue(valueRange[0])\n      } else {\n        setCurrentValue(valueRange[1])\n      }\n    }\n\n    const limitValue = (val: number | number[]) => {\n      const inRange = (v: number) => {\n        if (v < props.min) {\n          return props.min\n        } else if (v > props.max) {\n          return props.max\n        }\n        return v\n      }\n\n      if (Array.isArray(val)) {\n        if (val[0] >= val[1] && currentSliderDotIndex.value === 0) {\n          const v = inRange(val[1])\n          return [v, v]\n        }\n        if (val[0] >= val[1] && currentSliderDotIndex.value === 1) {\n          const v = inRange(val[0])\n          return [v, v]\n        }\n        return val.map((v) => inRange(v))\n      } else {\n        return inRange(val)\n      }\n    }\n\n    const isDiff = (a: unknown, b: unknown) => JSON.stringify(a) !== JSON.stringify(b)\n\n    const clickOnContainer = (e: MouseEvent | TouchEvent) => {\n      if (props.disabled || props.readonly) {\n        return\n      }\n\n      const pos = ('touches' in e) ? getPos(e.touches[0]) : getPos(e)\n\n      if (Array.isArray(position.value)) {\n        currentSliderDotIndex.value = pos > ((position.value[1] - position.value[0]) / 2 + position.value[0]) ? 1 : 0\n      }\n\n      hasMouseDown.value = true\n      setValueOnPos(pos)\n      moveStart(e, currentSliderDotIndex.value)\n    }\n\n    const bindEvents = () => {\n      document.addEventListener('mousemove', moving)\n      document.addEventListener('touchmove', moving)\n      document.addEventListener('mouseup', moveEnd)\n      document.addEventListener('mouseleave', moveEnd)\n      document.addEventListener('touchcancel', moveEnd)\n      document.addEventListener('touchend', moveEnd)\n      document.addEventListener('keydown', moveWithKeys)\n    }\n\n    const unbindEvents = () => {\n      document.removeEventListener('mousemove', moving)\n      document.removeEventListener('touchmove', moving)\n      document.removeEventListener('mouseup', moveEnd)\n      document.removeEventListener('mouseleave', moveEnd)\n      document.removeEventListener('touchcancel', moveEnd)\n      document.removeEventListener('touchend', moveEnd)\n      document.removeEventListener('keydown', moveWithKeys)\n    }\n\n    onMounted(() => {\n      if (validateSlider(props.modelValue, props.step, props.min, props.max)) {\n        getStaticData()\n        bindEvents()\n      }\n    })\n\n    onBeforeUnmount(unbindEvents)\n\n    watch([\n      val,\n      () => props.step,\n      () => props.min,\n      () => props.max,\n    ], ([value, step, min, max]) => {\n      validateSlider(value, step, min, max)\n    })\n\n    watch(hasMouseDown, (hasMouseDown) => {\n      document.documentElement.style.cursor = hasMouseDown ? 'grabbing' : ''\n    })\n\n    return {\n      getColor,\n      dot,\n      dot0,\n      dot1,\n      orders,\n      sliderContainer,\n      val,\n      sliderClass,\n      dotClass,\n      labelStyles,\n      processedStyles,\n      getPinStyles,\n      dottedStyles,\n      clickOnContainer,\n      moveStart,\n      hasMouseDown,\n      trackStyles,\n      pinsCol,\n      checkActivePin,\n      isFocused,\n      isActiveDot,\n      getTrackLabel,\n      currentSliderDotIndex,\n      isRange: Array.isArray(props.modelValue),\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-slider {\n  display: var(--va-slider-display);\n  align-items: var(--va-slider-align-items);\n  font-family: var(--va-font-family);\n\n  &__input-wrapper {\n    position: var(--va-slider-input-wrapper-position);\n    display: var(--va-slider-input-wrapper-display);\n  }\n\n  &__container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    cursor: grab;\n  }\n\n  &__track {\n    position: var(--va-slider-track-position);\n    border-radius: var(--va-slider-track-border-radius);\n    transition: var(--va-slider-track-transition);\n    opacity: var(--va-slider-track-opacity);\n\n    &--active {\n      transition: 0s;\n    }\n  }\n\n  &__track--selected {\n    opacity: 1;\n  }\n\n  &__handler {\n    position: var(--va-slider-handler-position);\n    width: var(--va-slider-handler-width);\n    height: var(--va-slider-handler-height);\n    background: var(--va-slider-handler-background);\n    border: var(--va-slider-handler-border);\n    border-radius: var(--va-slider-handler-border-radius);\n    outline: var(--va-slider-handler-outline);\n    left: var(--va-slider-handler-left);\n    transition: var(--va-slider-handler-transition);\n\n    &__dot--focus {\n      transform: var(--va-slider-dot-transform);\n      display: var(--va-slider-dot-display);\n      width: var(--va-slider-dot-width);\n      height: var(--va-slider-dot-height);\n      position: var(--va-slider-dot-position);\n      border-radius: var(--va-slider-dot-border-radius);\n      opacity: var(--va-slider-dot-opacity);\n      pointer-events: var(--va-slider-dot-pointer-events);\n    }\n\n    &__dot--value {\n      transform: var(--va-slider-dot-value-transform);\n      user-select: var(--va-slider-dot-value-user-select);\n      font-size: var(--va-slider-dot-value-font-size);\n      letter-spacing: var(--va-slider-dot-value-letter-spacing);\n      line-height: var(--va-slider-dot-value-line-height);\n      font-weight: var(--va-slider-dot-value-font-weight);\n      text-transform: var(--va-slider-dot-value-text-transform);\n      white-space: var(--va-slider-dot-value-white-space);\n    }\n  }\n\n  .va-input__label {\n    user-select: var(--va-slider-input-label-user-select);\n    font-size: var(--va-slider-input-label-font-size);\n    letter-spacing: var(--va-slider-input-label-letter-spacing);\n    line-height: var(--va-slider-input-label-line-height);\n    font-weight: var(--va-slider-input-label-font-weight);\n    text-transform: var(--va-slider-input-label-text-transform);\n  }\n\n  .va-input__label--inverse {\n    user-select: var(--va-slider-input-label-inverse-user-select);\n    font-size: var(--va-slider-input-label-inverse-font-size);\n    letter-spacing: var(--va-slider-input-label-inverse-letter-spacing);\n    line-height: var(--va-slider-input-label-inverse-line-height);\n    font-weight: var(--va-slider-input-label-inverse-font-weight);\n    text-transform: var(--va-slider-input-label-inverse-text-transform);\n  }\n\n  &--active {\n    .va-slider__container {\n      cursor: grabbing;\n    }\n  }\n\n  &--disabled {\n    @include va-disabled;\n\n    .va-slider__container {\n      cursor: default;\n    }\n  }\n\n  &--readonly {\n    .va-slider__container {\n      cursor: default;\n    }\n  }\n}\n\n.va-slider--horizontal {\n  .va-slider__input-wrapper {\n    flex-basis: var(--va-slider-horizontal-input-wrapper-flex-basis);\n    flex-grow: var(--va-slider-horizontal-input-wrapper-flex-grow);\n    margin-right: var(--va-slider-horizontal-input-wrapper-margin-right);\n\n    &:last-of-type {\n      margin-left: 1rem;\n    }\n  }\n\n  .va-slider {\n    &__container {\n      width: 100%;\n      height: 1.5rem;\n    }\n\n    &__track {\n      height: var(--va-slider-horizontal-track-height);\n      width: var(--va-slider-horizontal-track-width);\n    }\n\n    &__mark {\n      position: absolute;\n      width: 0.125rem;\n      height: 0.75rem;\n    }\n\n    &__handler {\n      transform: var(--va-slider-horizontal-handler-transform);\n\n      &--inactive {\n        transition: left 0.5s ease-out;\n      }\n\n      &__dot--value {\n        position: var(--va-slider-horizontal-dot-value-position);\n        top: var(--va-slider-horizontal-dot-value-top);\n        left: var(--va-slider-horizontal-dot-value-left);\n      }\n    }\n  }\n\n  .va-input__label {\n    margin-right: 1rem;\n  }\n\n  .va-input__label--inverse {\n    margin-left: 1rem;\n  }\n}\n\n.va-slider--vertical {\n  height: var(--va-slider-vertical-height);\n  padding: var(--va-slider-vertical-padding);\n  flex-direction: var(--va-slider-vertical-flex-direction);\n  align-items: var(--va-slider-vertical-align-items);\n\n  .va-input__label {\n    margin-bottom: var(--va-slider-vertical-label-margin-bottom);\n  }\n\n  .va-input__label--inverse {\n    left: var(--va-slider-vertical-label-inverse-left);\n    margin-top: var(--va-slider-vertical-label-inverse-margin-top);\n  }\n\n  .va-slider {\n    &__input-wrapper {\n      flex-basis: var(--va-slider-vertical-input-wrapper-flex-basis);\n      flex-grow: var(--va-slider-vertical-input-wrapper-flex-grow);\n      max-width: var(--va-slider-vertical-input-wrapper-max-width);\n      min-width: var(--va-slider-vertical-input-wrapper-min-width);\n      position: var(--va-slider-vertical-input-wrapper-position);\n      display: var(--va-slider-vertical-input-wrapper-display);\n\n      &:last-of-type {\n        margin-top: 1rem;\n      }\n    }\n\n    &__container {\n      height: 100%;\n      width: 0.5rem;\n    }\n\n    &__track {\n      height: var(--va-slider-vertical-track-height);\n      width: var(--va-slider-vertical-track-width);\n      bottom: var(--va-slider-vertical-track-bottom);\n    }\n\n    &__mark {\n      position: absolute;\n      width: 0.75rem;\n      height: 0.125rem;\n      left: -2px;\n    }\n\n    &__handler {\n      transform: var(--va-slider-vertical-handler-transform);\n\n      &--inactive {\n        transition: bottom 0.5s ease-out;\n      }\n\n      &__dot--value {\n        position: var(--va-slider-vertical-dot-value-position);\n        top: var(--va-slider-vertical-dot-value-top);\n        left: var(--va-slider-vertical-dot-value-left);\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaSlider from './VaSlider.vue'\n\nexport default withConfigTransport(VaSlider)\n"],"names":["validateSlider","value","step","min","max","warn","inRange","v","Array","isArray","map","defineComponent","name","components","VaIcon","emits","props","range","type","Boolean","default","modelValue","Number","trackLabel","Function","String","color","trackColor","labelColor","trackLabelVisible","label","invertLabel","disabled","readonly","pins","iconPrepend","iconAppend","vertical","showTrack","setup","emit","getColor","useColors","dot","ref","dot0","dot1","sliderContainer","isFocused","flag","offset","size","currentValue","currentSliderDotIndex","hasMouseDown","orders","computed","pinPositionStyle","trackSizeStyle","moreToLess","val","lessToMore","sliderClass","dotClass","labelStyles","trackStyles","backgroundColor","getHoverColor","processedStyles","validatedValue","limitValue","val0","val1","visibility","dottedStyles","isActiveDot","borderColor","get","set","gap","total","multiple","decimals","split","Math","pow","length","pinsCol","position","limit","valueLimit","index","moveStart","e","preventDefault","getPos","TouchEvent","touches","focus","moving","setValueOnPos","moveEnd","moveWithKeys","event","includes","document","activeElement","moveDot","isRange","where","which","splice","onePinInterval","nearestPinVal","key","isActive","el","isVerticalDot0More","isVerticalDot0Less","isVerticalDot1More","isVerticalDot1Less","isHorizontalDot0Less","isHorizontalDot0More","isHorizontalDot1Less","isHorizontalDot1More","checkActivePin","pin","pinPositionStep","getStaticData","clientY","clientX","getBoundingClientRect","getValueByIndex","setCurrentValue","newValue","slider","isDiff","pixelPosition","valueRange","dotToFocus","round","a","b","JSON","stringify","onMounted","addEventListener","onBeforeUnmount","removeEventListener","watch","documentElement","style","cursor","getPinStyles","transition","clickOnContainer","pos","getTrackLabel","order","_mergeProps","class","_ctx","append","prepend","i","undefined","withConfigTransport","VaSlider"],"mappings":"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"}