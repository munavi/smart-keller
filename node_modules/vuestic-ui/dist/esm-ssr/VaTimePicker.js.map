{"version":3,"file":"VaTimePicker.js","sources":["../../src/components/va-time-picker/hooks/useTimePicker.ts","../../src/components/va-time-picker/components/VaTimePickerColumn.vue","../../src/components/va-time-picker/components/VaTimePickerColumn.vue?vue&type=template&id=2e90f122&lang.js","../../src/components/va-time-picker/VaTimePicker.vue","../../src/components/va-time-picker/VaTimePicker.vue?vue&type=template&id=a2549b6e&lang.js"],"sourcesContent":["import { computed, ref, Ref, toRefs, watch } from 'vue'\n\ninterface TimePickerProps {\n  ampm: boolean;\n  hidePeriodSwitch: boolean;\n  periodUpdatesModelValue: boolean;\n  view: 'hours' | 'minutes' | 'seconds';\n  modelValue?: Date;\n  hoursFilter?: (h: number) => boolean,\n  minutesFilter?: (h: number) => boolean\n  secondsFilter?: (h: number) => boolean\n\n  readonly?: boolean;\n}\n\ntype ModelValueRef = Ref<Date | null | undefined>\n\n// Use safeModelValue if we need to update model value\nconst safeModelValue = (m: ModelValueRef) => m.value ? m.value : new Date(new Date().setHours(0, 0, 0, 0))\n\nconst createNumbersArray = (length: number) => Array\n  .from(Array(length).keys())\n\n/**\n * Convert 00:00 -> 12:00 am, 00:01 -> 01:00 am.\n * So we need to changed 12 and 0 between two formats\n */\nconst from24to12 = (h: number) => (h === 0 ? 12 : h) - Number(h > 12) * 12\nconst from12to24 = (h: number, isAM = false) => (h === 12 ? 0 : h) + Number(isAM) * 12\n\nconst createHoursColumn = (props: TimePickerProps, modelValue: ModelValueRef, isPM: Ref<boolean>) => {\n  const computedSize = computed(() => props.ampm ? 12 : 24)\n\n  const items = computed(() => {\n    let array = createNumbersArray(computedSize.value)\n\n    if (props.hoursFilter) {\n      array = array.filter((i) => props.hoursFilter!(props.ampm ? i + 12 * Number(isPM.value) : i))\n    }\n\n    return array.map((n) => {\n      return props.ampm ? from24to12(n) : n\n    })\n  })\n\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) { return -1 }\n\n      if (props.ampm) {\n        const h = from24to12(modelValue.value.getHours() - 12 * Number(isPM.value))\n        return items.value.findIndex((i) => i === h)\n      }\n\n      const h = modelValue.value.getHours()\n\n      return items.value.findIndex((i) => i === h)\n    },\n    set: (newIndex) => {\n      if (props.readonly) { return }\n\n      const hours = props.ampm ? from12to24(items.value[newIndex], isPM.value) : items.value[newIndex]\n\n      modelValue.value = new Date(safeModelValue(modelValue).setHours(hours))\n    },\n  })\n\n  return computed(() => ({\n    items: items.value,\n    activeItem: activeItem,\n  }))\n}\n\nconst createMinutesColumn = (props: TimePickerProps, modelValue: ModelValueRef) => {\n  const items = computed(() => {\n    const array = createNumbersArray(60)\n\n    if (!props.minutesFilter) { return array }\n\n    return array.filter(props.minutesFilter)\n  })\n\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) { return -1 }\n\n      const m = modelValue.value.getMinutes()\n\n      return items.value.findIndex((i) => i === m)\n    },\n    set: (newIndex) => {\n      if (props.readonly) { return }\n\n      const v = items.value[newIndex]\n\n      modelValue.value = new Date(safeModelValue(modelValue).setMinutes(v))\n    },\n  })\n\n  return computed(() => ({\n    items: items.value,\n    activeItem: activeItem,\n  }))\n}\n\nconst createSecondsColumn = (props: TimePickerProps, modelValue:ModelValueRef) => {\n  const items = computed(() => {\n    const array = createNumbersArray(60)\n\n    if (!props.secondsFilter) { return array }\n\n    return array.filter(props.secondsFilter)\n  })\n\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) { return -1 }\n\n      const s = modelValue.value.getSeconds()\n\n      return items.value.findIndex((i) => i === s)\n    },\n    set: (newIndex) => {\n      if (props.readonly) { return }\n\n      const v = items.value[newIndex]\n\n      modelValue.value = new Date(safeModelValue(modelValue).setSeconds(v))\n    },\n  })\n\n  return computed(() => ({\n    items: items.value,\n    activeItem: activeItem,\n  }))\n}\n\nconst createPeriodColumn = (props: TimePickerProps, modelValue: ModelValueRef, isPM: Ref<boolean>) => {\n  return computed(() => ({\n    items: ['AM', 'PM'],\n    activeItem: computed({\n      get: () => {\n        if (!modelValue.value) { return -1 }\n        return Number(isPM.value)\n      },\n      set: (val) => {\n        isPM.value = Boolean(val)\n        const h = safeModelValue(modelValue).getHours()\n        let h24 = isPM.value ? h + 12 : h\n\n        if (isPM.value && h <= 12) { h24 = h + 12 }\n        if (!isPM.value && h >= 12) { h24 = h - 12 }\n\n        // If there is no hoursFilter - it must be valid, otherwise validate hours\n        const isValidFilteredHour = !props.hoursFilter || props.hoursFilter(h24)\n\n        if (props.periodUpdatesModelValue && isValidFilteredHour) {\n          modelValue.value = new Date(safeModelValue(modelValue).setHours(h24))\n        }\n      },\n    }),\n  }))\n}\n\nexport const useTimePicker = (props: TimePickerProps, modelValue: ModelValueRef) => {\n  const { view } = toRefs(props)\n\n  const isPM = ref(false)\n  watch(modelValue, () => { isPM.value = safeModelValue(modelValue).getHours() >= 12 }, { immediate: true })\n\n  const hoursColumn = createHoursColumn(props, modelValue, isPM)\n  const minutesColumn = createMinutesColumn(props, modelValue)\n  const secondsColumn = createSecondsColumn(props, modelValue)\n  const periodColumn = createPeriodColumn(props, modelValue, isPM)\n\n  const columns = computed(() => {\n    const array = []\n\n    if (view.value === 'hours') {\n      array.push(hoursColumn.value)\n    } else if (view.value === 'minutes') {\n      array.push(hoursColumn.value, minutesColumn.value)\n    } else if (view.value === 'seconds') {\n      array.push(hoursColumn.value, minutesColumn.value, secondsColumn.value)\n    }\n    if (props.ampm && !props.hidePeriodSwitch) {\n      array.push(periodColumn.value)\n    }\n\n    return array\n  })\n\n  return {\n    columns,\n    isPM,\n  }\n}\n","<template>\n  <div\n    tabindex=\"0\"\n    class=\"va-time-picker-column\"\n    @keydown.down.stop.prevent=\"makeActiveNext()\"\n    @keydown.space.stop.prevent=\"makeActiveNext(5)\"\n    @keydown.up.stop.prevent=\"makeActivePrev()\"\n    ref=\"rootElement\"\n  >\n    <div class=\"va-time-picker-cell va-time-picker-cell--fake\" />\n    <div\n      v-for=\"(item, index) in items\" :key=\"item\"\n      :class=\"{\n        'va-time-picker-cell': true,\n        'va-time-picker-cell--active': index === $props.activeItemIndex\n      }\"\n      @click=\"onCellClick(index)\"\n    >\n      <slot name=\"cell\" v-bind=\"{ item, index, activeItemIndex, items, formattedItem: formatCell(item) }\">\n        {{ formatCell(item) }}\n      </slot>\n    </div>\n    <div class=\"va-time-picker-cell va-time-picker-cell--fake\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, onMounted, PropType, ref, watch } from 'vue'\nimport { useSyncProp } from '../../../composables/useSyncProp'\nimport { useFocus, useFocusEmits } from '../../../composables/useFocus'\n\nexport default defineComponent({\n  name: 'VaTimePickerColumn',\n\n  props: {\n    items: { type: Array as PropType<string[] | number[]>, default: () => [] },\n    activeItemIndex: { type: Number, default: 0 },\n  },\n\n  emits: ['item-selected', 'update:activeItemIndex', ...useFocusEmits],\n\n  setup (props, { emit }) {\n    const rootElement = ref<HTMLElement>()\n\n    // Will be used later, after fix 'withConfigTransport'\n    const { focus, blur } = useFocus(rootElement, emit)\n\n    const [syncActiveItemIndex] = useSyncProp('activeItemIndex', props, emit)\n\n    watch(syncActiveItemIndex, (newVal) => { scrollTo(newVal) })\n\n    onMounted(() => scrollTo(syncActiveItemIndex.value, false))\n\n    const scrollTo = (index: number, animate = true) => {\n      nextTick(() => {\n        const children = rootElement.value!.children\n\n        const element = children[index] as HTMLElement\n\n        if (!element) {\n          rootElement.value?.scrollTo({\n            behavior: animate ? 'smooth' : 'auto',\n            top: 0,\n          })\n          return\n        }\n\n        rootElement.value?.scrollTo({\n          behavior: animate ? 'smooth' : 'auto',\n          top: element.offsetTop - element.parentElement!.offsetTop,\n        })\n      })\n    }\n\n    const makeActiveByIndex = (index: number) => {\n      syncActiveItemIndex.value = index\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const makeActiveNext = (times?: number) => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value + (times || 1)) % props.items.length\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const makeActivePrev = (times?: number) => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value - (times || 1) + props.items.length) % props.items.length\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const onCellClick = (index: number) => {\n      syncActiveItemIndex.value = index\n    }\n\n    const formatCell = (n: number | string): string => {\n      if (!Number.isInteger(n)) { return n as string }\n\n      return n < 10 ? `0${n}` : `${n}`\n    }\n\n    return {\n      rootElement,\n\n      makeActiveNext,\n      makeActivePrev,\n      makeActiveByIndex,\n\n      onCellClick,\n      formatCell,\n\n      // Will be used later, after fix 'withConfigTransport'\n      // focus,\n      // blur,\n    }\n  },\n\n  // we will use this while we have problem with 'withConfigTransport'\n  methods: {\n    focus () { (this as any).rootElement?.focus() },\n    blur () { (this as any).rootElement?.blur() },\n  },\n})\n</script>\n\n<style lang=\"scss\">\n  @import './_variables.scss';\n\n  @mixin hiddenYScroll {\n    overflow-y: scroll;\n    -ms-overflow-style: none;  /* IE and Edge */\n    scrollbar-width: none;  /* Firefox */\n    &::-webkit-scrollbar { /* WebKit */\n      display: none;\n    }\n  }\n\n  .va-time-picker-column {\n    @include hiddenYScroll();\n\n    height: 100%;\n    border-right: var(--va-time-picker-column-border-right);\n\n    &:last-child {\n      border-right: 0;\n    }\n\n    .va-time-picker-cell {\n      height: var(--va-time-picker-cell-height);\n      line-height: var(--va-time-picker-cell-height);\n      width: var(--va-time-picker-cell-width);\n      text-align: center;\n      cursor: var(--va-time-picker-cell-cursor);\n      user-select: none;\n\n      &--active {\n        position: relative;\n        color: var(--va-time-picker-cell-active-color);\n        z-index: 0;\n\n        &::before {\n          background: var(--va-time-picker-cell-active-background);\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          left: 0;\n          right: 0;\n          content: '';\n          z-index: -1;\n          opacity: var(--va-time-picker-cell-active-background-opacity);\n        }\n      }\n\n      &--fake {\n        visibility: hidden;\n\n        &:last-child {\n          height: calc(100% - var(--va-time-picker-cell-height) * 2);\n        }\n      }\n\n      &:hover {\n        background: var(--va-time-picker-cell-background-color-hover);\n      }\n    }\n\n    &:focus {\n      .va-time-picker-cell {\n        &--active {\n          &::before {\n            opacity: var(--va-time-picker-cell-active-background-opacity-hover);\n          }\n        }\n      }\n    }\n  }\n</style>\n","<template>\n  <div\n    tabindex=\"0\"\n    class=\"va-time-picker-column\"\n    @keydown.down.stop.prevent=\"makeActiveNext()\"\n    @keydown.space.stop.prevent=\"makeActiveNext(5)\"\n    @keydown.up.stop.prevent=\"makeActivePrev()\"\n    ref=\"rootElement\"\n  >\n    <div class=\"va-time-picker-cell va-time-picker-cell--fake\" />\n    <div\n      v-for=\"(item, index) in items\" :key=\"item\"\n      :class=\"{\n        'va-time-picker-cell': true,\n        'va-time-picker-cell--active': index === $props.activeItemIndex\n      }\"\n      @click=\"onCellClick(index)\"\n    >\n      <slot name=\"cell\" v-bind=\"{ item, index, activeItemIndex, items, formattedItem: formatCell(item) }\">\n        {{ formatCell(item) }}\n      </slot>\n    </div>\n    <div class=\"va-time-picker-cell va-time-picker-cell--fake\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, onMounted, PropType, ref, watch } from 'vue'\nimport { useSyncProp } from '../../../composables/useSyncProp'\nimport { useFocus, useFocusEmits } from '../../../composables/useFocus'\n\nexport default defineComponent({\n  name: 'VaTimePickerColumn',\n\n  props: {\n    items: { type: Array as PropType<string[] | number[]>, default: () => [] },\n    activeItemIndex: { type: Number, default: 0 },\n  },\n\n  emits: ['item-selected', 'update:activeItemIndex', ...useFocusEmits],\n\n  setup (props, { emit }) {\n    const rootElement = ref<HTMLElement>()\n\n    // Will be used later, after fix 'withConfigTransport'\n    const { focus, blur } = useFocus(rootElement, emit)\n\n    const [syncActiveItemIndex] = useSyncProp('activeItemIndex', props, emit)\n\n    watch(syncActiveItemIndex, (newVal) => { scrollTo(newVal) })\n\n    onMounted(() => scrollTo(syncActiveItemIndex.value, false))\n\n    const scrollTo = (index: number, animate = true) => {\n      nextTick(() => {\n        const children = rootElement.value!.children\n\n        const element = children[index] as HTMLElement\n\n        if (!element) {\n          rootElement.value?.scrollTo({\n            behavior: animate ? 'smooth' : 'auto',\n            top: 0,\n          })\n          return\n        }\n\n        rootElement.value?.scrollTo({\n          behavior: animate ? 'smooth' : 'auto',\n          top: element.offsetTop - element.parentElement!.offsetTop,\n        })\n      })\n    }\n\n    const makeActiveByIndex = (index: number) => {\n      syncActiveItemIndex.value = index\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const makeActiveNext = (times?: number) => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value + (times || 1)) % props.items.length\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const makeActivePrev = (times?: number) => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value - (times || 1) + props.items.length) % props.items.length\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const onCellClick = (index: number) => {\n      syncActiveItemIndex.value = index\n    }\n\n    const formatCell = (n: number | string): string => {\n      if (!Number.isInteger(n)) { return n as string }\n\n      return n < 10 ? `0${n}` : `${n}`\n    }\n\n    return {\n      rootElement,\n\n      makeActiveNext,\n      makeActivePrev,\n      makeActiveByIndex,\n\n      onCellClick,\n      formatCell,\n\n      // Will be used later, after fix 'withConfigTransport'\n      // focus,\n      // blur,\n    }\n  },\n\n  // we will use this while we have problem with 'withConfigTransport'\n  methods: {\n    focus () { (this as any).rootElement?.focus() },\n    blur () { (this as any).rootElement?.blur() },\n  },\n})\n</script>\n\n<style lang=\"scss\">\n  @import './_variables.scss';\n\n  @mixin hiddenYScroll {\n    overflow-y: scroll;\n    -ms-overflow-style: none;  /* IE and Edge */\n    scrollbar-width: none;  /* Firefox */\n    &::-webkit-scrollbar { /* WebKit */\n      display: none;\n    }\n  }\n\n  .va-time-picker-column {\n    @include hiddenYScroll();\n\n    height: 100%;\n    border-right: var(--va-time-picker-column-border-right);\n\n    &:last-child {\n      border-right: 0;\n    }\n\n    .va-time-picker-cell {\n      height: var(--va-time-picker-cell-height);\n      line-height: var(--va-time-picker-cell-height);\n      width: var(--va-time-picker-cell-width);\n      text-align: center;\n      cursor: var(--va-time-picker-cell-cursor);\n      user-select: none;\n\n      &--active {\n        position: relative;\n        color: var(--va-time-picker-cell-active-color);\n        z-index: 0;\n\n        &::before {\n          background: var(--va-time-picker-cell-active-background);\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          left: 0;\n          right: 0;\n          content: '';\n          z-index: -1;\n          opacity: var(--va-time-picker-cell-active-background-opacity);\n        }\n      }\n\n      &--fake {\n        visibility: hidden;\n\n        &:last-child {\n          height: calc(100% - var(--va-time-picker-cell-height) * 2);\n        }\n      }\n\n      &:hover {\n        background: var(--va-time-picker-cell-background-color-hover);\n      }\n    }\n\n    &:focus {\n      .va-time-picker-cell {\n        &--active {\n          &::before {\n            opacity: var(--va-time-picker-cell-active-background-opacity-hover);\n          }\n        }\n      }\n    }\n  }\n</style>\n","<template>\n  <div class=\"va-time-picker\" :class=\"computedClass\">\n    <VaTimePickerColumn\n      v-for=\"(column, idx) in columns\" :key=\"idx\"\n      :ref=\"setItemRef\"\n      :items=\"column.items\"\n      :tabindex=\"disabled ? -1 : 0\"\n      v-model:activeItemIndex=\"column.activeItem.value\"\n      @keydown.right.stop.prevent=\"focusNext()\"\n      @keydown.tab.exact.stop.prevent=\"focusNext()\"\n      @keydown.left.stop.prevent=\"focusPrev()\"\n      @keydown.shift.tab.stop.prevent=\"focusPrev()\"\n      @focus=\"activeColumnIndex = idx\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref } from 'vue'\nimport { useTimePicker } from './hooks/useTimePicker'\nimport VaTimePickerColumn from './components/VaTimePickerColumn.vue'\nimport { useStateful, useStatefulEmits, useStatefulProps } from '../../composables/useStateful'\nimport { useFormProps, useForm } from '../../composables/useForm'\nimport { useArrayRefs } from '../../composables/useArrayRefs'\n\nexport default defineComponent({\n  name: 'VaTimePicker',\n\n  components: { VaTimePickerColumn },\n\n  props: {\n    ...useStatefulProps,\n    ...useFormProps,\n    modelValue: { type: Date, required: false },\n    ampm: { type: Boolean, default: false },\n    hidePeriodSwitch: { type: Boolean, default: false },\n    periodUpdatesModelValue: { type: Boolean, default: true }, // Update model value when switching period automatically\n    view: { type: String as PropType<'hours' | 'minutes' | 'seconds'>, default: 'minutes' },\n    hoursFilter: { type: Function as PropType<(h: number) => boolean> },\n    minutesFilter: { type: Function as PropType<(h: number) => boolean> },\n    secondsFilter: { type: Function as PropType<(h: number) => boolean> },\n  },\n\n  emits: useStatefulEmits,\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { columns, isPM } = useTimePicker(props, valueComputed)\n\n    const { setItemRef, itemRefs: pickers } = useArrayRefs()\n\n    const activeColumnIndex = ref<number | undefined>()\n\n    const focus = (idx = 0): void => {\n      pickers.value[idx]?.focus()\n    }\n\n    const blur = (idx?: number): void => {\n      idx ? pickers.value[idx]?.blur() : pickers.value.forEach((el) => el?.blur())\n    }\n\n    const { createComputedClass } = useForm(props)\n\n    const focusNext = () => {\n      const nextIndex = (activeColumnIndex?.value || 0) + 1\n      activeColumnIndex.value = nextIndex % columns.value.length\n      focus(activeColumnIndex.value)\n    }\n\n    const focusPrev = () => {\n      const nextIndex = (activeColumnIndex?.value || 0) - 1 + columns.value.length\n      activeColumnIndex.value = nextIndex % columns.value.length\n      focus(activeColumnIndex.value)\n    }\n\n    return {\n      columns,\n      computedClass: createComputedClass('va-time-picker'),\n      isPM,\n      pickers,\n      setItemRef,\n\n      focusNext,\n      focusPrev,\n      activeColumnIndex,\n\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n  @import './_variables.scss';\n\n  @mixin after-overlay {\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n  }\n\n  .va-time-picker {\n    display: var(--va-time-picker-display);\n    justify-content: center;\n    overflow: hidden;\n    height: var(--va-time-picker-height);\n    font-family: var(--va-font-family);\n\n    &--readonly {\n      @include after-overlay();\n    }\n\n    &--disabled {\n      @include after-overlay();\n\n      opacity: var(--va-time-picker-disabled-opacity);\n    }\n  }\n</style>\n","<template>\n  <div class=\"va-time-picker\" :class=\"computedClass\">\n    <VaTimePickerColumn\n      v-for=\"(column, idx) in columns\" :key=\"idx\"\n      :ref=\"setItemRef\"\n      :items=\"column.items\"\n      :tabindex=\"disabled ? -1 : 0\"\n      v-model:activeItemIndex=\"column.activeItem.value\"\n      @keydown.right.stop.prevent=\"focusNext()\"\n      @keydown.tab.exact.stop.prevent=\"focusNext()\"\n      @keydown.left.stop.prevent=\"focusPrev()\"\n      @keydown.shift.tab.stop.prevent=\"focusPrev()\"\n      @focus=\"activeColumnIndex = idx\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref } from 'vue'\nimport { useTimePicker } from './hooks/useTimePicker'\nimport VaTimePickerColumn from './components/VaTimePickerColumn.vue'\nimport { useStateful, useStatefulEmits, useStatefulProps } from '../../composables/useStateful'\nimport { useFormProps, useForm } from '../../composables/useForm'\nimport { useArrayRefs } from '../../composables/useArrayRefs'\n\nexport default defineComponent({\n  name: 'VaTimePicker',\n\n  components: { VaTimePickerColumn },\n\n  props: {\n    ...useStatefulProps,\n    ...useFormProps,\n    modelValue: { type: Date, required: false },\n    ampm: { type: Boolean, default: false },\n    hidePeriodSwitch: { type: Boolean, default: false },\n    periodUpdatesModelValue: { type: Boolean, default: true }, // Update model value when switching period automatically\n    view: { type: String as PropType<'hours' | 'minutes' | 'seconds'>, default: 'minutes' },\n    hoursFilter: { type: Function as PropType<(h: number) => boolean> },\n    minutesFilter: { type: Function as PropType<(h: number) => boolean> },\n    secondsFilter: { type: Function as PropType<(h: number) => boolean> },\n  },\n\n  emits: useStatefulEmits,\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { columns, isPM } = useTimePicker(props, valueComputed)\n\n    const { setItemRef, itemRefs: pickers } = useArrayRefs()\n\n    const activeColumnIndex = ref<number | undefined>()\n\n    const focus = (idx = 0): void => {\n      pickers.value[idx]?.focus()\n    }\n\n    const blur = (idx?: number): void => {\n      idx ? pickers.value[idx]?.blur() : pickers.value.forEach((el) => el?.blur())\n    }\n\n    const { createComputedClass } = useForm(props)\n\n    const focusNext = () => {\n      const nextIndex = (activeColumnIndex?.value || 0) + 1\n      activeColumnIndex.value = nextIndex % columns.value.length\n      focus(activeColumnIndex.value)\n    }\n\n    const focusPrev = () => {\n      const nextIndex = (activeColumnIndex?.value || 0) - 1 + columns.value.length\n      activeColumnIndex.value = nextIndex % columns.value.length\n      focus(activeColumnIndex.value)\n    }\n\n    return {\n      columns,\n      computedClass: createComputedClass('va-time-picker'),\n      isPM,\n      pickers,\n      setItemRef,\n\n      focusNext,\n      focusPrev,\n      activeColumnIndex,\n\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n  @import './_variables.scss';\n\n  @mixin after-overlay {\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n  }\n\n  .va-time-picker {\n    display: var(--va-time-picker-display);\n    justify-content: center;\n    overflow: hidden;\n    height: var(--va-time-picker-height);\n    font-family: var(--va-font-family);\n\n    &--readonly {\n      @include after-overlay();\n    }\n\n    &--disabled {\n      @include after-overlay();\n\n      opacity: var(--va-time-picker-disabled-opacity);\n    }\n  }\n</style>\n"],"names":["safeModelValue","m","value","Date","setHours","createNumbersArray","length","Array","from","keys","from24to12","h","Number","createHoursColumn","props","modelValue","isPM","computedSize","computed","ampm","items","array","hoursFilter","filter","i","map","n","activeItem","get","getHours","findIndex","set","newIndex","readonly","hours","isAM","from12to24","useTimePicker","view","toRefs","ref","watch","immediate","hoursColumn","minutesColumn","minutesFilter","getMinutes","v","setMinutes","createMinutesColumn","secondsColumn","secondsFilter","s","getSeconds","setSeconds","createSecondsColumn","periodColumn","val","Boolean","h24","isValidFilteredHour","periodUpdatesModelValue","createPeriodColumn","columns","push","hidePeriodSwitch","defineComponent","name","type","default","activeItemIndex","emits","useFocusEmits","setup","emit","rootElement","useFocus","syncActiveItemIndex","useSyncProp","newVal","scrollTo","onMounted","index","animate","nextTick","element","children","behavior","top","offsetTop","parentElement","makeActiveNext","times","makeActivePrev","makeActiveByIndex","onCellClick","formatCell","isInteger","methods","focus","this","blur","_mergeProps","tabindex","class","_ctx","item","components","VaTimePickerColumn","useStatefulProps","useFormProps","required","String","Function","useStatefulEmits","valueComputed","useStateful","setItemRef","itemRefs","pickers","useArrayRefs","activeColumnIndex","idx","createComputedClass","useForm","computedClass","focusNext","nextIndex","focusPrev","forEach","el","column","key"],"mappings":"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"}