{"version":3,"file":"index.js","sources":["../../src/components/va-color-indicator/VaColorIndicator.vue","../../src/components/va-color-indicator/VaColorIndicator.vue?vue&type=template&id=3a5f09c3&lang.js","../../src/components/va-color-indicator/index.ts"],"sourcesContent":["<template>\n  <div\n    class=\"va-color-indicator\"\n    @click=\"toggleModelValue\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n  >\n    <div\n      class=\"va-color-indicator__core\"\n      :style=\"computedStyle\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport { useColors } from '../../composables/useColor'\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables/useStateful'\n\nexport default defineComponent({\n  name: 'VaColorIndicator',\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Boolean, default: null },\n    color: { type: String, default: '' },\n    square: { type: Boolean, default: false },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => ({\n      borderRadius: props.square ? '0px' : '50%',\n      backgroundColor: colorComputed.value,\n    }))\n\n    const computedClass = computed(() => ({\n      'va-color-indicator--selected': valueComputed.value,\n      'va-color-indicator--hoverable': valueComputed.value !== undefined,\n    }))\n\n    const toggleModelValue = () => { valueComputed.value = !valueComputed.value }\n\n    return {\n      valueComputed,\n      computedStyle,\n      computedClass,\n      toggleModelValue,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-color-indicator {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 50%;\n  text-align: center;\n  background-color: #d8dadd;\n  border: 0.125rem solid #d8dadd;\n\n  &--selected {\n    background-color: $vue-darkest-blue;\n    border-color: $vue-darkest-blue;\n  }\n\n  &--hoverable &__core:hover {\n    transform: scale(1.1);\n    transition: transform 0.1s linear;\n  }\n\n  &__core {\n    transition: transform 0.1s linear;\n    border-radius: 50%;\n    width: 1rem;\n    height: 1rem;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-color-indicator\"\n    @click=\"toggleModelValue\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n  >\n    <div\n      class=\"va-color-indicator__core\"\n      :style=\"computedStyle\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport { useColors } from '../../composables/useColor'\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables/useStateful'\n\nexport default defineComponent({\n  name: 'VaColorIndicator',\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Boolean, default: null },\n    color: { type: String, default: '' },\n    square: { type: Boolean, default: false },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => ({\n      borderRadius: props.square ? '0px' : '50%',\n      backgroundColor: colorComputed.value,\n    }))\n\n    const computedClass = computed(() => ({\n      'va-color-indicator--selected': valueComputed.value,\n      'va-color-indicator--hoverable': valueComputed.value !== undefined,\n    }))\n\n    const toggleModelValue = () => { valueComputed.value = !valueComputed.value }\n\n    return {\n      valueComputed,\n      computedStyle,\n      computedClass,\n      toggleModelValue,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-color-indicator {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 50%;\n  text-align: center;\n  background-color: #d8dadd;\n  border: 0.125rem solid #d8dadd;\n\n  &--selected {\n    background-color: $vue-darkest-blue;\n    border-color: $vue-darkest-blue;\n  }\n\n  &--hoverable &__core:hover {\n    transform: scale(1.1);\n    transition: transform 0.1s linear;\n  }\n\n  &__core {\n    transition: transform 0.1s linear;\n    border-radius: 50%;\n    width: 1rem;\n    height: 1rem;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\n\nimport VaColorIndicatorComponent from './VaColorIndicator.vue'\n\nconst VaColorIndicator = withConfigTransport(VaColorIndicatorComponent)\nexport default VaColorIndicator\n"],"names":["defineComponent","name","emits","useStatefulEmits","props","useStatefulProps","modelValue","type","Boolean","default","color","String","square","setup","emit","valueComputed","useStateful","getColor","useColors","colorComputed","computed","computedStyle","borderRadius","backgroundColor","value","computedClass","undefined","toggleModelValue","_mergeProps","class","_ctx","style","VaColorIndicator","withConfigTransport","VaColorIndicatorComponent"],"mappings":"6VAoBA,MAAeA,EAAgB,CAC7BC,KAAM,mBACNC,MAAOC,EACPC,MAAO,IACFC,EACHC,WAAY,CAAEC,KAAMC,QAASC,QAAS,MACtCC,MAAO,CAAEH,KAAMI,OAAQF,QAAS,IAChCG,OAAQ,CAAEL,KAAMC,QAASC,SAAS,IAEpCI,MAAOT,GAAOU,KAAEA,IACd,MAAMC,cAAEA,GAAkBC,EAAYZ,EAAOU,IACvCG,SAAEA,GAAaC,IAEfC,EAAgBC,GAAS,IAAMH,EAASb,EAAMM,SAE9CW,EAAgBD,GAAS,MAC7BE,aAAclB,EAAMQ,OAAS,MAAQ,MACrCW,gBAAiBJ,EAAcK,UAG3BC,EAAgBL,GAAS,MAC7B,+BAAgCL,EAAcS,MAC9C,qCAAyDE,IAAxBX,EAAcS,UAKjD,MAAO,CACLT,cAAAA,EACAM,cAAAA,EACAI,cAAAA,EACAE,iBANuB,KAAQZ,EAAcS,OAAST,EAAcS,sEC5CxEI,GACEC,OAAM,qBAEEC,iBACPC,MAAOD,uEAIEA,2GCLRE,EAAmBC,EAAoBC"}