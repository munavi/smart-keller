{"version":3,"file":"flatten.js","sources":["../../../../node_modules/lodash/_isFlattenable.js","../../../../node_modules/lodash/_baseFlatten.js","../../../../node_modules/lodash/flatten.js"],"sourcesContent":["var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n"],"names":["isArguments","require$$1","isArray","require$$2","spreadableSymbol","require$$0","isConcatSpreadable","undefined","arrayPush","isFlattenable","value","baseFlatten","array","depth","predicate","isStrict","result","index","length","flatten_1","flatten"],"mappings":"4DAAA,IACIA,EAAcC,EACdC,EAAUC,EAGVC,EALSC,EAAAA,EAK0BC,wBAAqBC,MCLxDC,EAAYH,EACZI,EDaJ,SAASA,gBAAcC,GACrB,OAAOR,EAAQQ,IAAUV,EAAYU,OAChCN,GAAoBM,GAASA,EAAMN,SEhBtCO,EDcJ,SAASA,cAAYC,EAAOC,EAAOC,EAAWC,EAAUC,GACtD,IAAIC,GAAS,EACTC,EAASN,EAAMM,OAKnB,IAHAJ,IAAcA,EAAYL,GAC1BO,IAAWA,EAAS,MAEXC,EAAQC,GAAQ,CACvB,IAAIR,EAAQE,EAAMK,GACdJ,EAAQ,GAAKC,EAAUJ,GACrBG,EAAQ,EAEVF,cAAYD,EAAOG,EAAQ,EAAGC,EAAWC,EAAUC,GAEnDR,EAAUQ,EAAQN,GAEVK,IACVC,EAAOA,EAAOE,QAAUR,GAG5B,OAAOM,OCbTG,EALA,SAASC,QAAQR,GAEf,OADsB,MAATA,EAAgB,EAAIA,EAAMM,QACvBP,EAAYC,EAAO,GAAK"}