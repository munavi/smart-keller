{"version":3,"file":"pick.js","sources":["../../../../node_modules/lodash/_baseSet.js","../../../../node_modules/lodash/_basePickBy.js","../../../../node_modules/lodash/_hasPath.js","../../../../node_modules/lodash/hasIn.js","../../../../node_modules/lodash/_baseHasIn.js","../../../../node_modules/lodash/_basePick.js","../../../../node_modules/lodash/pick.js"],"sourcesContent":["var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n"],"names":["assignValue","require$$0","castPath","require$$1","isIndex","require$$2","isObject","require$$3","toKey","require$$4","baseGet","baseSet","object","path","value","customizer","index","length","lastIndex","nested","key","newValue","objValue","undefined","isArguments","isArray","isLength","require$$5","baseHasIn","Object","hasPath","hasFunc","result","basePickBy","paths","predicate","hasIn","basePick"],"mappings":"+HAAA,IAAIA,EAAcC,EACdC,EAAWC,EACXC,EAAUC,EACVC,EAAWC,EACXC,EAAQC,MCJRC,EAAUT,EACVU,EDeJ,SAASA,UAAQC,EAAQC,EAAMC,EAAOC,GACpC,IAAKT,EAASM,GACZ,OAAOA,EAST,IALA,IAAII,GAAS,EACTC,GAHJJ,EAAOX,EAASW,EAAMD,IAGJK,OACdC,EAAYD,EAAS,EACrBE,EAASP,EAEI,MAAVO,KAAoBH,EAAQC,GAAQ,CACzC,IAAIG,EAAMZ,EAAMK,EAAKG,IACjBK,EAAWP,EAEf,GAAY,cAARM,GAA+B,gBAARA,GAAiC,cAARA,EAClD,OAAOR,EAGT,GAAII,GAASE,EAAW,CACtB,IAAII,EAAWH,EAAOC,QAELG,KADjBF,EAAWN,EAAaA,EAAWO,EAAUF,EAAKD,QAAUI,KAE1DF,EAAWf,EAASgB,GAChBA,EACClB,EAAQS,EAAKG,EAAQ,IAAM,GAAK,IAGzChB,EAAYmB,EAAQC,EAAKC,GACzBF,EAASA,EAAOC,GAElB,OAAOR,GC7CLV,EAAWG,MCFXH,EAAWD,EACXuB,EAAcrB,EACdsB,EAAUpB,EACVD,EAAUG,EACVmB,EAAWjB,EACXD,EAAQmB,MCLRC,ECQJ,SAASA,YAAUhB,EAAQQ,GACzB,OAAiB,MAAVR,GAAkBQ,KAAOS,OAAOjB,IDRrCkB,EDeJ,SAASA,UAAQlB,EAAQC,EAAMkB,GAO7B,IAJA,IAAIf,GAAS,EACTC,GAHJJ,EAAOX,EAASW,EAAMD,IAGJK,OACde,GAAS,IAEJhB,EAAQC,GAAQ,CACvB,IAAIG,EAAMZ,EAAMK,EAAKG,IACrB,KAAMgB,EAAmB,MAAVpB,GAAkBmB,EAAQnB,EAAQQ,IAC/C,MAEFR,EAASA,EAAOQ,GAElB,OAAIY,KAAYhB,GAASC,EAChBe,KAETf,EAAmB,MAAVL,EAAiB,EAAIA,EAAOK,SAClBS,EAAST,IAAWb,EAAQgB,EAAKH,KACjDQ,EAAQb,IAAWY,EAAYZ,SGnChCqB,EJaJ,SAASA,aAAWrB,EAAQsB,EAAOC,GAKjC,IAJA,IAAInB,GAAS,EACTC,EAASiB,EAAMjB,OACfe,EAAS,KAEJhB,EAAQC,GAAQ,CACvB,IAAIJ,EAAOqB,EAAMlB,GACbF,EAAQJ,EAAQE,EAAQC,GAExBsB,EAAUrB,EAAOD,IACnBF,EAAQqB,EAAQ9B,EAASW,EAAMD,GAASE,GAG5C,OAAOkB,GIzBLI,EF4BJ,SAASA,QAAMxB,EAAQC,GACrB,OAAiB,MAAVD,GAAkBkB,EAAQlB,EAAQC,EAAMe,QG9B7CS,EDYJ,SAASA,WAASzB,EAAQsB,GACxB,OAAOD,EAAWrB,EAAQsB,GAAO,SAASpB,EAAOD,GAC/C,OAAOuB,EAAMxB,EAAQC,SCbVV,GAmBK,SAASS,EAAQsB,GACnC,OAAiB,MAAVtB,EAAiB,GAAKyB,EAASzB,EAAQsB"}