{"version":3,"file":"index6.js","sources":["../../src/components/va-avatar/VaAvatar.vue","../../src/components/va-avatar/VaAvatar.vue?vue&type=template&id=98de6a30&lang.js","../../src/components/va-avatar/index.ts"],"sourcesContent":["<template>\n  <div\n    class=\"va-avatar\"\n    :style=\"computedStyle\"\n  >\n    <slot>\n      <va-progress-circle\n        v-if=\"$props.loading\"\n        :size=\"sizeComputed\"\n        :color=\"colorComputed\"\n        indeterminate\n      />\n      <img\n        v-else-if=\"src\"\n        :src=\"src\"\n      >\n      <va-icon\n        v-else-if=\"icon\"\n        :name=\"icon\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport { useColors } from '../../composables/useColor'\nimport { useSize, useSizeProps } from '../../composables/useSize'\nimport { useLoadingProps } from '../../composables/useLoading'\nimport { useTextColor } from '../../composables/useTextColor'\n\nimport VaIcon from '../va-icon'\nimport { VaProgressCircle } from '../va-progress-circle'\n\nexport default defineComponent({\n  name: 'VaAvatar',\n  components: { VaIcon, VaProgressCircle },\n  props: {\n    ...useLoadingProps,\n    ...useSizeProps,\n    color: { type: String as PropType<string>, default: 'info' },\n    textColor: { type: String as PropType<string>, default: 'white' },\n    square: { type: Boolean as PropType<boolean>, default: false },\n    icon: { type: String as PropType<string>, default: '' },\n    src: { type: String as PropType<string>, default: null },\n    fontSize: { type: String as PropType<string>, default: '' },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const { sizeComputed, fontSizeComputed } = useSize(props, 'VaAvatar')\n    const { textColorComputed } = useTextColor(props.color)\n\n    const computedStyle = computed(() => ({\n      color: textColorComputed.value,\n      backgroundColor: props.loading ? 'transparent' : colorComputed.value,\n      borderRadius: props.square ? 0 : '',\n      fontSize: props.fontSize || fontSizeComputed.value,\n      width: sizeComputed.value,\n      minWidth: sizeComputed.value, // We only define width because common use case would be flex row, for column we expect user to set appropriate styling externally.\n      height: sizeComputed.value,\n    }))\n\n    return {\n      sizeComputed,\n      computedStyle,\n      colorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-avatar {\n  align-items: var(--va-avatar-align-items);\n  display: var(--va-avatar-display);\n  justify-content: var(--va-avatar-justify-content);\n  line-height: var(--va-avatar-line-height);\n  position: var(--va-avatar-position);\n  text-align: var(--va-avatar-text-align);\n  vertical-align: var(--va-avatar-vertical-align);\n  border-radius: var(--va-avatar-border-radius);\n  font-family: var(--va-font-family);\n\n  img,\n  svg {\n    border-radius: inherit;\n    display: inline-flex;\n    height: inherit;\n    width: inherit;\n    margin: auto;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-avatar\"\n    :style=\"computedStyle\"\n  >\n    <slot>\n      <va-progress-circle\n        v-if=\"$props.loading\"\n        :size=\"sizeComputed\"\n        :color=\"colorComputed\"\n        indeterminate\n      />\n      <img\n        v-else-if=\"src\"\n        :src=\"src\"\n      >\n      <va-icon\n        v-else-if=\"icon\"\n        :name=\"icon\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport { useColors } from '../../composables/useColor'\nimport { useSize, useSizeProps } from '../../composables/useSize'\nimport { useLoadingProps } from '../../composables/useLoading'\nimport { useTextColor } from '../../composables/useTextColor'\n\nimport VaIcon from '../va-icon'\nimport { VaProgressCircle } from '../va-progress-circle'\n\nexport default defineComponent({\n  name: 'VaAvatar',\n  components: { VaIcon, VaProgressCircle },\n  props: {\n    ...useLoadingProps,\n    ...useSizeProps,\n    color: { type: String as PropType<string>, default: 'info' },\n    textColor: { type: String as PropType<string>, default: 'white' },\n    square: { type: Boolean as PropType<boolean>, default: false },\n    icon: { type: String as PropType<string>, default: '' },\n    src: { type: String as PropType<string>, default: null },\n    fontSize: { type: String as PropType<string>, default: '' },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const { sizeComputed, fontSizeComputed } = useSize(props, 'VaAvatar')\n    const { textColorComputed } = useTextColor(props.color)\n\n    const computedStyle = computed(() => ({\n      color: textColorComputed.value,\n      backgroundColor: props.loading ? 'transparent' : colorComputed.value,\n      borderRadius: props.square ? 0 : '',\n      fontSize: props.fontSize || fontSizeComputed.value,\n      width: sizeComputed.value,\n      minWidth: sizeComputed.value, // We only define width because common use case would be flex row, for column we expect user to set appropriate styling externally.\n      height: sizeComputed.value,\n    }))\n\n    return {\n      sizeComputed,\n      computedStyle,\n      colorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-avatar {\n  align-items: var(--va-avatar-align-items);\n  display: var(--va-avatar-display);\n  justify-content: var(--va-avatar-justify-content);\n  line-height: var(--va-avatar-line-height);\n  position: var(--va-avatar-position);\n  text-align: var(--va-avatar-text-align);\n  vertical-align: var(--va-avatar-vertical-align);\n  border-radius: var(--va-avatar-border-radius);\n  font-family: var(--va-font-family);\n\n  img,\n  svg {\n    border-radius: inherit;\n    display: inline-flex;\n    height: inherit;\n    width: inherit;\n    margin: auto;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaAvatar from './VaAvatar.vue'\n\nexport default withConfigTransport(VaAvatar)\n"],"names":["defineComponent","name","components","VaIcon","VaProgressCircle","props","useLoadingProps","useSizeProps","color","type","String","default","textColor","square","Boolean","icon","src","fontSize","setup","getColor","useColors","colorComputed","computed","sizeComputed","fontSizeComputed","useSize","textColorComputed","useTextColor","computedStyle","value","backgroundColor","loading","borderRadius","width","minWidth","height","_createElementBlock","class","style","_ctx","_renderSlot","_createBlock","size","indeterminate","withConfigTransport","VaAvatar"],"mappings":"goBAmCA,MAAeA,EAAgB,CAC7BC,KAAM,WACNC,WAAY,CAAEC,OAAAA,EAAQC,iBAAAA,GACtBC,MAAO,IACFC,KACAC,EACHC,MAAO,CAAEC,KAAMC,OAA4BC,QAAS,QACpDC,UAAW,CAAEH,KAAMC,OAA4BC,QAAS,SACxDE,OAAQ,CAAEJ,KAAMK,QAA8BH,SAAS,GACvDI,KAAM,CAAEN,KAAMC,OAA4BC,QAAS,IACnDK,IAAK,CAAEP,KAAMC,OAA4BC,QAAS,MAClDM,SAAU,CAAER,KAAMC,OAA4BC,QAAS,KAEzDO,MAAOb,GACL,MAAMc,SAAEA,GAAaC,IACfC,EAAgBC,GAAS,IAAMH,EAASd,EAAMG,UAC9Ce,aAAEA,EAAYC,iBAAEA,GAAqBC,EAAQpB,EAAO,aACpDqB,kBAAEA,GAAsBC,EAAatB,EAAMG,OAE3CoB,EAAgBN,GAAS,MAC7Bd,MAAOkB,EAAkBG,MACzBC,gBAAiBzB,EAAM0B,QAAU,cAAgBV,EAAcQ,MAC/DG,aAAc3B,EAAMQ,OAAS,EAAI,GACjCI,SAAUZ,EAAMY,UAAYO,EAAiBK,MAC7CI,MAAOV,EAAaM,MACpBK,SAAUX,EAAaM,MACvBM,OAAQZ,EAAaM,UAGvB,MAAO,CACLN,aAAAA,EACAK,cAAAA,EACAP,cAAAA,sHClEJe,SACEC,MAAM,YACLC,QAAOC,mBAERC,yBAAA,KAEUD,SAAc,aADtBE,WAEGC,KAAMH,eACN/B,MAAO+B,gBACRI,cAAA,8BAGWJ,EAAG,SADhBH,eAEGpB,IAAKuB,kBAGKA,EAAI,UADjBE,WAEGxC,KAAMsC,gGCff,MAAeK,EAAoBC"}