{"version":3,"file":"useHover.js","sources":["../../src/composables/useHover.ts"],"sourcesContent":["import { ref, onMounted, onBeforeUnmount, Ref } from 'vue'\n\nexport function useHover (el?: Ref<HTMLElement | null | undefined>) {\n  const isHovered = ref(false)\n\n  const onMouseEnter = () => { isHovered.value = true }\n  const onMouseLeave = () => { isHovered.value = false }\n\n  if (el) {\n    onMounted(() => {\n      el.value?.addEventListener('mouseenter', onMouseEnter)\n      el.value?.addEventListener('mouseleave', onMouseLeave)\n    })\n    onBeforeUnmount(() => {\n      el.value?.removeEventListener('mouseenter', onMouseEnter)\n      el.value?.removeEventListener('mouseleave', onMouseLeave)\n    })\n  }\n\n  return {\n    isHovered,\n    onMouseEnter,\n    onMouseLeave,\n  }\n}\n"],"names":["useHover","el","isHovered","ref","onMouseEnter","value","onMouseLeave","onMounted","addEventListener","onBeforeUnmount","removeEventListener"],"mappings":"uEAEgBA,SAAUC,GACxB,MAAMC,EAAYC,GAAI,GAEhBC,aAAe,KAAQF,EAAUG,OAAQ,GACzCC,aAAe,KAAQJ,EAAUG,OAAQ,GAa/C,OAXIJ,IACFM,GAAU,uBACRN,EAAGI,sBAAOG,iBAAiB,aAAcJ,wBACzCH,EAAGI,sBAAOG,iBAAiB,aAAcF,iBAE3CG,GAAgB,uBACdR,EAAGI,sBAAOK,oBAAoB,aAAcN,wBAC5CH,EAAGI,sBAAOK,oBAAoB,aAAcJ,kBAIzC,CACLJ,UAAAA,EACAE,aAAAA,aACAE,aAAAA"}